2025-04-09 10:22:23 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 10:22:23 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 13500 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 10:22:23 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 10:22:23 | INFO  | The following 1 profile is active: "local"
2025-04-09 10:22:25 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 10:22:26 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 10:22:26 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 10:22:26 | INFO  | Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2025-04-09 10:22:26 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 10:22:27 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 10:22:27 | DEBUG | Starting without optional kqueue library
2025-04-09 10:22:27 | DEBUG | Starting without optional io_uring library
2025-04-09 10:22:27 | DEBUG | Starting without optional epoll library
2025-04-09 10:22:27 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 10:22:27 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 10:22:27 | DEBUG | Starting with JFR support
2025-04-09 10:22:28 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:22:28 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:22:28 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:22:28 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@1c411474, existing ref count 0
2025-04-09 10:22:28 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:22:28 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 10:22:28 | DEBUG | [channel=0x543046a2, [id: 0x29cf26c5] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:22:29 | DEBUG | Decode done, empty stack: true
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 10:22:29 | DEBUG | Decode done, empty stack: true
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:22:29 | DEBUG | Decode done, empty stack: true
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 10:22:29 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 10:22:29 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:22:29 | DEBUG | Decode done, empty stack: true
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:22:29 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:30 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:22:30 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:22:30 | DEBUG | Decode done, empty stack: true
2025-04-09 10:22:30 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:22:30 | INFO  | 

Using generated security password: 37266a34-24b9-476d-9c8d-bb882c7cf3f9

2025-04-09 10:22:31 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 10:22:32 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 10:22:34 | INFO  | Netty started on port 8080 (http)
2025-04-09 10:22:34 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 10:22:34 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 10:22:34 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 10:22:34 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 10:22:34 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 10:22:34 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 10:22:34 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 10:22:34 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 10:22:34 | DEBUG | New routes count: 3
2025-04-09 10:22:34 | INFO  | Started ApiGatewayApplication in 12.392 seconds (process running for 23.05)
2025-04-09 10:29:10 | TRACE | Weights attr: {}
2025-04-09 10:29:10 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 10:29:10 | DEBUG | Route matched: user-service-route
2025-04-09 10:29:10 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 10:29:10 | DEBUG | [ac70299a-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@62732be7
2025-04-09 10:29:10 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@3b0c38f2}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@70e8c019}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@248b2091}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4b86a656}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4797023d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@5cc152f9}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@55cc4c61}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1117cc7c}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@42150951}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@36f497b1}, order = 2147483647]]
2025-04-09 10:29:10 | TRACE | RouteToRequestUrlFilter start
2025-04-09 10:29:10 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"55", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744169348.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55537"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:29:10 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0017474, duration(nanos)=1747400.0, startTimeNanos=378014960342500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@40cec744'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2b445194} created for the request. New headers are [host:"localhost:8080", content-length:"55", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744169348.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55537"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:29:10 | TRACE | outbound route: b249b899, inbound: [ac70299a-3] 
2025-04-09 10:29:11 | DEBUG | Will instrument the response
2025-04-09 10:29:11 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.3652919, duration(nanos)=1.3652919E9, startTimeNanos=378014960342500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@40cec744'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2b445194}
2025-04-09 10:29:11 | TRACE | NettyWriteResponseFilter start inbound: b249b899, outbound: [ac70299a-3] 
2025-04-09 10:29:11 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 10:39:35 | TRACE | Weights attr: {}
2025-04-09 10:39:35 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 10:39:35 | DEBUG | Route matched: user-service-route
2025-04-09 10:39:35 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 10:39:35 | DEBUG | [81d8a4f3-8] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@62732be7
2025-04-09 10:39:35 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@3b0c38f2}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@70e8c019}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@248b2091}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4b86a656}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4797023d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@5cc152f9}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@55cc4c61}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1117cc7c}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@42150951}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@36f497b1}, order = 2147483647]]
2025-04-09 10:39:35 | TRACE | RouteToRequestUrlFilter start
2025-04-09 10:39:35 | DEBUG | Will instrument the HTTP request headers [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"87730b4c-1c0e-4ed4-8f16-55e155ea5006", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56025"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:39:35 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.339E-4, duration(nanos)=133900.0, startTimeNanos=378640667377900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@14fea2ab'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1a394e44} created for the request. New headers are [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"87730b4c-1c0e-4ed4-8f16-55e155ea5006", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56025"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:39:35 | TRACE | outbound route: 5f159e84, inbound: [81d8a4f3-8] 
2025-04-09 10:39:36 | DEBUG | Will instrument the response
2025-04-09 10:39:36 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3152603, duration(nanos)=3.152603E8, startTimeNanos=378640667377900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@14fea2ab'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1a394e44}
2025-04-09 10:39:36 | TRACE | NettyWriteResponseFilter start inbound: 5f159e84, outbound: [81d8a4f3-8] 
2025-04-09 10:39:36 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 10:39:47 | TRACE | Weights attr: {}
2025-04-09 10:39:47 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 10:39:47 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 10:39:47 | DEBUG | Route matched: account-service-route
2025-04-09 10:39:47 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 10:39:47 | DEBUG | [81d8a4f3-9] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@62732be7
2025-04-09 10:39:47 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@3b0c38f2}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@70e8c019}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@248b2091}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4b86a656}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4797023d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@5cc152f9}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@55cc4c61}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1117cc7c}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@42150951}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@36f497b1}, order = 2147483647]]
2025-04-09 10:39:47 | TRACE | RouteToRequestUrlFilter start
2025-04-09 10:39:47 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"926e13e1-752a-48ff-a82d-916c7e06b9c8", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56025"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:39:47 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.045E-4, duration(nanos)=104500.0, startTimeNanos=378651996416400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@9733eaa'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1be2169b} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"926e13e1-752a-48ff-a82d-916c7e06b9c8", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56025"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:39:47 | TRACE | outbound route: 50b1a407, inbound: [81d8a4f3-9] 
2025-04-09 10:39:48 | DEBUG | Will instrument the response
2025-04-09 10:39:48 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.925314, duration(nanos)=9.25314E8, startTimeNanos=378651996416400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@9733eaa'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1be2169b}
2025-04-09 10:39:48 | TRACE | NettyWriteResponseFilter start inbound: 50b1a407, outbound: [81d8a4f3-9] 
2025-04-09 10:39:48 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 10:42:46 | TRACE | Weights attr: {}
2025-04-09 10:42:46 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 10:42:46 | DEBUG | Route matched: user-service-route
2025-04-09 10:42:46 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 10:42:46 | DEBUG | [97d5a3dd-10] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@62732be7
2025-04-09 10:42:46 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@3b0c38f2}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@70e8c019}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@248b2091}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4b86a656}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4797023d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@5cc152f9}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@55cc4c61}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1117cc7c}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@42150951}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@36f497b1}, order = 2147483647]]
2025-04-09 10:42:46 | TRACE | RouteToRequestUrlFilter start
2025-04-09 10:42:46 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"55", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744170162.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56146"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:42:46 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.354E-4, duration(nanos)=135400.0, startTimeNanos=378831240120400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5f6b715a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@51ac84c7} created for the request. New headers are [host:"localhost:8080", content-length:"55", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744170162.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56146"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:42:46 | TRACE | outbound route: 77f06859, inbound: [97d5a3dd-10] 
2025-04-09 10:42:46 | DEBUG | Will instrument the response
2025-04-09 10:42:46 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.2976423, duration(nanos)=2.976423E8, startTimeNanos=378831240120400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5f6b715a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@51ac84c7}
2025-04-09 10:42:46 | TRACE | NettyWriteResponseFilter start inbound: 77f06859, outbound: [97d5a3dd-10] 
2025-04-09 10:42:46 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 10:54:27 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 10:54:27 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 10:54:27 | INFO  | Graceful shutdown complete
2025-04-09 10:54:27 | DEBUG | closeAsync()
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 10:54:27 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 10:54:27 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@1c411474
2025-04-09 10:54:29 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 10:54:29 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 10:54:36 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 10:54:36 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 15272 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 10:54:36 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 10:54:36 | INFO  | The following 1 profile is active: "local"
2025-04-09 10:54:37 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 10:54:37 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 10:54:37 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 10:54:37 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 10:54:37 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 10:54:38 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 10:54:38 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 10:54:38 | INFO  | Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2025-04-09 10:54:39 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 10:54:39 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 10:54:39 | DEBUG | Starting without optional kqueue library
2025-04-09 10:54:39 | DEBUG | Starting without optional io_uring library
2025-04-09 10:54:39 | DEBUG | Starting without optional epoll library
2025-04-09 10:54:39 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 10:54:39 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 10:54:40 | DEBUG | Starting with JFR support
2025-04-09 10:54:40 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:54:40 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:54:40 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:54:40 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@5c25daad, existing ref count 0
2025-04-09 10:54:40 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:54:40 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, [id: 0x7595477c] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:54:41 | DEBUG | Decode done, empty stack: true
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 10:54:41 | DEBUG | Decode done, empty stack: true
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:54:41 | DEBUG | Decode done, empty stack: true
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 10:54:41 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 10:54:41 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:54:42 | DEBUG | Decode done, empty stack: true
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:54:42 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:54:42 | DEBUG | Decode done, empty stack: true
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:54:42 | INFO  | 

Using generated security password: f8d91081-9ba2-4feb-9f46-d52511d6395f

2025-04-09 10:54:43 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 10:54:44 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 10:54:44 | INFO  | Netty started on port 8080 (http)
2025-04-09 10:54:44 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 10:54:44 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 10:54:44 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 10:54:44 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 10:54:44 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 10:54:44 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 10:54:44 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 10:54:44 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 10:54:44 | DEBUG | New routes count: 3
2025-04-09 10:54:44 | INFO  | Started ApiGatewayApplication in 9.792 seconds (process running for 12.168)
2025-04-09 10:55:33 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 10:55:33 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 10:55:33 | INFO  | Graceful shutdown complete
2025-04-09 10:55:33 | DEBUG | closeAsync()
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 10:55:33 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 10:55:33 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@5c25daad
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 10:55:36 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 10:55:36 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 10:55:46 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 10:55:46 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 760 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 10:55:46 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 10:55:46 | INFO  | The following 1 profile is active: "local"
2025-04-09 10:55:47 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 10:55:47 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 10:55:47 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 10:55:47 | INFO  | Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-04-09 10:55:48 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 10:55:48 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 10:55:48 | DEBUG | Starting without optional kqueue library
2025-04-09 10:55:48 | DEBUG | Starting without optional io_uring library
2025-04-09 10:55:48 | DEBUG | Starting without optional epoll library
2025-04-09 10:55:48 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 10:55:48 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 10:55:48 | DEBUG | Starting with JFR support
2025-04-09 10:55:49 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:55:49 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:55:49 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:55:49 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@2864d34d, existing ref count 0
2025-04-09 10:55:49 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:55:49 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, [id: 0x769c5c91] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:55:50 | DEBUG | Decode done, empty stack: true
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 10:55:50 | DEBUG | Decode done, empty stack: true
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:55:50 | DEBUG | Decode done, empty stack: true
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 10:55:50 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 10:55:50 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:55:51 | DEBUG | Decode done, empty stack: true
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:55:51 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:55:51 | DEBUG | Decode done, empty stack: true
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:55:51 | INFO  | 

Using generated security password: 0f44d3bc-0291-4007-83f9-6d49221ac563

2025-04-09 10:55:52 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 10:55:52 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 10:55:53 | INFO  | Netty started on port 8080 (http)
2025-04-09 10:55:53 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 10:55:53 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 10:55:53 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 10:55:53 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 10:55:53 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 10:55:53 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 10:55:53 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 10:55:53 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 10:55:53 | DEBUG | New routes count: 3
2025-04-09 10:55:53 | INFO  | Started ApiGatewayApplication in 8.558 seconds (process running for 11.718)
2025-04-09 11:11:19 | TRACE | Weights attr: {}
2025-04-09 11:11:19 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:19 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:19 | DEBUG | Route matched: account-service-route
2025-04-09 11:11:19 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:11:19 | DEBUG | [974c97f3-7] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:11:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:11:19 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:11:19 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171877.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57129"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@68190989', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0014124, duration(nanos)=1412400.0, startTimeNanos=380544268450900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@512eaf8a} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171877.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57129"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:19 | TRACE | outbound route: fcf5eadd, inbound: [974c97f3-7] 
2025-04-09 11:11:19 | DEBUG | Will instrument the response
2025-04-09 11:11:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@68190989', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.278534, duration(nanos)=2.78534E8, startTimeNanos=380544268450900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@512eaf8a}
2025-04-09 11:11:19 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [974c97f3-7] 
2025-04-09 11:11:19 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:11:19 | TRACE | Weights attr: {}
2025-04-09 11:11:19 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:19 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:19 | DEBUG | Route matched: account-service-route
2025-04-09 11:11:19 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:11:19 | DEBUG | [31db559b-8] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:11:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:11:19 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:11:19 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171877.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57131"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@67cb526e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.208E-4, duration(nanos)=120800.0, startTimeNanos=380544755205500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@690ca0e7} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171877.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57131"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:19 | TRACE | outbound route: fcf5eadd, inbound: [31db559b-8] 
2025-04-09 11:11:20 | DEBUG | Will instrument the response
2025-04-09 11:11:20 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@67cb526e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1176608, duration(nanos)=1.176608E8, startTimeNanos=380544755205500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@690ca0e7}
2025-04-09 11:11:20 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [31db559b-8] 
2025-04-09 11:11:20 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:11:30 | TRACE | Weights attr: {}
2025-04-09 11:11:30 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:30 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:30 | DEBUG | Route matched: account-service-route
2025-04-09 11:11:30 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:11:30 | DEBUG | [a3512fcf-9] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:11:30 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:11:30 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:11:30 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171889.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57150"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:30 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1442dd9a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.196E-4, duration(nanos)=219600.0, startTimeNanos=380555748664900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1a853162} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171889.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57150"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:30 | TRACE | outbound route: fcf5eadd, inbound: [a3512fcf-9] 
2025-04-09 11:11:31 | DEBUG | Will instrument the response
2025-04-09 11:11:31 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1442dd9a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1246532, duration(nanos)=1.246532E8, startTimeNanos=380555748664900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1a853162}
2025-04-09 11:11:31 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [a3512fcf-9] 
2025-04-09 11:11:31 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:11:31 | TRACE | Weights attr: {}
2025-04-09 11:11:31 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:31 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:31 | DEBUG | Route matched: account-service-route
2025-04-09 11:11:31 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:11:31 | DEBUG | [36beaf34-10] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:11:31 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:11:31 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:11:31 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171889.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57152"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:31 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2d28e91c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0027845, duration(nanos)=2784500.0, startTimeNanos=380556052044500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@23ef02c9} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171889.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57152"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:31 | TRACE | outbound route: fcf5eadd, inbound: [36beaf34-10] 
2025-04-09 11:11:31 | DEBUG | Will instrument the response
2025-04-09 11:11:31 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2d28e91c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.113756, duration(nanos)=1.13756E8, startTimeNanos=380556052044500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@23ef02c9}
2025-04-09 11:11:31 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [36beaf34-10] 
2025-04-09 11:11:31 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:12:18 | TRACE | Weights attr: {}
2025-04-09 11:12:18 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:18 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:18 | DEBUG | Route matched: account-service-route
2025-04-09 11:12:18 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:12:18 | DEBUG | [a8945407-11] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:12:18 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:12:18 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:12:18 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171890.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57189"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:18 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3852ea04', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.69E-5, duration(nanos)=96900.0, startTimeNanos=380603186814400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1e4ef713} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171890.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57189"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:18 | TRACE | outbound route: fcf5eadd, inbound: [a8945407-11] 
2025-04-09 11:12:18 | DEBUG | Will instrument the response
2025-04-09 11:12:18 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3852ea04', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1284343, duration(nanos)=1.284343E8, startTimeNanos=380603186814400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1e4ef713}
2025-04-09 11:12:18 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [a8945407-11] 
2025-04-09 11:12:18 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:12:18 | TRACE | Weights attr: {}
2025-04-09 11:12:18 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:18 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:18 | DEBUG | Route matched: account-service-route
2025-04-09 11:12:18 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:12:18 | DEBUG | [72a64e66-12] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:12:18 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:12:18 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:12:18 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171890.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57190"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:18 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1554c596', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.897E-4, duration(nanos)=289700.0, startTimeNanos=380603369518700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@19d34443} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171890.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57190"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:18 | TRACE | outbound route: fcf5eadd, inbound: [72a64e66-12] 
2025-04-09 11:12:18 | DEBUG | Will instrument the response
2025-04-09 11:12:18 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1554c596', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1043142, duration(nanos)=1.043142E8, startTimeNanos=380603369518700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@19d34443}
2025-04-09 11:12:18 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [72a64e66-12] 
2025-04-09 11:12:18 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:12:42 | TRACE | Weights attr: {}
2025-04-09 11:12:42 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:42 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:42 | DEBUG | Route matched: account-service-route
2025-04-09 11:12:42 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:12:42 | DEBUG | [2adeca8f-13] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:12:42 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:12:42 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:12:42 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171938.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57212"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:42 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5bb83b59', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.012E-4, duration(nanos)=101200.0, startTimeNanos=380627149039300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@599493b9} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171938.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57212"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:42 | TRACE | outbound route: fcf5eadd, inbound: [2adeca8f-13] 
2025-04-09 11:12:42 | DEBUG | Will instrument the response
2025-04-09 11:12:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5bb83b59', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1110605, duration(nanos)=1.110605E8, startTimeNanos=380627149039300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@599493b9}
2025-04-09 11:12:42 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [2adeca8f-13] 
2025-04-09 11:12:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:12:42 | TRACE | Weights attr: {}
2025-04-09 11:12:42 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:42 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:42 | DEBUG | Route matched: account-service-route
2025-04-09 11:12:42 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:12:42 | DEBUG | [0bc71e84-14] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:12:42 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:12:42 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:12:42 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171938.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57213"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:42 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@62d208f2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.7E-5, duration(nanos)=77000.0, startTimeNanos=380627360873300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@8586dbd} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171938.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57213"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:42 | TRACE | outbound route: fcf5eadd, inbound: [0bc71e84-14] 
2025-04-09 11:12:42 | DEBUG | Will instrument the response
2025-04-09 11:12:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@62d208f2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1017406, duration(nanos)=1.017406E8, startTimeNanos=380627360873300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@8586dbd}
2025-04-09 11:12:42 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [0bc71e84-14] 
2025-04-09 11:12:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:13:05 | TRACE | Weights attr: {}
2025-04-09 11:13:05 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:13:05 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:13:05 | DEBUG | Route matched: account-service-route
2025-04-09 11:13:05 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:13:05 | DEBUG | [026e5f76-15] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:13:05 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:13:05 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:13:05 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171962.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57238"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:13:05 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@34ee3b8e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.085E-4, duration(nanos)=108500.0, startTimeNanos=380650215701900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1bc3e5dd} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171962.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57238"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:13:05 | TRACE | outbound route: fcf5eadd, inbound: [026e5f76-15] 
2025-04-09 11:13:05 | DEBUG | Will instrument the response
2025-04-09 11:13:05 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@34ee3b8e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1036963, duration(nanos)=1.036963E8, startTimeNanos=380650215701900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1bc3e5dd}
2025-04-09 11:13:05 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [026e5f76-15] 
2025-04-09 11:13:05 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:13:05 | TRACE | Weights attr: {}
2025-04-09 11:13:05 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:13:05 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:13:05 | DEBUG | Route matched: account-service-route
2025-04-09 11:13:05 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:13:05 | DEBUG | [6199833f-16] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:13:05 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:13:05 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:13:05 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171962.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57239"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:13:05 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@481e5593', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.73E-5, duration(nanos)=87300.0, startTimeNanos=380650398944200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7b555173} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171962.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57239"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:13:05 | TRACE | outbound route: fcf5eadd, inbound: [6199833f-16] 
2025-04-09 11:13:05 | DEBUG | Will instrument the response
2025-04-09 11:13:05 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@481e5593', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1240963, duration(nanos)=1.240963E8, startTimeNanos=380650398944200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7b555173}
2025-04-09 11:13:05 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [6199833f-16] 
2025-04-09 11:13:05 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:14:08 | TRACE | Weights attr: {}
2025-04-09 11:14:08 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:14:08 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:14:08 | DEBUG | Route matched: account-service-route
2025-04-09 11:14:08 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:14:08 | DEBUG | [93314187-17] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:14:08 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:14:08 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:14:08 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171985.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57286"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:14:08 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@216f5191', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.88E-5, duration(nanos)=68800.0, startTimeNanos=380713261886500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3b97c416} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171985.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57286"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:14:08 | TRACE | outbound route: 14212c4c, inbound: [93314187-17] 
2025-04-09 11:14:08 | DEBUG | Will instrument the response
2025-04-09 11:14:08 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@216f5191', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1322506, duration(nanos)=1.322506E8, startTimeNanos=380713261886500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3b97c416}
2025-04-09 11:14:08 | TRACE | NettyWriteResponseFilter start inbound: 14212c4c, outbound: [93314187-17] 
2025-04-09 11:14:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:14:08 | TRACE | Weights attr: {}
2025-04-09 11:14:08 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:14:08 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:14:08 | DEBUG | Route matched: account-service-route
2025-04-09 11:14:08 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:14:08 | DEBUG | [426867fe-18] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:14:08 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:14:08 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:14:08 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171985.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57289"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:14:08 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@709af4c4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.096E-4, duration(nanos)=109600.0, startTimeNanos=380713459906600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2fdf7bd} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171985.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57289"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:14:08 | TRACE | outbound route: 14212c4c, inbound: [426867fe-18] 
2025-04-09 11:14:08 | DEBUG | Will instrument the response
2025-04-09 11:14:08 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@709af4c4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1232608, duration(nanos)=1.232608E8, startTimeNanos=380713459906600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2fdf7bd}
2025-04-09 11:14:08 | TRACE | NettyWriteResponseFilter start inbound: 14212c4c, outbound: [426867fe-18] 
2025-04-09 11:14:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:58:27 | INFO  | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 11:58:28 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:28 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:28 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:28 | DEBUG | [channel=0xb9df3ebe, [id: 0x543d4ee3] (inactive), epid=0x1, chid=0x2] channelRegistered()
2025-04-09 11:58:31 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:31 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:31 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 2, delay 2ms
2025-04-09 11:58:31 | DEBUG | [channel=0xb9df3ebe, [id: 0x543d4ee3] (inactive), epid=0x1, chid=0x2] channelUnregistered()
2025-04-09 11:58:31 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:31 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:31 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:31 | DEBUG | [channel=0xda6c666c, [id: 0x816bc7e9] (inactive), epid=0x1, chid=0x3] channelRegistered()
2025-04-09 11:58:33 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:33 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:33 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 3, delay 4ms
2025-04-09 11:58:33 | DEBUG | [channel=0xda6c666c, [id: 0x816bc7e9] (inactive), epid=0x1, chid=0x3] channelUnregistered()
2025-04-09 11:58:33 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:33 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:33 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:33 | DEBUG | [channel=0x6fe5dc81, [id: 0x5ad0852a] (inactive), epid=0x1, chid=0x4] channelRegistered()
2025-04-09 11:58:36 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:36 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:36 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 4, delay 8ms
2025-04-09 11:58:36 | DEBUG | [channel=0x6fe5dc81, [id: 0x5ad0852a] (inactive), epid=0x1, chid=0x4] channelUnregistered()
2025-04-09 11:58:36 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:36 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:36 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:36 | DEBUG | [channel=0x77f6ce13, [id: 0x0ca79f86] (inactive), epid=0x1, chid=0x5] channelRegistered()
2025-04-09 11:58:39 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:39 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:39 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 5, delay 16ms
2025-04-09 11:58:39 | DEBUG | [channel=0x77f6ce13, [id: 0x0ca79f86] (inactive), epid=0x1, chid=0x5] channelUnregistered()
2025-04-09 11:58:39 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:39 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:39 | DEBUG | [channel=0x66bc056f, [id: 0x6083cb7f] (inactive), epid=0x1, chid=0x6] channelRegistered()
2025-04-09 11:58:39 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:41 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:41 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:41 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 6, delay 32ms
2025-04-09 11:58:41 | DEBUG | [channel=0x66bc056f, [id: 0x6083cb7f] (inactive), epid=0x1, chid=0x6] channelUnregistered()
2025-04-09 11:58:41 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:41 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:41 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:41 | DEBUG | [channel=0xc1a084f8, [id: 0x8635c788] (inactive), epid=0x1, chid=0x7] channelRegistered()
2025-04-09 11:58:43 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:43 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:43 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 7, delay 64ms
2025-04-09 11:58:43 | DEBUG | [channel=0xc1a084f8, [id: 0x8635c788] (inactive), epid=0x1, chid=0x7] channelUnregistered()
2025-04-09 11:58:43 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:43 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:43 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:43 | DEBUG | [channel=0x174eb6eb, [id: 0x45837e33] (inactive), epid=0x1, chid=0x8] channelRegistered()
2025-04-09 11:58:45 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:45 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:45 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 8, delay 128ms
2025-04-09 11:58:45 | DEBUG | [channel=0x174eb6eb, [id: 0x45837e33] (inactive), epid=0x1, chid=0x8] channelUnregistered()
2025-04-09 11:58:46 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:46 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:46 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:46 | DEBUG | [channel=0x47da7204, [id: 0xd024eb3e] (inactive), epid=0x1, chid=0x9] channelRegistered()
2025-04-09 11:58:48 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:48 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:48 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 9, delay 256ms
2025-04-09 11:58:48 | DEBUG | [channel=0x47da7204, [id: 0xd024eb3e] (inactive), epid=0x1, chid=0x9] channelUnregistered()
2025-04-09 11:58:48 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:48 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:48 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:48 | DEBUG | [channel=0x1196a003, [id: 0xe7a95f0b] (inactive), epid=0x1, chid=0xa] channelRegistered()
2025-04-09 11:58:50 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 10, delay 512ms
2025-04-09 11:58:50 | DEBUG | [channel=0x1196a003, [id: 0xe7a95f0b] (inactive), epid=0x1, chid=0xa] channelUnregistered()
2025-04-09 11:58:51 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:51 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:51 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:51 | DEBUG | [channel=0x5301c04e, [id: 0x43f97ee0] (inactive), epid=0x1, chid=0xb] channelRegistered()
2025-04-09 11:58:53 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:53 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:53 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 11, delay 1024ms
2025-04-09 11:58:53 | DEBUG | [channel=0x5301c04e, [id: 0x43f97ee0] (inactive), epid=0x1, chid=0xb] channelUnregistered()
2025-04-09 11:58:54 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:54 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:54 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:54 | DEBUG | [channel=0xb366787e, [id: 0xcf1ff245] (inactive), epid=0x1, chid=0xc] channelRegistered()
2025-04-09 11:58:56 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:56 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:56 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 12, delay 2048ms
2025-04-09 11:58:56 | DEBUG | [channel=0xb366787e, [id: 0xcf1ff245] (inactive), epid=0x1, chid=0xc] channelUnregistered()
2025-04-09 11:58:58 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:58 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:58 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:58 | DEBUG | [channel=0xcaa223fc, [id: 0x10822564] (inactive), epid=0x1, chid=0xd] channelRegistered()
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Received: 705 bytes, 1 commands in the stack
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Stack contains: 1 commands
2025-04-09 11:58:59 | DEBUG | Decode done, empty stack: true
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Received: 10 bytes, 2 commands in the stack
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Stack contains: 2 commands
2025-04-09 11:58:59 | DEBUG | Decode done, empty stack: true
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Stack contains: 1 commands
2025-04-09 11:58:59 | DEBUG | Decode done, empty stack: true
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelActive()
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelActive() done
2025-04-09 11:58:59 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 12:03:25 | TRACE | Weights attr: {}
2025-04-09 12:03:25 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 12:03:25 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 12:03:25 | DEBUG | Route matched: account-service-route
2025-04-09 12:03:25 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:03:25 | DEBUG | [ecb68e4c-19] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:03:25 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:03:25 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:03:25 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.0.1744175004.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59103"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:25 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2c08f1ca', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.77E-5, duration(nanos)=97700.0, startTimeNanos=383670143417600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@69ff8d8e} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.0.1744175004.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59103"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:25 | TRACE | outbound route: cdc77ba7, inbound: [ecb68e4c-19] 
2025-04-09 12:03:25 | DEBUG | Will instrument the response
2025-04-09 12:03:25 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2c08f1ca', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.4337929, duration(nanos)=4.337929E8, startTimeNanos=383670143417600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@69ff8d8e}
2025-04-09 12:03:25 | TRACE | NettyWriteResponseFilter start inbound: cdc77ba7, outbound: [ecb68e4c-19] 
2025-04-09 12:03:25 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 12:03:25 | TRACE | Weights attr: {}
2025-04-09 12:03:25 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 12:03:25 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 12:03:25 | DEBUG | Route matched: account-service-route
2025-04-09 12:03:25 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:03:25 | DEBUG | [680ed135-20] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:03:25 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:03:25 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:03:25 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.0.1744175004.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59107"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:25 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@765818a9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.209E-4, duration(nanos)=120900.0, startTimeNanos=383670631799200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4c50693c} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.0.1744175004.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59107"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:25 | TRACE | outbound route: cdc77ba7, inbound: [680ed135-20] 
2025-04-09 12:03:25 | DEBUG | Will instrument the response
2025-04-09 12:03:25 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@765818a9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1324028, duration(nanos)=1.324028E8, startTimeNanos=383670631799200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4c50693c}
2025-04-09 12:03:25 | TRACE | NettyWriteResponseFilter start inbound: cdc77ba7, outbound: [680ed135-20] 
2025-04-09 12:03:25 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 12:03:58 | TRACE | Weights attr: {}
2025-04-09 12:03:58 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/2fa/enable"
2025-04-09 12:03:58 | DEBUG | Route matched: user-service-route
2025-04-09 12:03:58 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/2fa/enable] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:03:58 | DEBUG | [d9e341e9-21] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:03:58 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:03:58 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:03:58 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59137"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:58 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@88aa460', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.182E-4, duration(nanos)=218200.0, startTimeNanos=383703044721800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@ff62cf7} created for the request. New headers are [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59137"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:58 | TRACE | outbound route: 731a2fd5, inbound: [d9e341e9-21] 
2025-04-09 12:04:11 | DEBUG | Will instrument the response
2025-04-09 12:04:11 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@88aa460', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=13.0275846, duration(nanos)=1.30275846E10, startTimeNanos=383703044721800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@ff62cf7}
2025-04-09 12:04:11 | TRACE | NettyWriteResponseFilter start inbound: 731a2fd5, outbound: [d9e341e9-21] 
2025-04-09 12:04:11 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 12:04:32 | TRACE | Weights attr: {}
2025-04-09 12:04:32 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/2fa/enable"
2025-04-09 12:04:32 | DEBUG | Route matched: user-service-route
2025-04-09 12:04:32 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/2fa/enable] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:04:32 | DEBUG | [3e6e8698-22] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:04:32 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:04:32 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:04:32 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59165"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:32 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4c05aab8', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.39E-4, duration(nanos)=139000.0, startTimeNanos=383737330595900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6b9e5b28} created for the request. New headers are [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59165"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:32 | TRACE | outbound route: 731a2fd5, inbound: [3e6e8698-22] 
2025-04-09 12:04:32 | DEBUG | Will instrument the response
2025-04-09 12:04:32 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4c05aab8', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3935744, duration(nanos)=3.935744E8, startTimeNanos=383737330595900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6b9e5b28}
2025-04-09 12:04:32 | TRACE | NettyWriteResponseFilter start inbound: 731a2fd5, outbound: [3e6e8698-22] 
2025-04-09 12:04:32 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 12:04:37 | TRACE | Weights attr: {}
2025-04-09 12:04:37 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/2fa/enable"
2025-04-09 12:04:37 | DEBUG | Route matched: user-service-route
2025-04-09 12:04:37 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/2fa/enable] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:04:37 | DEBUG | [2e5b2a5b-23] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:04:37 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:04:37 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:04:37 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59168"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:37 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@17484052', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.303E-4, duration(nanos)=130300.0, startTimeNanos=383742745576200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2ce3cc8} created for the request. New headers are [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59168"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:37 | TRACE | outbound route: 731a2fd5, inbound: [2e5b2a5b-23] 
2025-04-09 12:04:38 | DEBUG | Will instrument the response
2025-04-09 12:04:38 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@17484052', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3771826, duration(nanos)=3.771826E8, startTimeNanos=383742745576200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2ce3cc8}
2025-04-09 12:04:38 | TRACE | NettyWriteResponseFilter start inbound: 731a2fd5, outbound: [2e5b2a5b-23] 
2025-04-09 12:04:38 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 12:04:51 | TRACE | Weights attr: {}
2025-04-09 12:04:51 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/2fa/enable"
2025-04-09 12:04:51 | DEBUG | Route matched: user-service-route
2025-04-09 12:04:51 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/2fa/enable] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:04:51 | DEBUG | [7865fad2-24] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:04:51 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:04:51 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:04:51 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59182"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:51 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a271862', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.111E-4, duration(nanos)=411100.0, startTimeNanos=383756216774800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6c0ccedf} created for the request. New headers are [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59182"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:51 | TRACE | outbound route: 731a2fd5, inbound: [7865fad2-24] 
2025-04-09 12:04:51 | DEBUG | Will instrument the response
2025-04-09 12:04:51 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a271862', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3719556, duration(nanos)=3.719556E8, startTimeNanos=383756216774800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6c0ccedf}
2025-04-09 12:04:51 | TRACE | NettyWriteResponseFilter start inbound: 731a2fd5, outbound: [7865fad2-24] 
2025-04-09 12:04:51 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 12:58:08 | INFO  | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelInactive()
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelInactive() done
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelUnregistered()
2025-04-09 12:58:09 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 12:58:09 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 12:58:09 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, [id: 0x3efa08cf] (inactive), epid=0x1, chid=0xe] channelRegistered()
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Received: 705 bytes, 1 commands in the stack
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Stack contains: 1 commands
2025-04-09 12:58:09 | DEBUG | Decode done, empty stack: true
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Received: 10 bytes, 2 commands in the stack
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Stack contains: 2 commands
2025-04-09 12:58:10 | DEBUG | Decode done, empty stack: true
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Stack contains: 1 commands
2025-04-09 12:58:10 | DEBUG | Decode done, empty stack: true
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] channelActive()
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] channelActive() done
2025-04-09 12:58:10 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 15:05:31 | INFO  | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 15:05:31 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] channelInactive()
2025-04-09 15:05:31 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 15:05:31 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-09 15:05:31 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] channelInactive() done
2025-04-09 15:05:31 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 15:05:31 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 15:05:31 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-09 15:05:31 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] channelUnregistered()
2025-04-09 15:05:31 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 15:05:31 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 15:05:31 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 15:05:31 | DEBUG | [channel=0x2425617a, [id: 0xca6e3c02] (inactive), epid=0x1, chid=0xf] channelRegistered()
2025-04-09 15:05:35 | DEBUG | [channel=0x2425617a, [id: 0xca6e3c02] (inactive), epid=0x1, chid=0xf] channelUnregistered()
2025-04-09 15:05:41 | WARN  | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Failed to resolve 'redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com' [A(1), AAAA(28)] after 4 queries 
java.net.UnknownHostException: Failed to resolve 'redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.access$700(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:524)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.finishFailure(DnsQueryContext.java:343)
	at io.netty.resolver.dns.DnsQueryContext$4.run(DnsQueryContext.java:278)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:156)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.resolver.dns.DnsNameResolverTimeoutException: [10940: /1.1.1.1:53] DefaultDnsQuestion(redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com. IN AAAA) query '10940' via UDP timed out after 5000 milliseconds (no stack trace available)
2025-04-09 15:05:41 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 15:05:41 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 2, delay 2ms
2025-04-09 15:05:42 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 15:05:42 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 15:05:42 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 15:05:42 | DEBUG | [channel=0x1791b088, [id: 0xe6f9f251] (inactive), epid=0x1, chid=0x10] channelRegistered()
2025-04-09 15:05:45 | DEBUG | [channel=0x1791b088, [id: 0xe6f9f251] (inactive), epid=0x1, chid=0x10] channelUnregistered()
2025-04-09 15:05:52 | WARN  | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Failed to resolve 'redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com' [A(1), AAAA(28)] after 4 queries 
java.net.UnknownHostException: Failed to resolve 'redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.access$700(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:524)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.finishFailure(DnsQueryContext.java:343)
	at io.netty.resolver.dns.DnsQueryContext$4.run(DnsQueryContext.java:278)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:156)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.resolver.dns.DnsNameResolverTimeoutException: [3658: /1.1.1.1:53] DefaultDnsQuestion(redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com. IN AAAA) query '3658' via UDP timed out after 5000 milliseconds (no stack trace available)
2025-04-09 15:05:52 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 15:05:52 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 3, delay 4ms
2025-04-09 15:05:52 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 15:05:52 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 15:05:52 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 15:05:52 | DEBUG | [channel=0x4095544d, [id: 0x15c15526] (inactive), epid=0x1, chid=0x11] channelRegistered()
2025-04-09 15:05:55 | DEBUG | [channel=0x4095544d, [id: 0x15c15526] (inactive), epid=0x1, chid=0x11] channelUnregistered()
2025-04-09 15:06:02 | WARN  | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Failed to resolve 'redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com' [A(1), AAAA(28)] after 4 queries 
java.net.UnknownHostException: Failed to resolve 'redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.access$700(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:524)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.finishFailure(DnsQueryContext.java:343)
	at io.netty.resolver.dns.DnsQueryContext$4.run(DnsQueryContext.java:278)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:156)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.resolver.dns.DnsNameResolverTimeoutException: [5791: /1.1.1.1:53] DefaultDnsQuestion(redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com. IN AAAA) query '5791' via UDP timed out after 5000 milliseconds (no stack trace available)
2025-04-09 15:06:02 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 15:06:02 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 4, delay 8ms
2025-04-09 15:06:02 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 15:06:02 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 15:06:02 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 15:06:02 | DEBUG | [channel=0x63f144c0, [id: 0x1dca5ade] (inactive), epid=0x1, chid=0x12] channelRegistered()
2025-04-09 15:06:05 | DEBUG | [channel=0x63f144c0, [id: 0x1dca5ade] (inactive), epid=0x1, chid=0x12] channelUnregistered()
2025-04-09 15:06:12 | WARN  | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Failed to resolve 'redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com' [A(1), AAAA(28)] after 4 queries 
java.net.UnknownHostException: Failed to resolve 'redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com' [A(1), AAAA(28)] after 4 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1150)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1097)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:455)
	at io.netty.resolver.dns.DnsResolveContext.access$700(DnsResolveContext.java:70)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:524)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.resolver.dns.DnsQueryContext.finishFailure(DnsQueryContext.java:343)
	at io.netty.resolver.dns.DnsQueryContext$4.run(DnsQueryContext.java:278)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:156)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: io.netty.resolver.dns.DnsNameResolverTimeoutException: [7516: /1.1.1.1:53] DefaultDnsQuestion(redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com. IN AAAA) query '7516' via UDP timed out after 5000 milliseconds (no stack trace available)
2025-04-09 15:06:12 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 15:06:12 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 5, delay 16ms
2025-04-09 15:06:12 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 15:06:12 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 15:06:12 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 15:06:12 | DEBUG | [channel=0x012812b2, [id: 0x547f6434] (inactive), epid=0x1, chid=0x13] channelRegistered()
2025-04-09 15:06:12 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 15:06:12 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 15:06:12 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] Received: 705 bytes, 1 commands in the stack
2025-04-09 15:06:12 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] Stack contains: 1 commands
2025-04-09 15:06:12 | DEBUG | Decode done, empty stack: true
2025-04-09 15:06:12 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 15:06:12 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 15:06:12 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 15:06:12 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] Received: 10 bytes, 2 commands in the stack
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] Stack contains: 2 commands
2025-04-09 15:06:13 | DEBUG | Decode done, empty stack: true
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] Stack contains: 1 commands
2025-04-09 15:06:13 | DEBUG | Decode done, empty stack: true
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] channelActive()
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 15:06:13 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] channelActive() done
2025-04-09 15:06:13 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 16:45:52 | INFO  | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 16:45:52 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] channelInactive()
2025-04-09 16:45:52 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 16:45:52 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-09 16:45:52 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] channelInactive() done
2025-04-09 16:45:52 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 16:45:52 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 16:45:52 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-09 16:45:52 | DEBUG | [channel=0x012812b2, /10.24.15.108:52771 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x13] channelUnregistered()
2025-04-09 16:45:52 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 16:45:52 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 16:45:52 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 16:45:52 | DEBUG | [channel=0x98e646c6, [id: 0x4abc876e] (inactive), epid=0x1, chid=0x14] channelRegistered()
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] Received: 705 bytes, 1 commands in the stack
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] Stack contains: 1 commands
2025-04-09 16:45:53 | DEBUG | Decode done, empty stack: true
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] Received: 10 bytes, 2 commands in the stack
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] Stack contains: 2 commands
2025-04-09 16:45:53 | DEBUG | Decode done, empty stack: true
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] Stack contains: 1 commands
2025-04-09 16:45:53 | DEBUG | Decode done, empty stack: true
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 16:45:53 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] channelActive()
2025-04-09 16:45:54 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 16:45:54 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 16:45:54 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 16:45:54 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 16:45:54 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 16:45:54 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] channelActive() done
2025-04-09 16:45:54 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 17:03:43 | TRACE | Weights attr: {}
2025-04-09 17:03:43 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 17:03:43 | DEBUG | Route matched: user-service-route
2025-04-09 17:03:43 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 17:03:43 | DEBUG | [53a11585-25] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 17:03:43 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 17:03:43 | TRACE | RouteToRequestUrlFilter start
2025-04-09 17:03:43 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"69", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Content-Type:"application/json", Postman-Token:"a1cd1b4e-38bf-4e44-b53b-78c993e29d59", X-Forwarded-For:"203.0.113.50,42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50165"", X-Forwarded-Port:"80"]
2025-04-09 17:03:43 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@d1686ae', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0018891, duration(nanos)=1889100.0, startTimeNanos=401719741888400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3339826f} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"69", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Content-Type:"application/json", Postman-Token:"a1cd1b4e-38bf-4e44-b53b-78c993e29d59", X-Forwarded-For:"203.0.113.50,42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50165"", X-Forwarded-Port:"80"]
2025-04-09 17:03:43 | TRACE | outbound route: 44cf0a1b, inbound: [53a11585-25] 
2025-04-09 17:03:47 | DEBUG | Will instrument the response
2025-04-09 17:03:47 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@d1686ae', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.1972996, duration(nanos)=4.1972996E9, startTimeNanos=401719741888400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3339826f}
2025-04-09 17:03:47 | TRACE | NettyWriteResponseFilter start inbound: 44cf0a1b, outbound: [53a11585-25] 
2025-04-09 17:03:47 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 17:07:18 | TRACE | Weights attr: {}
2025-04-09 17:07:18 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 17:07:18 | DEBUG | Route matched: user-service-route
2025-04-09 17:07:18 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 17:07:18 | DEBUG | [fd46790d-28] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 17:07:18 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 17:07:18 | TRACE | RouteToRequestUrlFilter start
2025-04-09 17:07:18 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744193237.27.0.1744193237.0.0.0", Origin:"http://localhost:5173", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50228"", X-Forwarded-Port:"80"]
2025-04-09 17:07:18 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@555db372', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.39E-4, duration(nanos)=139000.0, startTimeNanos=401935395683800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@34ec930b} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744193237.27.0.1744193237.0.0.0", Origin:"http://localhost:5173", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50228"", X-Forwarded-Port:"80"]
2025-04-09 17:07:18 | TRACE | outbound route: 521e5c16, inbound: [fd46790d-28] 
2025-04-09 17:07:19 | DEBUG | Will instrument the response
2025-04-09 17:07:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@555db372', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.5196343, duration(nanos)=5.196343E8, startTimeNanos=401935395683800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@34ec930b}
2025-04-09 17:07:19 | TRACE | NettyWriteResponseFilter start inbound: 521e5c16, outbound: [fd46790d-28] 
2025-04-09 17:07:19 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 17:07:32 | TRACE | Weights attr: {}
2025-04-09 17:07:32 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 17:07:32 | DEBUG | Route matched: user-service-route
2025-04-09 17:07:32 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 17:07:32 | DEBUG | [f27f6719-29] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 17:07:32 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 17:07:32 | TRACE | RouteToRequestUrlFilter start
2025-04-09 17:07:32 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744193237.27.1.1744193248.0.0.0", Origin:"http://localhost:5173", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50251"", X-Forwarded-Port:"80"]
2025-04-09 17:07:32 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@bb23ab5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.214E-4, duration(nanos)=321400.0, startTimeNanos=401948897695200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5e2db141} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744193237.27.1.1744193248.0.0.0", Origin:"http://localhost:5173", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50251"", X-Forwarded-Port:"80"]
2025-04-09 17:07:32 | TRACE | outbound route: 521e5c16, inbound: [f27f6719-29] 
2025-04-09 17:07:32 | DEBUG | Will instrument the response
2025-04-09 17:07:32 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@bb23ab5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.4485495, duration(nanos)=4.485495E8, startTimeNanos=401948897695200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5e2db141}
2025-04-09 17:07:32 | TRACE | NettyWriteResponseFilter start inbound: 521e5c16, outbound: [f27f6719-29] 
2025-04-09 17:07:32 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 17:08:25 | TRACE | Weights attr: {}
2025-04-09 17:08:25 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 17:08:25 | DEBUG | Route matched: user-service-route
2025-04-09 17:08:25 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 17:08:25 | DEBUG | [f375ce37-30] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 17:08:25 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 17:08:25 | TRACE | RouteToRequestUrlFilter start
2025-04-09 17:08:25 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744193237.27.1.1744193302.0.0.0", Origin:"http://localhost:5173", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50294"", X-Forwarded-Port:"80"]
2025-04-09 17:08:25 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@45db378b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.213E-4, duration(nanos)=121300.0, startTimeNanos=402001591468900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@27ddc35a} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744193237.27.1.1744193302.0.0.0", Origin:"http://localhost:5173", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50294"", X-Forwarded-Port:"80"]
2025-04-09 17:08:25 | TRACE | outbound route: 521e5c16, inbound: [f375ce37-30] 
2025-04-09 17:08:25 | DEBUG | Will instrument the response
2025-04-09 17:08:25 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@45db378b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.5585303, duration(nanos)=5.585303E8, startTimeNanos=402001591468900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@27ddc35a}
2025-04-09 17:08:25 | TRACE | NettyWriteResponseFilter start inbound: 521e5c16, outbound: [f375ce37-30] 
2025-04-09 17:08:25 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 19:01:11 | INFO  | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 19:01:11 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] channelInactive()
2025-04-09 19:01:11 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 19:01:11 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-09 19:01:11 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] channelInactive() done
2025-04-09 19:01:11 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 19:01:11 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 19:01:11 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-09 19:01:11 | DEBUG | [channel=0x98e646c6, /192.168.102.3:49752 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x14] channelUnregistered()
2025-04-09 19:01:11 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 19:01:11 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 19:01:11 | DEBUG | [channel=0xa7c1423c, [id: 0xfb1d143b] (inactive), epid=0x1, chid=0x15] channelRegistered()
2025-04-09 19:01:11 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 19:01:11 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 19:01:11 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 19:01:11 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] Received: 705 bytes, 1 commands in the stack
2025-04-09 19:01:11 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] Stack contains: 1 commands
2025-04-09 19:01:11 | DEBUG | Decode done, empty stack: true
2025-04-09 19:01:11 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 19:01:11 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 19:01:11 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 19:01:11 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] Received: 10 bytes, 2 commands in the stack
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] Stack contains: 2 commands
2025-04-09 19:01:12 | DEBUG | Decode done, empty stack: true
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] Stack contains: 1 commands
2025-04-09 19:01:12 | DEBUG | Decode done, empty stack: true
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] channelActive()
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 19:01:12 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] channelActive() done
2025-04-09 19:01:12 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 20:20:02 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 20:20:02 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 20:20:02 | INFO  | Graceful shutdown complete
2025-04-09 20:20:02 | DEBUG | closeAsync()
2025-04-09 20:20:02 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 20:20:02 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] channelInactive()
2025-04-09 20:20:02 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 20:20:02 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] channelInactive() done
2025-04-09 20:20:02 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 20:20:02 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 20:20:02 | DEBUG | [channel=0xa7c1423c, /192.168.102.3:51875 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x15] channelUnregistered()
2025-04-09 20:20:02 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 20:20:03 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@2864d34d
2025-04-09 20:20:05 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 20:20:05 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 20:21:04 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 20:21:04 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 20748 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 20:21:04 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 20:21:04 | INFO  | The following 1 profile is active: "local"
2025-04-09 20:21:07 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 20:21:07 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 20:21:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 20:21:08 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 20:21:08 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 20:21:08 | INFO  | Finished Spring Data repository scanning in 48 ms. Found 0 Redis repository interfaces.
2025-04-09 20:21:09 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 20:21:11 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 20:21:11 | DEBUG | Starting without optional kqueue library
2025-04-09 20:21:11 | DEBUG | Starting without optional io_uring library
2025-04-09 20:21:11 | DEBUG | Starting without optional epoll library
2025-04-09 20:21:11 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 20:21:11 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 20:21:11 | DEBUG | Starting with JFR support
2025-04-09 20:21:13 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 20:21:14 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 20:21:14 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 20:21:14 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@237aa0c7, existing ref count 0
2025-04-09 20:21:14 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 20:21:14 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 20:21:14 | DEBUG | [channel=0x23b1d82f, [id: 0xb1b94f3b] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 20:21:15 | DEBUG | Decode done, empty stack: true
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 20:21:15 | DEBUG | Decode done, empty stack: true
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 20:21:15 | DEBUG | Decode done, empty stack: true
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 20:21:15 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 20:21:15 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 20:21:15 | DEBUG | Decode done, empty stack: true
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 20:21:15 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 20:21:15 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 20:21:16 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 20:21:16 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 20:21:16 | DEBUG | Decode done, empty stack: true
2025-04-09 20:21:16 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 20:21:16 | INFO  | 

Using generated security password: 99974853-5cc7-4d09-bf37-a23701a95f64

2025-04-09 20:21:17 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 20:21:18 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 20:21:19 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 20:21:21 | INFO  | Netty started on port 8080 (http)
2025-04-09 20:21:21 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 20:21:21 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 20:21:21 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 20:21:21 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 20:21:21 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 20:21:21 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 20:21:21 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 20:21:21 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 20:21:21 | DEBUG | New routes count: 3
2025-04-09 20:21:21 | INFO  | Started ApiGatewayApplication in 19.384 seconds (process running for 27.048)
2025-04-09 20:24:07 | TRACE | Weights attr: {}
2025-04-09 20:24:07 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 20:24:07 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 20:24:07 | DEBUG | Route matched: account-service-route
2025-04-09 20:24:07 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 20:24:07 | DEBUG | [a5864040-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5b74bb75
2025-04-09 20:24:07 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@12811f95}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@511a307e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d91d2da}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6e5b3642}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a11efe6}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@68f1b89}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e6bbe63}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@74bcf1ab}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@6ac83e67}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2d1f3639}, order = 2147483647]]
2025-04-09 20:24:07 | TRACE | RouteToRequestUrlFilter start
2025-04-09 20:24:07 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", Postman-Token:"e404c1ac-6549-496b-a07f-b183ba65d205", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50328"", X-Forwarded-Port:"80"]
2025-04-09 20:24:07 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0020665, duration(nanos)=2066500.0, startTimeNanos=413743925902400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3f119a87'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4333933d} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", Postman-Token:"e404c1ac-6549-496b-a07f-b183ba65d205", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50328"", X-Forwarded-Port:"80"]
2025-04-09 20:24:07 | TRACE | outbound route: ed4ff2b5, inbound: [a5864040-1] 
2025-04-09 20:24:08 | DEBUG | Will instrument the response
2025-04-09 20:24:08 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.6255612, duration(nanos)=1.6255612E9, startTimeNanos=413743925902400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3f119a87'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4333933d}
2025-04-09 20:24:08 | TRACE | NettyWriteResponseFilter start inbound: ed4ff2b5, outbound: [a5864040-1] 
2025-04-09 20:24:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 20:25:22 | TRACE | Weights attr: {}
2025-04-09 20:25:22 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 20:25:22 | DEBUG | Route matched: user-service-route
2025-04-09 20:25:22 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 20:25:22 | DEBUG | [6f2001a4-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5b74bb75
2025-04-09 20:25:22 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@12811f95}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@511a307e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d91d2da}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6e5b3642}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a11efe6}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@68f1b89}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e6bbe63}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@74bcf1ab}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@6ac83e67}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2d1f3639}, order = 2147483647]]
2025-04-09 20:25:22 | TRACE | RouteToRequestUrlFilter start
2025-04-09 20:25:22 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744205121.0.0.0", Origin:"http://localhost:5173", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50388"", X-Forwarded-Port:"80"]
2025-04-09 20:25:22 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.537E-4, duration(nanos)=153700.0, startTimeNanos=413818718717500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@27f2ca32'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@293520bc} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744205121.0.0.0", Origin:"http://localhost:5173", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50388"", X-Forwarded-Port:"80"]
2025-04-09 20:25:22 | TRACE | outbound route: 5f7fe374, inbound: [6f2001a4-2] 
2025-04-09 20:25:27 | DEBUG | Will instrument the response
2025-04-09 20:25:27 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.8989112, duration(nanos)=4.8989112E9, startTimeNanos=413818718717500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@27f2ca32'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@293520bc}
2025-04-09 20:25:27 | TRACE | NettyWriteResponseFilter start inbound: 5f7fe374, outbound: [6f2001a4-2] 
2025-04-09 20:25:27 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 20:41:12 | TRACE | Weights attr: {}
2025-04-09 20:41:12 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 20:41:12 | DEBUG | Route matched: user-service-route
2025-04-09 20:41:12 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 20:41:12 | DEBUG | [410c1086-5] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5b74bb75
2025-04-09 20:41:12 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@12811f95}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@511a307e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d91d2da}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6e5b3642}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a11efe6}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@68f1b89}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e6bbe63}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@74bcf1ab}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@6ac83e67}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2d1f3639}, order = 2147483647]]
2025-04-09 20:41:12 | TRACE | RouteToRequestUrlFilter start
2025-04-09 20:41:12 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744206060.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:51368"", X-Forwarded-Port:"80"]
2025-04-09 20:41:12 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.63E-4, duration(nanos)=163000.0, startTimeNanos=414768712187800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@67e89099'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@692f6214} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744206060.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:51368"", X-Forwarded-Port:"80"]
2025-04-09 20:41:12 | TRACE | outbound route: f1cbd5d3, inbound: [410c1086-5] 
2025-04-09 20:41:12 | DEBUG | Will instrument the response
2025-04-09 20:41:12 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.4111654, duration(nanos)=4.111654E8, startTimeNanos=414768712187800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@67e89099'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@692f6214}
2025-04-09 20:41:12 | TRACE | NettyWriteResponseFilter start inbound: f1cbd5d3, outbound: [410c1086-5] 
2025-04-09 20:41:12 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 20:43:16 | TRACE | Weights attr: {}
2025-04-09 20:43:16 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 20:43:16 | DEBUG | Route matched: user-service-route
2025-04-09 20:43:16 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 20:43:16 | DEBUG | [4e057632-7] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5b74bb75
2025-04-09 20:43:16 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@12811f95}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@511a307e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d91d2da}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6e5b3642}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a11efe6}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@68f1b89}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e6bbe63}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@74bcf1ab}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@6ac83e67}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2d1f3639}, order = 2147483647]]
2025-04-09 20:43:16 | TRACE | RouteToRequestUrlFilter start
2025-04-09 20:43:16 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744206195.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:51465"", X-Forwarded-Port:"80"]
2025-04-09 20:43:16 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.76E-4, duration(nanos)=176000.0, startTimeNanos=414893169180200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@276c07bf'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@29abed22} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744206195.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:51465"", X-Forwarded-Port:"80"]
2025-04-09 20:43:16 | TRACE | outbound route: 148dc06d, inbound: [4e057632-7] 
2025-04-09 20:43:17 | DEBUG | Will instrument the response
2025-04-09 20:43:17 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.5753623, duration(nanos)=5.753623E8, startTimeNanos=414893169180200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@276c07bf'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@29abed22}
2025-04-09 20:43:17 | TRACE | NettyWriteResponseFilter start inbound: 148dc06d, outbound: [4e057632-7] 
2025-04-09 20:43:17 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 20:56:28 | TRACE | Weights attr: {}
2025-04-09 20:56:28 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 20:56:28 | DEBUG | Route matched: user-service-route
2025-04-09 20:56:28 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 20:56:28 | DEBUG | [48e6c8f5-17] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5b74bb75
2025-04-09 20:56:28 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@12811f95}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@511a307e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d91d2da}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6e5b3642}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a11efe6}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@68f1b89}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e6bbe63}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@74bcf1ab}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@6ac83e67}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2d1f3639}, order = 2147483647]]
2025-04-09 20:56:28 | TRACE | RouteToRequestUrlFilter start
2025-04-09 20:56:28 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"69", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Content-Type:"application/json", Postman-Token:"b27f05e0-0995-43b7-b9fd-16df7d281ab4", X-Forwarded-For:"203.0.113.50,42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:52299"", X-Forwarded-Port:"80"]
2025-04-09 20:56:28 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.624E-4, duration(nanos)=162400.0, startTimeNanos=415684811720600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@14d26435'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@78b22809} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"69", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Content-Type:"application/json", Postman-Token:"b27f05e0-0995-43b7-b9fd-16df7d281ab4", X-Forwarded-For:"203.0.113.50,42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:52299"", X-Forwarded-Port:"80"]
2025-04-09 20:56:28 | TRACE | outbound route: af86cf3d, inbound: [48e6c8f5-17] 
2025-04-09 20:56:28 | DEBUG | Will instrument the response
2025-04-09 20:56:28 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.6716826, duration(nanos)=6.716826E8, startTimeNanos=415684811720600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@14d26435'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@78b22809}
2025-04-09 20:56:28 | TRACE | NettyWriteResponseFilter start inbound: af86cf3d, outbound: [48e6c8f5-17] 
2025-04-09 20:56:28 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 21:17:19 | TRACE | Weights attr: {}
2025-04-09 21:17:19 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 21:17:19 | DEBUG | Route matched: user-service-route
2025-04-09 21:17:19 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 21:17:19 | DEBUG | [a9d9cc1d-19] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5b74bb75
2025-04-09 21:17:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@12811f95}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@511a307e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d91d2da}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6e5b3642}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a11efe6}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@68f1b89}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e6bbe63}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@74bcf1ab}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@6ac83e67}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2d1f3639}, order = 2147483647]]
2025-04-09 21:17:19 | TRACE | RouteToRequestUrlFilter start
2025-04-09 21:17:19 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"69", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Content-Type:"application/json", Postman-Token:"b1aa7894-1026-4cce-a370-121e59229e4e", X-Forwarded-For:"203.0.113.50,42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53092"", X-Forwarded-Port:"80"]
2025-04-09 21:17:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.687E-4, duration(nanos)=168700.0, startTimeNanos=416936189948400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5e9eaece'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@225a9314} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"69", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Content-Type:"application/json", Postman-Token:"b1aa7894-1026-4cce-a370-121e59229e4e", X-Forwarded-For:"203.0.113.50,42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53092"", X-Forwarded-Port:"80"]
2025-04-09 21:17:19 | TRACE | outbound route: dd2206e9, inbound: [a9d9cc1d-19] 
2025-04-09 21:17:19 | DEBUG | Will instrument the response
2025-04-09 21:17:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.4163576, duration(nanos)=4.163576E8, startTimeNanos=416936189948400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5e9eaece'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@225a9314}
2025-04-09 21:17:19 | TRACE | NettyWriteResponseFilter start inbound: dd2206e9, outbound: [a9d9cc1d-19] 
2025-04-09 21:17:20 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 21:17:28 | TRACE | Weights attr: {}
2025-04-09 21:17:28 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 21:17:28 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 21:17:28 | DEBUG | Route matched: account-service-route
2025-04-09 21:17:28 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 21:17:28 | DEBUG | [a9d9cc1d-20] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5b74bb75
2025-04-09 21:17:28 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@12811f95}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@511a307e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d91d2da}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6e5b3642}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a11efe6}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@68f1b89}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e6bbe63}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@74bcf1ab}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@6ac83e67}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2d1f3639}, order = 2147483647]]
2025-04-09 21:17:28 | TRACE | RouteToRequestUrlFilter start
2025-04-09 21:17:28 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", Postman-Token:"ccddfc50-1d9d-49ce-a5b5-594ded655343", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53092"", X-Forwarded-Port:"80"]
2025-04-09 21:17:28 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.467E-4, duration(nanos)=146700.0, startTimeNanos=416945183828400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5f677d0e'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@26f240ed} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", Postman-Token:"ccddfc50-1d9d-49ce-a5b5-594ded655343", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53092"", X-Forwarded-Port:"80"]
2025-04-09 21:17:28 | TRACE | outbound route: b4ceabfa, inbound: [a9d9cc1d-20] 
2025-04-09 21:17:29 | DEBUG | Will instrument the response
2025-04-09 21:17:29 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.4458378, duration(nanos)=4.458378E8, startTimeNanos=416945183828400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5f677d0e'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@26f240ed}
2025-04-09 21:17:29 | TRACE | NettyWriteResponseFilter start inbound: b4ceabfa, outbound: [a9d9cc1d-20] 
2025-04-09 21:17:29 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 21:20:26 | TRACE | Weights attr: {}
2025-04-09 21:20:26 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 21:20:26 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 21:20:26 | DEBUG | Route matched: account-service-route
2025-04-09 21:20:26 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 21:20:26 | DEBUG | [b6ae9877-22] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5b74bb75
2025-04-09 21:20:26 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@12811f95}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@511a307e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d91d2da}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6e5b3642}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a11efe6}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@68f1b89}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e6bbe63}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@74bcf1ab}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@6ac83e67}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2d1f3639}, order = 2147483647]]
2025-04-09 21:20:26 | TRACE | RouteToRequestUrlFilter start
2025-04-09 21:20:26 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", Postman-Token:"ccddfc50-1d9d-49ce-a5b5-594ded655343", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53201"", X-Forwarded-Port:"80"]
2025-04-09 21:20:26 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.746E-4, duration(nanos)=274600.0, startTimeNanos=417123028801200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@39bc3e4f'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4a43ec05} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", Postman-Token:"ccddfc50-1d9d-49ce-a5b5-594ded655343", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53201"", X-Forwarded-Port:"80"]
2025-04-09 21:20:26 | TRACE | outbound route: eab859c9, inbound: [b6ae9877-22] 
2025-04-09 21:20:26 | DEBUG | Will instrument the response
2025-04-09 21:20:26 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1108618, duration(nanos)=1.108618E8, startTimeNanos=417123028801200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@39bc3e4f'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4a43ec05}
2025-04-09 21:20:26 | TRACE | NettyWriteResponseFilter start inbound: eab859c9, outbound: [b6ae9877-22] 
2025-04-09 21:20:26 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 21:20:30 | TRACE | Weights attr: {}
2025-04-09 21:20:30 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 21:20:30 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 21:20:30 | DEBUG | Route matched: account-service-route
2025-04-09 21:20:30 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 21:20:30 | DEBUG | [015bb59e-23] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5b74bb75
2025-04-09 21:20:30 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@12811f95}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@511a307e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d91d2da}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6e5b3642}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a11efe6}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@68f1b89}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e6bbe63}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@74bcf1ab}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@6ac83e67}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2d1f3639}, order = 2147483647]]
2025-04-09 21:20:30 | TRACE | RouteToRequestUrlFilter start
2025-04-09 21:20:30 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", Postman-Token:"ccddfc50-1d9d-49ce-a5b5-594ded655343", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53205"", X-Forwarded-Port:"80"]
2025-04-09 21:20:30 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.33E-4, duration(nanos)=133000.0, startTimeNanos=417127419608400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@10a71948'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@793c8935} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", Postman-Token:"ccddfc50-1d9d-49ce-a5b5-594ded655343", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53205"", X-Forwarded-Port:"80"]
2025-04-09 21:20:30 | TRACE | outbound route: eab859c9, inbound: [015bb59e-23] 
2025-04-09 21:20:30 | DEBUG | Will instrument the response
2025-04-09 21:20:30 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1055527, duration(nanos)=1.055527E8, startTimeNanos=417127419608400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@10a71948'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@793c8935}
2025-04-09 21:20:30 | TRACE | NettyWriteResponseFilter start inbound: eab859c9, outbound: [015bb59e-23] 
2025-04-09 21:20:30 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 21:21:42 | TRACE | Weights attr: {}
2025-04-09 21:21:42 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 21:21:42 | DEBUG | Route matched: user-service-route
2025-04-09 21:21:42 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 21:21:42 | DEBUG | [ef770299-24] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5b74bb75
2025-04-09 21:21:42 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@12811f95}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@511a307e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d91d2da}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6e5b3642}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a11efe6}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@68f1b89}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e6bbe63}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@74bcf1ab}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@6ac83e67}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2d1f3639}, order = 2147483647]]
2025-04-09 21:21:42 | TRACE | RouteToRequestUrlFilter start
2025-04-09 21:21:42 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744208501.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53273"", X-Forwarded-Port:"80"]
2025-04-09 21:21:42 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.124E-4, duration(nanos)=412400.0, startTimeNanos=417198993713100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@144e943f'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@627a7791} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744208501.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53273"", X-Forwarded-Port:"80"]
2025-04-09 21:21:42 | TRACE | outbound route: 77a2482f, inbound: [ef770299-24] 
2025-04-09 21:21:42 | DEBUG | Will instrument the response
2025-04-09 21:21:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3924281, duration(nanos)=3.924281E8, startTimeNanos=417198993713100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@144e943f'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@627a7791}
2025-04-09 21:21:42 | TRACE | NettyWriteResponseFilter start inbound: 77a2482f, outbound: [ef770299-24] 
2025-04-09 21:21:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 21:46:35 | INFO  | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 21:46:41 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 21:46:41 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 21:46:41 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-09 21:46:41 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 21:46:42 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 21:46:42 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 21:46:42 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-09 21:46:42 | DEBUG | [channel=0x23b1d82f, /192.168.102.3:50174 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 21:46:43 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 21:46:47 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 21:46:48 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 21:46:48 | DEBUG | [channel=0x80bed40d, [id: 0xcb260b32] (inactive), epid=0x1, chid=0x2] channelRegistered()
2025-04-09 21:46:49 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 21:46:49 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:46:49 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] Received: 705 bytes, 1 commands in the stack
2025-04-09 21:46:49 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] Stack contains: 1 commands
2025-04-09 21:46:49 | DEBUG | Decode done, empty stack: true
2025-04-09 21:46:49 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:46:49 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 21:46:49 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:46:49 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:46:49 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] Received: 10 bytes, 2 commands in the stack
2025-04-09 21:46:49 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] Stack contains: 2 commands
2025-04-09 21:46:53 | DEBUG | Decode done, empty stack: true
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] Stack contains: 1 commands
2025-04-09 21:46:53 | DEBUG | Decode done, empty stack: true
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] channelActive()
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] channelActive() done
2025-04-09 21:46:53 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] channelInactive()
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] channelInactive() done
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-09 21:46:53 | DEBUG | [channel=0x80bed40d, /172.16.0.2:54390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] channelUnregistered()
2025-04-09 21:46:53 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 21:46:53 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 21:46:53 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, [id: 0x19a0b75f] (inactive), epid=0x1, chid=0x3] channelRegistered()
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] Received: 705 bytes, 1 commands in the stack
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] Stack contains: 1 commands
2025-04-09 21:46:54 | DEBUG | Decode done, empty stack: true
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] Received: 10 bytes, 2 commands in the stack
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] Stack contains: 2 commands
2025-04-09 21:46:54 | DEBUG | Decode done, empty stack: true
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] Stack contains: 1 commands
2025-04-09 21:46:54 | DEBUG | Decode done, empty stack: true
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:46:54 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] channelActive()
2025-04-09 21:46:56 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 21:46:56 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 21:46:56 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 21:46:56 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 21:46:56 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 21:46:56 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] channelActive() done
2025-04-09 21:46:56 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 21:49:42 | INFO  | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 21:49:42 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] channelInactive()
2025-04-09 21:49:42 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 21:49:42 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-09 21:49:42 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] channelInactive() done
2025-04-09 21:49:42 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 21:49:42 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 21:49:42 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-09 21:49:42 | DEBUG | [channel=0xaa6a77e8, /172.16.0.2:62719 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] channelUnregistered()
2025-04-09 21:49:43 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 21:49:43 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 21:49:43 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 21:49:43 | DEBUG | [channel=0xdfa9e8c0, [id: 0x3f593fe6] (inactive), epid=0x1, chid=0x4] channelRegistered()
2025-04-09 21:49:44 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 21:49:44 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:49:44 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Received: 705 bytes, 1 commands in the stack
2025-04-09 21:49:44 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Stack contains: 1 commands
2025-04-09 21:49:44 | DEBUG | Decode done, empty stack: true
2025-04-09 21:49:44 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:49:44 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 21:49:44 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:49:44 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:49:44 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Received: 10 bytes, 2 commands in the stack
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Stack contains: 2 commands
2025-04-09 21:49:48 | DEBUG | Decode done, empty stack: true
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Stack contains: 1 commands
2025-04-09 21:49:48 | DEBUG | Decode done, empty stack: true
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] channelActive()
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] channelActive() done
2025-04-09 21:49:48 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] channelInactive()
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] channelInactive() done
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-09 21:49:48 | DEBUG | [channel=0xdfa9e8c0, /192.168.102.3:55360 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] channelUnregistered()
2025-04-09 21:49:48 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 21:49:48 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 21:49:48 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 21:49:48 | DEBUG | [channel=0x87fe786a, [id: 0x95f60bdf] (inactive), epid=0x1, chid=0x5] channelRegistered()
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Received: 705 bytes, 1 commands in the stack
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Stack contains: 1 commands
2025-04-09 21:49:49 | DEBUG | Decode done, empty stack: true
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Received: 10 bytes, 2 commands in the stack
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Stack contains: 2 commands
2025-04-09 21:49:49 | DEBUG | Decode done, empty stack: true
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Stack contains: 1 commands
2025-04-09 21:49:49 | DEBUG | Decode done, empty stack: true
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] channelActive()
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 21:49:49 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] channelActive() done
2025-04-09 21:49:49 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 22:11:01 | TRACE | Weights attr: {}
2025-04-09 22:11:01 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 22:11:01 | DEBUG | Route matched: user-service-route
2025-04-09 22:11:01 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 22:11:01 | DEBUG | [269913d8-25] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5b74bb75
2025-04-09 22:11:01 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@12811f95}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@511a307e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d91d2da}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@6e5b3642}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a11efe6}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@68f1b89}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e6bbe63}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@74bcf1ab}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@6ac83e67}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2d1f3639}, order = 2147483647]]
2025-04-09 22:11:01 | TRACE | RouteToRequestUrlFilter start
2025-04-09 22:11:01 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744211459.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:61543"", X-Forwarded-Port:"80"]
2025-04-09 22:11:01 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.452E-4, duration(nanos)=445200.0, startTimeNanos=420158018755400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@55c70275'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6106d508} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744211459.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:61543"", X-Forwarded-Port:"80"]
2025-04-09 22:11:01 | TRACE | outbound route: 4178f29a, inbound: [269913d8-25] 
2025-04-09 22:11:02 | DEBUG | Will instrument the response
2025-04-09 22:11:02 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.9568357, duration(nanos)=9.568357E8, startTimeNanos=420158018755400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@55c70275'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6106d508}
2025-04-09 22:11:02 | TRACE | NettyWriteResponseFilter start inbound: 4178f29a, outbound: [269913d8-25] 
2025-04-09 22:11:02 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 22:13:34 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 22:13:34 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 22:13:35 | INFO  | Graceful shutdown complete
2025-04-09 22:13:37 | DEBUG | closeAsync()
2025-04-09 22:13:37 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 22:13:37 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] channelInactive()
2025-04-09 22:13:37 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 22:13:37 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] channelInactive() done
2025-04-09 22:13:37 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 22:13:37 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 22:13:37 | DEBUG | [channel=0x87fe786a, /192.168.102.3:60681 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] channelUnregistered()
2025-04-09 22:13:37 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 22:13:38 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@237aa0c7
2025-04-09 22:13:43 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 22:13:43 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 22:15:25 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 22:15:25 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 18984 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 22:15:25 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 22:15:25 | INFO  | The following 1 profile is active: "local"
2025-04-09 22:15:27 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 22:15:27 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 22:15:28 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 22:15:28 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 22:15:28 | INFO  | Finished Spring Data repository scanning in 34 ms. Found 0 Redis repository interfaces.
2025-04-09 22:15:29 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 22:15:30 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 22:15:30 | DEBUG | Starting without optional kqueue library
2025-04-09 22:15:30 | DEBUG | Starting without optional io_uring library
2025-04-09 22:15:30 | DEBUG | Starting without optional epoll library
2025-04-09 22:15:30 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 22:15:30 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 22:15:30 | DEBUG | Starting with JFR support
2025-04-09 22:15:31 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 22:15:32 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 22:15:32 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 22:15:32 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@5cfa2ac5, existing ref count 0
2025-04-09 22:15:32 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 22:15:32 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 22:15:32 | DEBUG | [channel=0x510a5823, [id: 0x2eefaaaf] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 22:15:32 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 22:15:32 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 22:15:33 | DEBUG | Decode done, empty stack: true
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 22:15:33 | DEBUG | Decode done, empty stack: true
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 22:15:33 | DEBUG | Decode done, empty stack: true
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 22:15:33 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 22:15:33 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 22:15:33 | DEBUG | Decode done, empty stack: true
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 22:15:33 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 22:15:33 | DEBUG | Decode done, empty stack: true
2025-04-09 22:15:33 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 22:15:34 | INFO  | 

Using generated security password: 15bc88ff-feb0-4e76-9a7e-be902c1767e7

2025-04-09 22:15:35 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 22:15:36 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 22:15:37 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 22:15:39 | INFO  | Netty started on port 8080 (http)
2025-04-09 22:15:39 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 22:15:39 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 22:15:39 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 22:15:39 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 22:15:39 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 22:15:39 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 22:15:39 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 22:15:39 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 22:15:39 | DEBUG | New routes count: 3
2025-04-09 22:15:39 | INFO  | Started ApiGatewayApplication in 16.625 seconds (process running for 21.877)
2025-04-09 22:15:40 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 22:15:40 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 22:15:40 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 22:15:41 | DEBUG | [channel=0xaa4f0735, [id: 0x1c21235c] (inactive), epid=0x2, chid=0x2] channelRegistered()
2025-04-09 22:15:41 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 22:15:41 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:41 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 705 bytes, 1 commands in the stack
2025-04-09 22:15:41 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-09 22:15:41 | DEBUG | Decode done, empty stack: true
2025-04-09 22:15:41 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 22:15:41 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 22:15:41 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:41 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 10 bytes, 2 commands in the stack
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 2 commands
2025-04-09 22:15:42 | DEBUG | Decode done, empty stack: true
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-09 22:15:42 | DEBUG | Decode done, empty stack: true
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelActive()
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activating endpoint
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands()
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands() Flushing 0 commands
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelActive() done
2025-04-09 22:15:42 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 22:15:42 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 7 bytes, 1 commands in the stack
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-09 22:15:42 | DEBUG | Decode done, empty stack: true
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 22:15:42 | DEBUG | dispatching command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 7 bytes, 1 commands in the stack
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-09 22:15:42 | DEBUG | Decode done, empty stack: true
2025-04-09 22:15:42 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-04-09 22:15:42 | DEBUG | Redis health check: PONG
2025-04-09 22:22:12 | TRACE | Weights attr: {}
2025-04-09 22:22:12 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 22:22:12 | DEBUG | Route matched: user-service-route
2025-04-09 22:22:12 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 22:22:12 | DEBUG | [6e1217ca-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@43e2b8da
2025-04-09 22:22:12 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@59d29065}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6f695077}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@745c8a04}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@20a116a0}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a238a8e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7a13ad55}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5773f83d}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@6dbdeb69}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@7267006e}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@303db609}, order = 2147483647]]
2025-04-09 22:22:12 | TRACE | RouteToRequestUrlFilter start
2025-04-09 22:22:12 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"55", pragma:"no-cache", cache-control:"no-cache", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744212098.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62184"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 22:22:12 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@13454ae2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0030904, duration(nanos)=3090400.0, startTimeNanos=420829077474400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@170b2736} created for the request. New headers are [host:"localhost:8080", content-length:"55", pragma:"no-cache", cache-control:"no-cache", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744212098.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62184"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 22:22:12 | TRACE | outbound route: 53c8213f, inbound: [6e1217ca-1] 
2025-04-09 22:22:15 | DEBUG | Will instrument the response
2025-04-09 22:22:15 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@13454ae2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.0857602, duration(nanos)=3.0857602E9, startTimeNanos=420829077474400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@170b2736}
2025-04-09 22:22:15 | TRACE | NettyWriteResponseFilter start inbound: 53c8213f, outbound: [6e1217ca-1] 
2025-04-09 22:22:15 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 22:22:16 | TRACE | Weights attr: {}
2025-04-09 22:22:16 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 22:22:16 | DEBUG | Route matched: user-service-route
2025-04-09 22:22:16 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 22:22:16 | DEBUG | [44891de9-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@43e2b8da
2025-04-09 22:22:16 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@59d29065}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6f695077}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@745c8a04}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@20a116a0}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a238a8e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7a13ad55}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5773f83d}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@6dbdeb69}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@7267006e}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@303db609}, order = 2147483647]]
2025-04-09 22:22:16 | TRACE | RouteToRequestUrlFilter start
2025-04-09 22:22:16 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"55", pragma:"no-cache", cache-control:"no-cache", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744212136.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62200"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 22:22:16 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@f7cbc0f', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.553E-4, duration(nanos)=755300.0, startTimeNanos=420833538674500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1bb5390} created for the request. New headers are [host:"localhost:8080", content-length:"55", pragma:"no-cache", cache-control:"no-cache", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744212136.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62200"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 22:22:16 | TRACE | outbound route: 53c8213f, inbound: [44891de9-2] 
2025-04-09 22:22:17 | DEBUG | Will instrument the response
2025-04-09 22:22:17 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@f7cbc0f', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.5837917, duration(nanos)=5.837917E8, startTimeNanos=420833538674500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1bb5390}
2025-04-09 22:22:17 | TRACE | NettyWriteResponseFilter start inbound: 53c8213f, outbound: [44891de9-2] 
2025-04-09 22:22:17 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 22:22:30 | TRACE | Weights attr: {}
2025-04-09 22:22:30 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 22:22:30 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 22:22:30 | DEBUG | Route matched: account-service-route
2025-04-09 22:22:30 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 22:22:30 | DEBUG | [66325ab1-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@43e2b8da
2025-04-09 22:22:30 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@59d29065}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6f695077}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@745c8a04}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@20a116a0}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a238a8e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7a13ad55}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5773f83d}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@6dbdeb69}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@7267006e}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@303db609}, order = 2147483647]]
2025-04-09 22:22:30 | TRACE | RouteToRequestUrlFilter start
2025-04-09 22:22:30 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", pragma:"no-cache", cache-control:"no-cache", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQyMTIxMzcsImV4cCI6MTc0NDI5ODUzN30.HLMYEr_np2Dui4q6juk46m1eOAEd8jGU9LCClwtySf8", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", accept:"application/json", sec-ch-ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744212147.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62227"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 22:22:30 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@40beff77', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.808E-4, duration(nanos)=180800.0, startTimeNanos=420846810069300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@355c159} created for the request. New headers are [host:"localhost:8080", pragma:"no-cache", cache-control:"no-cache", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQyMTIxMzcsImV4cCI6MTc0NDI5ODUzN30.HLMYEr_np2Dui4q6juk46m1eOAEd8jGU9LCClwtySf8", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", accept:"application/json", sec-ch-ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744212147.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62227"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 22:22:30 | TRACE | Weights attr: {}
2025-04-09 22:22:30 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 22:22:30 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 22:22:30 | DEBUG | Route matched: account-service-route
2025-04-09 22:22:30 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 22:22:30 | TRACE | outbound route: 23f5ddee, inbound: [66325ab1-3] 
2025-04-09 22:22:30 | DEBUG | [1b9ad4b6-4] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@43e2b8da
2025-04-09 22:22:30 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@59d29065}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6f695077}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@745c8a04}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@20a116a0}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a238a8e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7a13ad55}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5773f83d}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@6dbdeb69}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@7267006e}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@303db609}, order = 2147483647]]
2025-04-09 22:22:30 | TRACE | RouteToRequestUrlFilter start
2025-04-09 22:22:30 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", pragma:"no-cache", cache-control:"no-cache", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQyMTIxMzcsImV4cCI6MTc0NDI5ODUzN30.HLMYEr_np2Dui4q6juk46m1eOAEd8jGU9LCClwtySf8", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", accept:"application/json", sec-ch-ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744212147.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62228"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 22:22:30 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@f22e5b8', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.75E-4, duration(nanos)=175000.0, startTimeNanos=420846826548800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1e50a2c} created for the request. New headers are [host:"localhost:8080", pragma:"no-cache", cache-control:"no-cache", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQyMTIxMzcsImV4cCI6MTc0NDI5ODUzN30.HLMYEr_np2Dui4q6juk46m1eOAEd8jGU9LCClwtySf8", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", accept:"application/json", sec-ch-ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744204665.29.1.1744212147.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62228"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 22:22:30 | TRACE | outbound route: cf223f59, inbound: [1b9ad4b6-4] 
2025-04-09 22:22:31 | DEBUG | Will instrument the response
2025-04-09 22:22:31 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@f22e5b8', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.7527329, duration(nanos)=1.7527329E9, startTimeNanos=420846826548800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1e50a2c}
2025-04-09 22:22:31 | TRACE | NettyWriteResponseFilter start inbound: cf223f59, outbound: [1b9ad4b6-4] 
2025-04-09 22:22:31 | DEBUG | Will instrument the response
2025-04-09 22:22:31 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 22:22:31 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@40beff77', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.7719234, duration(nanos)=1.7719234E9, startTimeNanos=420846810069300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@355c159}
2025-04-09 22:22:31 | TRACE | NettyWriteResponseFilter start inbound: 23f5ddee, outbound: [66325ab1-3] 
2025-04-09 22:22:31 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 22:36:01 | TRACE | Weights attr: {}
2025-04-09 22:36:01 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 22:36:01 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 22:36:01 | DEBUG | Route matched: account-service-route
2025-04-09 22:36:01 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 22:36:01 | DEBUG | [ec0d5334-5] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@43e2b8da
2025-04-09 22:36:01 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@59d29065}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6f695077}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@745c8a04}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@20a116a0}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a238a8e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7a13ad55}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5773f83d}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@6dbdeb69}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@7267006e}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@303db609}, order = 2147483647]]
2025-04-09 22:36:01 | TRACE | RouteToRequestUrlFilter start
2025-04-09 22:36:01 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", Postman-Token:"e43affbd-e51b-4efe-aa9e-fc9e8f91090a", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:62877"", X-Forwarded-Port:"80"]
2025-04-09 22:36:01 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@48ac48d6', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.649E-4, duration(nanos)=164900.0, startTimeNanos=421658593617100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2736aa08} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", Postman-Token:"e43affbd-e51b-4efe-aa9e-fc9e8f91090a", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:62877"", X-Forwarded-Port:"80"]
2025-04-09 22:36:01 | TRACE | outbound route: 5f817f1b, inbound: [ec0d5334-5] 
2025-04-09 22:36:02 | DEBUG | Will instrument the response
2025-04-09 22:36:02 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@48ac48d6', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1193399, duration(nanos)=1.193399E8, startTimeNanos=421658593617100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2736aa08}
2025-04-09 22:36:02 | TRACE | NettyWriteResponseFilter start inbound: 5f817f1b, outbound: [ec0d5334-5] 
2025-04-09 22:36:02 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 22:39:38 | TRACE | Weights attr: {}
2025-04-09 22:39:38 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 22:39:38 | DEBUG | Route matched: user-service-route
2025-04-09 22:39:38 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 22:39:38 | DEBUG | [318ad558-6] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@43e2b8da
2025-04-09 22:39:38 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@59d29065}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6f695077}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@745c8a04}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@20a116a0}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a238a8e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7a13ad55}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5773f83d}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@6dbdeb69}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@7267006e}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@303db609}, order = 2147483647]]
2025-04-09 22:39:38 | TRACE | RouteToRequestUrlFilter start
2025-04-09 22:39:38 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Content-Type:"application/json", Cookie:"_ga=GA1.1.1565087274.1744213172; _ga_1BESNPCQ8G=GS1.1.1744213171.1.1.1744213174.0.0.0", Origin:"http://localhost:5173", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63047"", X-Forwarded-Port:"80"]
2025-04-09 22:39:38 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2a700970', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.512E-4, duration(nanos)=151200.0, startTimeNanos=421874714329800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@718cf87d} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Content-Type:"application/json", Cookie:"_ga=GA1.1.1565087274.1744213172; _ga_1BESNPCQ8G=GS1.1.1744213171.1.1.1744213174.0.0.0", Origin:"http://localhost:5173", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63047"", X-Forwarded-Port:"80"]
2025-04-09 22:39:38 | TRACE | outbound route: 9319979f, inbound: [318ad558-6] 
2025-04-09 22:39:38 | DEBUG | Will instrument the response
2025-04-09 22:39:38 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2a700970', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.415717, duration(nanos)=4.15717E8, startTimeNanos=421874714329800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@718cf87d}
2025-04-09 22:39:38 | TRACE | NettyWriteResponseFilter start inbound: 9319979f, outbound: [318ad558-6] 
2025-04-09 22:39:38 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 22:46:21 | TRACE | Weights attr: {}
2025-04-09 22:46:21 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 22:46:21 | DEBUG | Route matched: user-service-route
2025-04-09 22:46:21 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 22:46:21 | DEBUG | [6e09bf20-10] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@43e2b8da
2025-04-09 22:46:21 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@59d29065}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6f695077}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@745c8a04}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@20a116a0}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a238a8e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7a13ad55}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5773f83d}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@6dbdeb69}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@7267006e}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@303db609}, order = 2147483647]]
2025-04-09 22:46:21 | TRACE | RouteToRequestUrlFilter start
2025-04-09 22:46:21 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Origin:"http://localhost:5173", Pragma:"no-cache", Priority:"u=1, i", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"cross-site", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63322"", X-Forwarded-Port:"80"]
2025-04-09 22:46:21 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@584f2291', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.817E-4, duration(nanos)=181700.0, startTimeNanos=422277647286200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@71d2e7de} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Origin:"http://localhost:5173", Pragma:"no-cache", Priority:"u=1, i", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"cross-site", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63322"", X-Forwarded-Port:"80"]
2025-04-09 22:46:21 | TRACE | outbound route: b152da44, inbound: [6e09bf20-10] 
2025-04-09 22:46:21 | DEBUG | Will instrument the response
2025-04-09 22:46:21 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@584f2291', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.6060547, duration(nanos)=6.060547E8, startTimeNanos=422277647286200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@71d2e7de}
2025-04-09 22:46:21 | TRACE | NettyWriteResponseFilter start inbound: b152da44, outbound: [6e09bf20-10] 
2025-04-09 22:46:21 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 22:59:06 | TRACE | Weights attr: {}
2025-04-09 22:59:06 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 22:59:06 | DEBUG | Route matched: user-service-route
2025-04-09 22:59:06 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 22:59:06 | DEBUG | [707d4c0c-12] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@43e2b8da
2025-04-09 22:59:06 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@59d29065}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@6f695077}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@745c8a04}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@20a116a0}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@a238a8e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7a13ad55}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5773f83d}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@6dbdeb69}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@7267006e}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@303db609}, order = 2147483647]]
2025-04-09 22:59:06 | TRACE | RouteToRequestUrlFilter start
2025-04-09 22:59:06 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Origin:"http://localhost:5173", Pragma:"no-cache", Priority:"u=1, i", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"cross-site", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63727"", X-Forwarded-Port:"80"]
2025-04-09 22:59:06 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@8c391ad', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.642E-4, duration(nanos)=164200.0, startTimeNanos=423043191954700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2531d6e5} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Origin:"http://localhost:5173", Pragma:"no-cache", Priority:"u=1, i", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"cross-site", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63727"", X-Forwarded-Port:"80"]
2025-04-09 22:59:06 | TRACE | outbound route: 86d6b1cf, inbound: [707d4c0c-12] 
2025-04-09 22:59:06 | DEBUG | Will instrument the response
2025-04-09 22:59:06 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@8c391ad', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3806766, duration(nanos)=3.806766E8, startTimeNanos=423043191954700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2531d6e5}
2025-04-09 22:59:06 | TRACE | NettyWriteResponseFilter start inbound: 86d6b1cf, outbound: [707d4c0c-12] 
2025-04-09 22:59:06 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 23:01:58 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 23:01:58 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 23:01:58 | INFO  | Graceful shutdown complete
2025-04-09 23:01:58 | DEBUG | closeAsync()
2025-04-09 23:01:58 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 23:01:58 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 23:01:58 | DEBUG | closeAsync()
2025-04-09 23:01:58 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] closeAsync()
2025-04-09 23:01:58 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelInactive()
2025-04-09 23:01:58 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] deactivating endpoint handler
2025-04-09 23:01:58 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelInactive() done
2025-04-09 23:01:58 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 23:01:58 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 23:01:58 | DEBUG | [channel=0xaa4f0735, /192.168.102.3:61767 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelUnregistered()
2025-04-09 23:01:58 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 23:01:58 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 23:01:58 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 23:01:58 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 23:01:58 | DEBUG | [channel=0x510a5823, /192.168.102.3:61751 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 23:01:58 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 23:01:58 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@5cfa2ac5
2025-04-09 23:02:01 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 23:02:01 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 23:02:32 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 23:02:33 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 10864 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 23:02:33 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 23:02:33 | INFO  | The following 1 profile is active: "local"
2025-04-09 23:02:35 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 23:02:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 23:02:36 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 23:02:36 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 23:02:36 | INFO  | Finished Spring Data repository scanning in 38 ms. Found 0 Redis repository interfaces.
2025-04-09 23:02:37 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 23:02:38 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 23:02:38 | DEBUG | Starting without optional kqueue library
2025-04-09 23:02:38 | DEBUG | Starting without optional io_uring library
2025-04-09 23:02:38 | DEBUG | Starting without optional epoll library
2025-04-09 23:02:38 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 23:02:38 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 23:02:38 | DEBUG | Starting with JFR support
2025-04-09 23:02:39 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 23:02:39 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 23:02:39 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 23:02:40 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@573870cb, existing ref count 0
2025-04-09 23:02:40 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 23:02:40 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 23:02:40 | DEBUG | [channel=0xd7a43c1b, [id: 0xf0d0c0d9] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 23:02:40 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:02:40 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:02:40 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 23:02:40 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:02:40 | DEBUG | Decode done, empty stack: true
2025-04-09 23:02:40 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 23:02:41 | DEBUG | Decode done, empty stack: true
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:02:41 | DEBUG | Decode done, empty stack: true
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 23:02:41 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 23:02:41 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:02:41 | DEBUG | Decode done, empty stack: true
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:02:41 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:02:41 | DEBUG | Decode done, empty stack: true
2025-04-09 23:02:41 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:02:41 | INFO  | 

Using generated security password: 8ed53158-5347-4242-bbf8-f608f61b5ec1

2025-04-09 23:02:43 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 23:02:43 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 23:02:44 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 23:02:45 | INFO  | Netty started on port 8080 (http)
2025-04-09 23:02:45 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 23:02:45 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 23:02:45 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 23:02:45 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 23:02:45 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 23:02:45 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 23:02:45 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 23:02:45 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 23:02:45 | DEBUG | New routes count: 3
2025-04-09 23:02:45 | INFO  | Started ApiGatewayApplication in 16.847 seconds (process running for 22.269)
2025-04-09 23:03:09 | ERROR | [ef80e686-1]  500 Server Error for HTTP OPTIONS "/users/api/v1/auth/login"
java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*" since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:575)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoDefer] :
	reactor.core.publisher.Mono.defer(Mono.java:219)
	org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
Error has been observed at the following site(s):
	*____________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_     Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_           checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*____________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_    Mono.contextWrite ⇢ at org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter.filter(ServerHttpSecurity.java:4047)
	|_     Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_     Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:367)
	|_      Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:368)
	|_       Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:369)
	|_    Mono.contextWrite ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:373)
	*__Mono.deferContextual ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:193)
	|_           checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*____________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*__________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filterFirewalledExchange(WebFilterChainProxy.java:78)
	*__________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:65)
	|_   Mono.onErrorResume ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:66)
	|_           checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*____________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_           checkpoint ⇢ com.project.apigateway.security.JwtAuthenticationFilter [DefaultWebFilterChain]
	*____________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_       Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_   Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_       Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_   Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_       Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	*____________Mono.error ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler$CheckpointInsertingHandler.handle(ExceptionHandlingWebHandler.java:106)
	|_           checkpoint ⇢ HTTP OPTIONS "/users/api/v1/auth/login" [ExceptionHandlingWebHandler]
	*____________Mono.error ⇢ at org.springframework.cloud.gateway.filter.headers.observation.ObservationClosingWebExceptionHandler.handle(ObservationClosingWebExceptionHandler.java:53)
Original Stack Trace:
		at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:575)
		at org.springframework.web.cors.CorsConfiguration.checkOrigin(CorsConfiguration.java:702)
		at org.springframework.web.cors.reactive.DefaultCorsProcessor.checkOrigin(DefaultCorsProcessor.java:194)
		at org.springframework.web.cors.reactive.DefaultCorsProcessor.handleInternal(DefaultCorsProcessor.java:134)
		at org.springframework.web.cors.reactive.DefaultCorsProcessor.process(DefaultCorsProcessor.java:113)
		at org.springframework.web.cors.reactive.CorsWebFilter.filter(CorsWebFilter.java:79)
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:200)
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:159)
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:153)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1249)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:716)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
		at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:855)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:781)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 23:04:01 | ERROR | [ef80e686-2]  500 Server Error for HTTP OPTIONS "/users/api/v1/auth/login"
java.lang.IllegalArgumentException: When allowCredentials is true, allowedOrigins cannot contain the special value "*" since that cannot be set on the "Access-Control-Allow-Origin" response header. To allow credentials to a set of origins, list them explicitly or consider using "allowedOriginPatterns" instead.
	at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:575)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoDefer] :
	reactor.core.publisher.Mono.defer(Mono.java:219)
	org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
Error has been observed at the following site(s):
	*____________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_     Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_           checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*____________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_    Mono.contextWrite ⇢ at org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter.filter(ServerHttpSecurity.java:4047)
	|_     Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_     Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:367)
	|_      Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:368)
	|_       Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:369)
	|_    Mono.contextWrite ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:373)
	*__Mono.deferContextual ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:193)
	|_           checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*____________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*__________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filterFirewalledExchange(WebFilterChainProxy.java:78)
	*__________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:65)
	|_   Mono.onErrorResume ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:66)
	|_           checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*____________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_           checkpoint ⇢ com.project.apigateway.security.JwtAuthenticationFilter [DefaultWebFilterChain]
	*____________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_       Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_   Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_       Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_   Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_       Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	*____________Mono.error ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler$CheckpointInsertingHandler.handle(ExceptionHandlingWebHandler.java:106)
	|_           checkpoint ⇢ HTTP OPTIONS "/users/api/v1/auth/login" [ExceptionHandlingWebHandler]
	*____________Mono.error ⇢ at org.springframework.cloud.gateway.filter.headers.observation.ObservationClosingWebExceptionHandler.handle(ObservationClosingWebExceptionHandler.java:53)
Original Stack Trace:
		at org.springframework.web.cors.CorsConfiguration.validateAllowCredentials(CorsConfiguration.java:575)
		at org.springframework.web.cors.CorsConfiguration.checkOrigin(CorsConfiguration.java:702)
		at org.springframework.web.cors.reactive.DefaultCorsProcessor.checkOrigin(DefaultCorsProcessor.java:194)
		at org.springframework.web.cors.reactive.DefaultCorsProcessor.handleInternal(DefaultCorsProcessor.java:134)
		at org.springframework.web.cors.reactive.DefaultCorsProcessor.process(DefaultCorsProcessor.java:113)
		at org.springframework.web.cors.reactive.CorsWebFilter.filter(CorsWebFilter.java:79)
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:200)
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.invokeFilter(ObservationWebFilterChainDecorator.java:159)
		at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.lambda$filter$0(ObservationWebFilterChainDecorator.java:153)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
		at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)
		at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:424)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:302)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)
		at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335)
		at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294)
		at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:202)
		at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4576)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:1249)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:716)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:486)
		at reactor.netty.http.server.HttpServerOperations.handleDefaultHttpRequest(HttpServerOperations.java:855)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:781)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:272)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 23:04:11 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 23:04:11 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 23:04:11 | INFO  | Graceful shutdown complete
2025-04-09 23:04:11 | DEBUG | closeAsync()
2025-04-09 23:04:11 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 23:04:11 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 23:04:11 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 23:04:11 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 23:04:11 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 23:04:11 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 23:04:11 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 23:04:11 | DEBUG | [channel=0xd7a43c1b, /192.168.102.3:63857 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 23:04:11 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@573870cb
2025-04-09 23:04:13 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 23:04:13 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 23:04:24 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 23:04:24 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 21344 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 23:04:24 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 23:04:24 | INFO  | The following 1 profile is active: "local"
2025-04-09 23:04:26 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 23:04:26 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 23:04:27 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 23:04:27 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 23:04:28 | INFO  | Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2025-04-09 23:04:28 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 23:04:29 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 23:04:30 | DEBUG | Starting without optional kqueue library
2025-04-09 23:04:30 | DEBUG | Starting without optional io_uring library
2025-04-09 23:04:30 | DEBUG | Starting without optional epoll library
2025-04-09 23:04:30 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 23:04:30 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 23:04:30 | DEBUG | Starting with JFR support
2025-04-09 23:04:31 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 23:04:31 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 23:04:31 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 23:04:31 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@e993715, existing ref count 0
2025-04-09 23:04:31 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 23:04:31 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, [id: 0x06d7e928] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:04:32 | DEBUG | Decode done, empty stack: true
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 23:04:32 | DEBUG | Decode done, empty stack: true
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:04:32 | DEBUG | Decode done, empty stack: true
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 23:04:32 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 23:04:32 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:04:32 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 23:04:33 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 23:04:33 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:04:33 | DEBUG | Decode done, empty stack: true
2025-04-09 23:04:33 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:04:33 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:04:33 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:04:33 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:04:33 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 23:04:33 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:04:33 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 23:04:33 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:04:33 | DEBUG | Decode done, empty stack: true
2025-04-09 23:04:33 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:04:33 | INFO  | 

Using generated security password: 74fae034-c126-4379-8878-86a8540e28e7

2025-04-09 23:04:35 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 23:04:35 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 23:04:36 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 23:04:37 | INFO  | Netty started on port 8080 (http)
2025-04-09 23:04:37 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 23:04:37 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 23:04:37 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 23:04:38 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 23:04:38 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 23:04:38 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 23:04:38 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 23:04:38 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 23:04:38 | DEBUG | New routes count: 3
2025-04-09 23:04:38 | INFO  | Started ApiGatewayApplication in 15.853 seconds (process running for 19.997)
2025-04-09 23:05:45 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 23:05:45 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 23:05:45 | INFO  | Graceful shutdown complete
2025-04-09 23:05:45 | DEBUG | closeAsync()
2025-04-09 23:05:45 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 23:05:45 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 23:05:45 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 23:05:45 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 23:05:45 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 23:05:45 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 23:05:45 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 23:05:45 | DEBUG | [channel=0xa02b7454, /192.168.102.3:63924 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 23:05:45 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@e993715
2025-04-09 23:05:47 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 23:05:47 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 23:05:58 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 23:05:58 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 21772 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 23:05:58 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 23:05:58 | INFO  | The following 1 profile is active: "local"
2025-04-09 23:06:00 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 23:06:00 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 23:06:01 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 23:06:01 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 23:06:01 | INFO  | Finished Spring Data repository scanning in 69 ms. Found 0 Redis repository interfaces.
2025-04-09 23:06:02 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 23:06:03 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 23:06:03 | DEBUG | Starting without optional kqueue library
2025-04-09 23:06:03 | DEBUG | Starting without optional io_uring library
2025-04-09 23:06:03 | DEBUG | Starting without optional epoll library
2025-04-09 23:06:03 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 23:06:03 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 23:06:03 | DEBUG | Starting with JFR support
2025-04-09 23:06:04 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 23:06:04 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 23:06:04 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 23:06:04 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@4bab78ce, existing ref count 0
2025-04-09 23:06:05 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 23:06:05 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 23:06:05 | DEBUG | [channel=0xa9f7367b, [id: 0x11091bcc] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 23:06:05 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:06:05 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:06:05 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 23:06:05 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:06:05 | DEBUG | Decode done, empty stack: true
2025-04-09 23:06:05 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:06:05 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 23:06:05 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:06:05 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 23:06:06 | DEBUG | Decode done, empty stack: true
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:06:06 | DEBUG | Decode done, empty stack: true
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 23:06:06 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 23:06:06 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:06:06 | DEBUG | Decode done, empty stack: true
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:06:06 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:06:06 | DEBUG | Decode done, empty stack: true
2025-04-09 23:06:06 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:06:06 | INFO  | 

Using generated security password: eb26cc1d-12df-4de0-89aa-0b71ff6e72f1

2025-04-09 23:06:07 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 23:06:08 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 23:06:08 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 23:06:10 | INFO  | Netty started on port 8080 (http)
2025-04-09 23:06:10 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 23:06:10 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 23:06:10 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 23:06:10 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 23:06:10 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 23:06:10 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 23:06:10 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 23:06:10 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 23:06:10 | DEBUG | New routes count: 3
2025-04-09 23:06:10 | INFO  | Started ApiGatewayApplication in 13.486 seconds (process running for 16.861)
2025-04-09 23:06:19 | TRACE | Weights attr: {}
2025-04-09 23:06:19 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 23:06:19 | DEBUG | Route matched: user-service-route
2025-04-09 23:06:19 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 23:06:19 | DEBUG | [bdbd93ba-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@28d7bd6b
2025-04-09 23:06:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@67e21ea2}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@1b82f62a}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@412440c1}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@33f4844b}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@2184962c}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@201b52f7}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@36c45149}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2259d54f}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@4d9bccfe}, order = 2147483647]]
2025-04-09 23:06:19 | TRACE | RouteToRequestUrlFilter start
2025-04-09 23:06:19 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Origin:"http://localhost:5173", Pragma:"no-cache", Priority:"u=1, i", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"cross-site", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63992"", X-Forwarded-Port:"80"]
2025-04-09 23:06:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.001666, duration(nanos)=1666000.0, startTimeNanos=423476505204600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@23bae5bd'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@29be4057} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Origin:"http://localhost:5173", Pragma:"no-cache", Priority:"u=1, i", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"cross-site", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63992"", X-Forwarded-Port:"80"]
2025-04-09 23:06:20 | TRACE | outbound route: 5321f4dd, inbound: [bdbd93ba-2] 
2025-04-09 23:06:21 | DEBUG | Will instrument the response
2025-04-09 23:06:21 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.0558536, duration(nanos)=2.0558536E9, startTimeNanos=423476505204600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@23bae5bd'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@29be4057}
2025-04-09 23:06:21 | TRACE | NettyWriteResponseFilter start inbound: 5321f4dd, outbound: [bdbd93ba-2] 
2025-04-09 23:06:21 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 23:06:35 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 23:06:35 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 23:06:36 | INFO  | Graceful shutdown complete
2025-04-09 23:06:36 | DEBUG | closeAsync()
2025-04-09 23:06:36 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 23:06:36 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 23:06:36 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 23:06:36 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 23:06:36 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 23:06:36 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 23:06:36 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 23:06:36 | DEBUG | [channel=0xa9f7367b, /192.168.102.3:63984 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 23:06:36 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@4bab78ce
2025-04-09 23:06:38 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 23:06:38 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 23:06:59 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 23:06:59 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 2192 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 23:06:59 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 23:06:59 | INFO  | The following 1 profile is active: "local"
2025-04-09 23:07:02 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 23:07:02 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 23:07:03 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 23:07:03 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 23:07:03 | INFO  | Finished Spring Data repository scanning in 35 ms. Found 0 Redis repository interfaces.
2025-04-09 23:07:03 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 23:07:05 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 23:07:05 | DEBUG | Starting without optional kqueue library
2025-04-09 23:07:05 | DEBUG | Starting without optional io_uring library
2025-04-09 23:07:05 | DEBUG | Starting without optional epoll library
2025-04-09 23:07:05 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 23:07:05 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 23:07:05 | DEBUG | Starting with JFR support
2025-04-09 23:07:06 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 23:07:07 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 23:07:07 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 23:07:07 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@573870cb, existing ref count 0
2025-04-09 23:07:07 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 23:07:07 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 23:07:07 | DEBUG | [channel=0xaac19706, [id: 0xb9d1bf34] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:07:08 | DEBUG | Decode done, empty stack: true
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 23:07:08 | DEBUG | Decode done, empty stack: true
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:07:08 | DEBUG | Decode done, empty stack: true
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 23:07:08 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 23:07:08 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:07:08 | DEBUG | Decode done, empty stack: true
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:07:08 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:07:08 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:07:09 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 23:07:09 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:07:09 | DEBUG | Decode done, empty stack: true
2025-04-09 23:07:09 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:07:09 | INFO  | 

Using generated security password: 01b63708-f1a5-4ca7-b670-a6bdb7093f97

2025-04-09 23:07:10 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 23:07:11 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 23:07:12 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 23:07:13 | INFO  | Netty started on port 8080 (http)
2025-04-09 23:07:13 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 23:07:13 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 23:07:13 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 23:07:13 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 23:07:13 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 23:07:13 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 23:07:13 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 23:07:13 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 23:07:13 | DEBUG | New routes count: 3
2025-04-09 23:07:13 | INFO  | Started ApiGatewayApplication in 16.342 seconds (process running for 22.982)
2025-04-09 23:08:03 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 23:08:03 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 23:08:03 | INFO  | Graceful shutdown complete
2025-04-09 23:08:03 | DEBUG | closeAsync()
2025-04-09 23:08:03 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 23:08:03 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 23:08:03 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 23:08:03 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 23:08:03 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 23:08:03 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 23:08:03 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 23:08:03 | DEBUG | [channel=0xaac19706, /192.168.102.3:64022 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 23:08:03 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@573870cb
2025-04-09 23:08:06 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 23:08:06 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 23:09:03 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 23:09:03 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 16468 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 23:09:03 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 23:09:03 | INFO  | The following 1 profile is active: "local"
2025-04-09 23:09:08 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 23:09:08 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 23:09:09 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 23:09:09 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 23:09:09 | INFO  | Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2025-04-09 23:09:10 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 23:09:11 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 23:09:11 | DEBUG | Starting without optional kqueue library
2025-04-09 23:09:11 | DEBUG | Starting without optional io_uring library
2025-04-09 23:09:11 | DEBUG | Starting without optional epoll library
2025-04-09 23:09:11 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 23:09:11 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 23:09:12 | DEBUG | Starting with JFR support
2025-04-09 23:09:13 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 23:09:14 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 23:09:14 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 23:09:14 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@1bb4c431, existing ref count 0
2025-04-09 23:09:15 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 23:09:15 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 23:09:15 | DEBUG | [channel=0xa9a0fd0c, [id: 0x3fb8a16f] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 23:09:15 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:09:15 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:09:15 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 23:09:15 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:09:15 | DEBUG | Decode done, empty stack: true
2025-04-09 23:09:15 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:09:15 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 23:09:15 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:09:15 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 23:09:16 | DEBUG | Decode done, empty stack: true
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:09:16 | DEBUG | Decode done, empty stack: true
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 23:09:16 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 23:09:16 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:09:16 | DEBUG | Decode done, empty stack: true
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:09:16 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 23:09:16 | DEBUG | Decode done, empty stack: true
2025-04-09 23:09:16 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 23:09:16 | INFO  | 

Using generated security password: 58b34d90-d108-446a-891e-51c0b03f2220

2025-04-09 23:09:22 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 23:09:22 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 23:09:23 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 23:09:27 | INFO  | Netty started on port 8080 (http)
2025-04-09 23:09:27 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 23:09:27 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 23:09:27 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 23:09:28 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 23:09:28 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 23:09:28 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 23:09:28 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 23:09:28 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 23:09:28 | DEBUG | New routes count: 3
2025-04-09 23:09:28 | INFO  | Started ApiGatewayApplication in 28.602 seconds (process running for 42.405)
2025-04-09 23:11:32 | TRACE | Weights attr: {}
2025-04-09 23:11:32 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 23:11:32 | DEBUG | Route matched: user-service-route
2025-04-09 23:11:32 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 23:11:32 | DEBUG | [13b43f02-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@6bdad3bb
2025-04-09 23:11:32 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1d38cdde}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@7e2e0b8a}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@6e612122}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@16745abd}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3a359f7c}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@3809f65d}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@138b9abe}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@4d793390}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@7187078a}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@717b0d81}, order = 2147483647]]
2025-04-09 23:11:32 | TRACE | RouteToRequestUrlFilter start
2025-04-09 23:11:32 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Origin:"http://localhost:5173", Pragma:"no-cache", Priority:"u=1, i", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"cross-site", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:64167"", X-Forwarded-Port:"80"]
2025-04-09 23:11:32 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0020919, duration(nanos)=2091900.0, startTimeNanos=423788795639400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7263058c'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2b19943} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Origin:"http://localhost:5173", Pragma:"no-cache", Priority:"u=1, i", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"cross-site", X-Forwarded-For:"42.119.130.181,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:64167"", X-Forwarded-Port:"80"]
2025-04-09 23:11:32 | TRACE | outbound route: 22a49864, inbound: [13b43f02-2] 
2025-04-09 23:11:32 | DEBUG | Will instrument the response
2025-04-09 23:11:32 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.5877246, duration(nanos)=5.877246E8, startTimeNanos=423788795639400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7263058c'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2b19943}
2025-04-09 23:11:32 | TRACE | NettyWriteResponseFilter start inbound: 22a49864, outbound: [13b43f02-2] 
2025-04-09 23:11:32 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 23:11:52 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 23:11:52 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 23:11:52 | INFO  | Graceful shutdown complete
2025-04-09 23:11:52 | DEBUG | closeAsync()
2025-04-09 23:11:52 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 23:11:52 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 23:11:52 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 23:11:52 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 23:11:52 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 23:11:52 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 23:11:52 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 23:11:52 | DEBUG | [channel=0xa9a0fd0c, /192.168.102.3:64098 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 23:11:52 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@1bb4c431
2025-04-09 23:11:54 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 23:11:54 | DEBUG | Initiate shutdown (0, 2, SECONDS)
