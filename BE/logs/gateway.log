2025-04-14 01:07:04 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-14 01:07:04 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-14 01:07:05 | INFO  | Graceful shutdown complete
2025-04-14 01:07:05 | DEBUG | closeAsync()
2025-04-14 01:07:05 | DEBUG | [channel=0x1727407d, /192.168.102.3:60632 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-14 01:07:05 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-14 01:07:05 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@3e5ebdfe
2025-04-14 01:07:06 | DEBUG | [channel=0x1727407d, /192.168.102.3:60632 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-14 01:07:06 | DEBUG | [channel=0x1727407d, /192.168.102.3:60632 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-14 01:07:06 | DEBUG | [channel=0x1727407d, /192.168.102.3:60632 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-14 01:07:06 | DEBUG | [channel=0x1727407d, /192.168.102.3:60632 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-14 01:07:06 | DEBUG | [channel=0x1727407d, /192.168.102.3:60632 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-14 01:07:06 | DEBUG | [channel=0x1727407d, /192.168.102.3:60632 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-14 01:07:09 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-14 01:07:09 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-14 01:29:23 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-14 01:29:23 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 9236 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-14 01:29:23 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-14 01:29:23 | INFO  | The following 1 profile is active: "local"
2025-04-14 01:29:25 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-14 01:29:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-14 01:29:25 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-14 01:29:25 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-14 01:29:25 | INFO  | Finished Spring Data repository scanning in 65 ms. Found 0 Redis repository interfaces.
2025-04-14 01:29:26 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-14 01:29:28 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-14 01:29:28 | DEBUG | Starting without optional kqueue library
2025-04-14 01:29:28 | DEBUG | Starting without optional io_uring library
2025-04-14 01:29:28 | DEBUG | Starting without optional epoll library
2025-04-14 01:29:28 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-14 01:29:28 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-14 01:29:28 | DEBUG | Starting with JFR support
2025-04-14 01:29:29 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-14 01:29:30 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-14 01:29:30 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-14 01:29:30 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@a63643e, existing ref count 0
2025-04-14 01:29:30 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-14 01:29:30 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-14 01:29:30 | DEBUG | [channel=0x02518046, [id: 0x22ada290] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-14 01:29:31 | DEBUG | Decode done, empty stack: true
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-14 01:29:31 | DEBUG | Decode done, empty stack: true
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-14 01:29:31 | DEBUG | Decode done, empty stack: true
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-14 01:29:31 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-14 01:29:31 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-14 01:29:31 | DEBUG | Decode done, empty stack: true
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-14 01:29:31 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-14 01:29:31 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-14 01:29:32 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-14 01:29:32 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-14 01:29:32 | DEBUG | Decode done, empty stack: true
2025-04-14 01:29:32 | DEBUG | [channel=0x02518046, /192.168.102.3:62213 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-14 01:29:32 | INFO  | 

Using generated security password: 927774d6-fb17-4f74-a564-7c169dbe762c

2025-04-14 01:29:33 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}, RouteDefinition{id='kafka-management-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/sagas/**}}], filters=[], uri=http://localhost:8085, order=0, metadata={}, enabled=true}]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-14 01:29:33 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-14 01:29:34 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-14 01:29:34 | INFO  | Netty started on port 8080 (http)
2025-04-14 01:29:34 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-14 01:29:34 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-14 01:29:34 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-14 01:29:34 | DEBUG | RouteDefinition matched: user-service-route
2025-04-14 01:29:34 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-14 01:29:34 | DEBUG | RouteDefinition matched: account-service-route
2025-04-14 01:29:34 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-14 01:29:34 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-14 01:29:34 | DEBUG | RouteDefinition kafka-management-service-route applying {_genkey_0=/sagas/**} to Path
2025-04-14 01:29:34 | DEBUG | RouteDefinition matched: kafka-management-service-route
2025-04-14 01:29:34 | DEBUG | New routes count: 4
2025-04-14 01:29:34 | INFO  | Started ApiGatewayApplication in 12.46 seconds (process running for 17.493)
2025-04-14 01:30:55 | TRACE | Weights attr: {}
2025-04-14 01:30:55 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-14 01:30:55 | DEBUG | Route matched: user-service-route
2025-04-14 01:30:55 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:30:55 | DEBUG | [99f7e603-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:30:55 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:30:55 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:30:55 | DEBUG | Will instrument the HTTP request headers [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"fd7337e2-8052-4317-8375-109c270db58c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62245"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:30:55 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@55c0ad3', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0013815, duration(nanos)=1381500.0, startTimeNanos=777771305415300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@62945fdf} created for the request. New headers are [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"fd7337e2-8052-4317-8375-109c270db58c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62245"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:30:55 | TRACE | outbound route: 7150ec9e, inbound: [99f7e603-1] 
2025-04-14 01:30:56 | DEBUG | Will instrument the response
2025-04-14 01:30:56 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@55c0ad3', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.2329351, duration(nanos)=1.2329351E9, startTimeNanos=777771305415300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@62945fdf}
2025-04-14 01:30:56 | TRACE | NettyWriteResponseFilter start inbound: 7150ec9e, outbound: [99f7e603-1] 
2025-04-14 01:30:56 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-14 01:31:29 | TRACE | Weights attr: {}
2025-04-14 01:31:29 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/get"
2025-04-14 01:31:29 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/get"
2025-04-14 01:31:29 | DEBUG | Route matched: account-service-route
2025-04-14 01:31:29 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:31:29 | DEBUG | [99f7e603-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:31:29 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:31:29 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:31:29 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a4b1ef21-9be6-48eb-98f9-f728ffccbdbf", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62245"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:31:29 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5bd2dcf1', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.043E-4, duration(nanos)=104300.0, startTimeNanos=777804964919000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@382c25df} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a4b1ef21-9be6-48eb-98f9-f728ffccbdbf", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62245"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:31:29 | TRACE | outbound route: 4083d3fe, inbound: [99f7e603-2] 
2025-04-14 01:31:30 | DEBUG | Will instrument the response
2025-04-14 01:31:30 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5bd2dcf1', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.2747532, duration(nanos)=1.2747532E9, startTimeNanos=777804964919000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@382c25df}
2025-04-14 01:31:30 | TRACE | NettyWriteResponseFilter start inbound: 4083d3fe, outbound: [99f7e603-2] 
2025-04-14 01:31:30 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 01:32:11 | TRACE | Weights attr: {}
2025-04-14 01:32:11 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/get"
2025-04-14 01:32:11 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/get"
2025-04-14 01:32:11 | DEBUG | Route matched: account-service-route
2025-04-14 01:32:11 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:32:11 | DEBUG | [99f7e603-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:32:11 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:32:11 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:32:11 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"10947cc2-f7f2-42ff-823b-1fc5cdfc771e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62245"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:32:11 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7e244e70', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.227E-4, duration(nanos)=122700.0, startTimeNanos=777847432056500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@70e3bfc4} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"10947cc2-f7f2-42ff-823b-1fc5cdfc771e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62245"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:32:11 | TRACE | outbound route: 4083d3fe, inbound: [99f7e603-3] 
2025-04-14 01:32:12 | DEBUG | Will instrument the response
2025-04-14 01:32:12 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7e244e70', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.559091, duration(nanos)=5.59091E8, startTimeNanos=777847432056500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@70e3bfc4}
2025-04-14 01:32:12 | TRACE | NettyWriteResponseFilter start inbound: 4083d3fe, outbound: [99f7e603-3] 
2025-04-14 01:32:12 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 01:37:19 | TRACE | Weights attr: {}
2025-04-14 01:37:19 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/api/v1/get"
2025-04-14 01:37:19 | TRACE | Pattern "/accounts/**" matches against value "/accounts/api/v1/get"
2025-04-14 01:37:19 | DEBUG | Route matched: account-service-route
2025-04-14 01:37:19 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:37:19 | DEBUG | [74d2a593-4] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:37:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:37:19 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:37:19 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ff2cae8a-66bd-4f7b-bf03-ce3c81015166", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62332"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:37:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@648b52a8', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.404E-4, duration(nanos)=140400.0, startTimeNanos=778155611244500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6a4cb049} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ff2cae8a-66bd-4f7b-bf03-ce3c81015166", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62332"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:37:19 | TRACE | outbound route: ff8aa66a, inbound: [74d2a593-4] 
2025-04-14 01:37:20 | DEBUG | Will instrument the response
2025-04-14 01:37:20 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@648b52a8', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.6018386, duration(nanos)=6.018386E8, startTimeNanos=778155611244500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6a4cb049}
2025-04-14 01:37:20 | TRACE | NettyWriteResponseFilter start inbound: ff8aa66a, outbound: [74d2a593-4] 
2025-04-14 01:37:20 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 01:37:53 | TRACE | Weights attr: {}
2025-04-14 01:37:53 | TRACE | Pattern "[/users/**]" does not match against value "/transactions/api/v1/get"
2025-04-14 01:37:53 | TRACE | Pattern "[/accounts/**]" does not match against value "/transactions/api/v1/get"
2025-04-14 01:37:53 | TRACE | Pattern "[/trading/**]" does not match against value "/transactions/api/v1/get"
2025-04-14 01:37:53 | TRACE | Pattern "[/sagas/**]" does not match against value "/transactions/api/v1/get"
2025-04-14 01:37:53 | TRACE | No RouteDefinition found for [Exchange: GET http://localhost:8080/transactions/api/v1/get]
2025-04-14 01:38:15 | TRACE | Weights attr: {}
2025-04-14 01:38:15 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 01:38:15 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 01:38:15 | DEBUG | Route matched: account-service-route
2025-04-14 01:38:15 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:38:15 | DEBUG | [74d2a593-6] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:38:15 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:38:15 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:38:15 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"e2a73820-4c29-4c2c-8b89-242d2c4ab3d0", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62332"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:38:15 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1d86f76c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.494E-4, duration(nanos)=149400.0, startTimeNanos=778211391743300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@445d2bde} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"e2a73820-4c29-4c2c-8b89-242d2c4ab3d0", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62332"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:38:15 | TRACE | outbound route: ff8aa66a, inbound: [74d2a593-6] 
2025-04-14 01:38:15 | DEBUG | Will instrument the response
2025-04-14 01:38:15 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1d86f76c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1021203, duration(nanos)=1.021203E8, startTimeNanos=778211391743300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@445d2bde}
2025-04-14 01:38:15 | TRACE | NettyWriteResponseFilter start inbound: ff8aa66a, outbound: [74d2a593-6] 
2025-04-14 01:38:15 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-14 01:38:27 | TRACE | Weights attr: {}
2025-04-14 01:38:27 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 01:38:27 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 01:38:27 | DEBUG | Route matched: account-service-route
2025-04-14 01:38:27 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:38:27 | DEBUG | [74d2a593-7] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:38:27 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:38:27 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:38:27 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"8e9a6164-2f7d-439c-bc44-d20b2fd73549", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62332"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:38:27 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6dd53a7a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.769E-4, duration(nanos)=276900.0, startTimeNanos=778223708069500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@25a59b} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"8e9a6164-2f7d-439c-bc44-d20b2fd73549", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62332"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:38:27 | TRACE | outbound route: 78d67658, inbound: [74d2a593-7] 
2025-04-14 01:38:28 | DEBUG | Will instrument the response
2025-04-14 01:38:28 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6dd53a7a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0697126, duration(nanos)=6.97126E7, startTimeNanos=778223708069500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@25a59b}
2025-04-14 01:38:28 | TRACE | NettyWriteResponseFilter start inbound: 78d67658, outbound: [74d2a593-7] 
2025-04-14 01:38:28 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-14 01:39:50 | TRACE | Weights attr: {}
2025-04-14 01:39:50 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 01:39:50 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 01:39:50 | DEBUG | Route matched: account-service-route
2025-04-14 01:39:50 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:39:50 | DEBUG | [b28bd8e6-8] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:39:50 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:39:50 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:39:50 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"6ebdfac8-fae6-4759-8b76-37fe5d43916e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62356"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:39:50 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4db9db40', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.35E-5, duration(nanos)=83500.0, startTimeNanos=778306389661500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@765e2e89} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"6ebdfac8-fae6-4759-8b76-37fe5d43916e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"213", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62356"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:39:50 | TRACE | outbound route: b528158a, inbound: [b28bd8e6-8] 
2025-04-14 01:40:02 | DEBUG | Will instrument the response
2025-04-14 01:40:02 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4db9db40', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=11.4490054, duration(nanos)=1.14490054E10, startTimeNanos=778306389661500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@765e2e89}
2025-04-14 01:40:02 | TRACE | NettyWriteResponseFilter start inbound: b528158a, outbound: [b28bd8e6-8] 
2025-04-14 01:40:02 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-14 01:41:19 | TRACE | Weights attr: {}
2025-04-14 01:41:19 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 01:41:19 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 01:41:19 | DEBUG | Route matched: account-service-route
2025-04-14 01:41:19 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:41:19 | DEBUG | [c00d1123-9] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:41:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:41:19 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:41:19 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"9c3a8f13-57a2-4676-8f3b-6bae8f62c0e7", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"255", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62382"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:41:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@60d38ab6', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.194E-4, duration(nanos)=419400.0, startTimeNanos=778394985288400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5b7834aa} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"9c3a8f13-57a2-4676-8f3b-6bae8f62c0e7", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"255", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62382"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:41:19 | TRACE | outbound route: ae4d4290, inbound: [c00d1123-9] 
2025-04-14 01:42:26 | DEBUG | Will instrument the response
2025-04-14 01:42:26 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@60d38ab6', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=66.8658908, duration(nanos)=6.68658908E10, startTimeNanos=778394985288400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5b7834aa}
2025-04-14 01:42:26 | TRACE | NettyWriteResponseFilter start inbound: ae4d4290, outbound: [c00d1123-9] 
2025-04-14 01:42:26 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-14 01:42:33 | TRACE | Weights attr: {}
2025-04-14 01:42:33 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 01:42:33 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 01:42:33 | DEBUG | Route matched: account-service-route
2025-04-14 01:42:33 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:42:33 | DEBUG | [a14c647f-10] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:42:33 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:42:33 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:42:33 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a0462405-9a70-4d72-a711-4c7c5520310f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"257", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62387"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:42:33 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@70221f06', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.53E-5, duration(nanos)=75300.0, startTimeNanos=778468811910000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5a35abf9} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a0462405-9a70-4d72-a711-4c7c5520310f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"257", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62387"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:42:33 | TRACE | outbound route: 618a902a, inbound: [a14c647f-10] 
2025-04-14 01:42:40 | DEBUG | Will instrument the response
2025-04-14 01:42:40 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@70221f06', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.33712, duration(nanos)=7.33712E9, startTimeNanos=778468811910000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5a35abf9}
2025-04-14 01:42:40 | TRACE | NettyWriteResponseFilter start inbound: 618a902a, outbound: [a14c647f-10] 
2025-04-14 01:42:40 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-14 01:42:52 | TRACE | Weights attr: {}
2025-04-14 01:42:52 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 01:42:52 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 01:42:52 | DEBUG | Route matched: account-service-route
2025-04-14 01:42:52 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:42:52 | DEBUG | [a14c647f-11] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:42:52 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:42:52 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:42:52 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ddb5ab18-43d9-4f92-b288-6ca42e48ac56", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"238", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62387"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:42:52 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@15b3ac1e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.455E-4, duration(nanos)=345500.0, startTimeNanos=778488232568500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3897da4e} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ddb5ab18-43d9-4f92-b288-6ca42e48ac56", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"238", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62387"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:42:52 | TRACE | outbound route: 3505717b, inbound: [a14c647f-11] 
2025-04-14 01:42:59 | DEBUG | Will instrument the response
2025-04-14 01:42:59 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@15b3ac1e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.2171216, duration(nanos)=7.2171216E9, startTimeNanos=778488232568500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3897da4e}
2025-04-14 01:42:59 | TRACE | NettyWriteResponseFilter start inbound: 3505717b, outbound: [a14c647f-11] 
2025-04-14 01:42:59 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-14 01:44:01 | TRACE | Weights attr: {}
2025-04-14 01:44:01 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 01:44:01 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 01:44:01 | DEBUG | Route matched: account-service-route
2025-04-14 01:44:01 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:44:01 | DEBUG | [6c2ec11a-12] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:44:01 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:44:01 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:44:01 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"54df3811-b697-4736-9cad-c524574dfd68", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62413"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:44:01 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4b66c8d3', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.091E-4, duration(nanos)=109100.0, startTimeNanos=778557725354100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4ccb9d50} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"54df3811-b697-4736-9cad-c524574dfd68", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62413"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:44:01 | TRACE | outbound route: 4b4c0ed6, inbound: [6c2ec11a-12] 
2025-04-14 01:44:02 | DEBUG | Will instrument the response
2025-04-14 01:44:02 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4b66c8d3', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.86973, duration(nanos)=8.6973E8, startTimeNanos=778557725354100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4ccb9d50}
2025-04-14 01:44:02 | TRACE | NettyWriteResponseFilter start inbound: 4b4c0ed6, outbound: [6c2ec11a-12] 
2025-04-14 01:44:02 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-14 01:45:22 | TRACE | Weights attr: {}
2025-04-14 01:45:22 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 01:45:22 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 01:45:22 | DEBUG | Route matched: account-service-route
2025-04-14 01:45:22 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:45:22 | DEBUG | [2c5749f4-13] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:45:22 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:45:22 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:45:22 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"38401d16-1b5f-4c18-93a7-f95382cd2ee5", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62426"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:45:22 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4fecfca9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.149E-4, duration(nanos)=114900.0, startTimeNanos=778638531985500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@55ab5c9a} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"38401d16-1b5f-4c18-93a7-f95382cd2ee5", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62426"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:45:22 | TRACE | outbound route: 6e480ba5, inbound: [2c5749f4-13] 
2025-04-14 01:45:22 | DEBUG | Will instrument the response
2025-04-14 01:45:22 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4fecfca9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.088007, duration(nanos)=8.8007E7, startTimeNanos=778638531985500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@55ab5c9a}
2025-04-14 01:45:22 | TRACE | NettyWriteResponseFilter start inbound: 6e480ba5, outbound: [2c5749f4-13] 
2025-04-14 01:45:22 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 01:47:32 | TRACE | Weights attr: {}
2025-04-14 01:47:32 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 01:47:32 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 01:47:32 | DEBUG | Route matched: account-service-route
2025-04-14 01:47:32 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:47:32 | DEBUG | [8c72d966-14] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:47:32 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:47:32 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:47:32 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a53e01c7-8ac9-4c04-9211-5d50e981e854", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62449"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:47:32 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3611d113', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.127E-4, duration(nanos)=212700.0, startTimeNanos=778767776034600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@410cde4b} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a53e01c7-8ac9-4c04-9211-5d50e981e854", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62449"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:47:32 | TRACE | outbound route: 118caef2, inbound: [8c72d966-14] 
2025-04-14 01:47:32 | DEBUG | Will instrument the response
2025-04-14 01:47:32 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3611d113', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0690095, duration(nanos)=6.90095E7, startTimeNanos=778767776034600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@410cde4b}
2025-04-14 01:47:32 | TRACE | NettyWriteResponseFilter start inbound: 118caef2, outbound: [8c72d966-14] 
2025-04-14 01:47:32 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 01:48:09 | TRACE | Weights attr: {}
2025-04-14 01:48:09 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 01:48:09 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 01:48:09 | DEBUG | Route matched: account-service-route
2025-04-14 01:48:09 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:48:09 | DEBUG | [8c72d966-15] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:48:09 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:48:09 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:48:09 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"5469dade-2fd6-4336-a09a-793926bc99e0", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62449"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:48:09 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5de4e215', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.18E-5, duration(nanos)=61800.0, startTimeNanos=778805532848800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5b27064d} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"5469dade-2fd6-4336-a09a-793926bc99e0", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62449"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:48:09 | TRACE | outbound route: 118caef2, inbound: [8c72d966-15] 
2025-04-14 01:48:09 | DEBUG | Will instrument the response
2025-04-14 01:48:09 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5de4e215', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1457869, duration(nanos)=1.457869E8, startTimeNanos=778805532848800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5b27064d}
2025-04-14 01:48:09 | TRACE | NettyWriteResponseFilter start inbound: 118caef2, outbound: [8c72d966-15] 
2025-04-14 01:48:09 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 01:51:42 | TRACE | Weights attr: {}
2025-04-14 01:51:42 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 01:51:42 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 01:51:42 | DEBUG | Route matched: account-service-route
2025-04-14 01:51:42 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 01:51:42 | DEBUG | [2bf1f654-16] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 01:51:42 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 01:51:42 | TRACE | RouteToRequestUrlFilter start
2025-04-14 01:51:42 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a82d2c04-4a12-47c3-aa25-a13e1c395233", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62496"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:51:42 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2af32e5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.17E-5, duration(nanos)=61700.0, startTimeNanos=779017837670700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@129e1efd} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a82d2c04-4a12-47c3-aa25-a13e1c395233", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62496"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 01:51:42 | TRACE | outbound route: b5ad3838, inbound: [2bf1f654-16] 
2025-04-14 01:51:42 | DEBUG | Will instrument the response
2025-04-14 01:51:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2af32e5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.08366, duration(nanos)=8.366E7, startTimeNanos=779017837670700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@129e1efd}
2025-04-14 01:51:42 | TRACE | NettyWriteResponseFilter start inbound: b5ad3838, outbound: [2bf1f654-16] 
2025-04-14 01:51:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:04:59 | TRACE | Weights attr: {}
2025-04-14 02:04:59 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:04:59 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:04:59 | DEBUG | Route matched: account-service-route
2025-04-14 02:04:59 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:04:59 | DEBUG | [b4401d02-17] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:04:59 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:04:59 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:04:59 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ec8830a6-a8c5-4ec9-951f-cb9f9eafa8b0", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62548"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:04:59 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3c538259', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.12E-5, duration(nanos)=61200.0, startTimeNanos=779815682552400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@331346c5} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ec8830a6-a8c5-4ec9-951f-cb9f9eafa8b0", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62548"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:04:59 | TRACE | outbound route: 2eb23756, inbound: [b4401d02-17] 
2025-04-14 02:05:00 | DEBUG | Will instrument the response
2025-04-14 02:05:00 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3c538259', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.8696117, duration(nanos)=8.696117E8, startTimeNanos=779815682552400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@331346c5}
2025-04-14 02:05:00 | TRACE | NettyWriteResponseFilter start inbound: 2eb23756, outbound: [b4401d02-17] 
2025-04-14 02:05:00 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:13:05 | TRACE | Weights attr: {}
2025-04-14 02:13:05 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:13:05 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:13:05 | DEBUG | Route matched: account-service-route
2025-04-14 02:13:05 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:13:05 | DEBUG | [17e14959-18] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:13:05 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:13:05 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:13:05 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"6b2be599-b818-4584-86ca-570c6a0926f5", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62621"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:13:05 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a0cebe1', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.223E-4, duration(nanos)=122300.0, startTimeNanos=780300851322200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7dd5986d} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"6b2be599-b818-4584-86ca-570c6a0926f5", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62621"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:13:05 | TRACE | outbound route: 392b784b, inbound: [17e14959-18] 
2025-04-14 02:13:05 | DEBUG | Will instrument the response
2025-04-14 02:13:05 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a0cebe1', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.8508554, duration(nanos)=8.508554E8, startTimeNanos=780300851322200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7dd5986d}
2025-04-14 02:13:05 | TRACE | NettyWriteResponseFilter start inbound: 392b784b, outbound: [17e14959-18] 
2025-04-14 02:13:05 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:17:16 | TRACE | Weights attr: {}
2025-04-14 02:17:16 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:17:16 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:17:16 | DEBUG | Route matched: account-service-route
2025-04-14 02:17:16 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:17:16 | DEBUG | [abeaa45c-19] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:17:16 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:17:16 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:17:16 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"029005db-14d2-47ec-85f0-11fe32f6d38f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62653"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:17:16 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7b057a51', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.479E-4, duration(nanos)=347900.0, startTimeNanos=780552448571500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@18bdb6e} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"029005db-14d2-47ec-85f0-11fe32f6d38f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62653"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:17:16 | TRACE | outbound route: 918755e4, inbound: [abeaa45c-19] 
2025-04-14 02:17:16 | DEBUG | Will instrument the response
2025-04-14 02:17:16 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7b057a51', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0664322, duration(nanos)=6.64322E7, startTimeNanos=780552448571500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@18bdb6e}
2025-04-14 02:17:16 | TRACE | NettyWriteResponseFilter start inbound: 918755e4, outbound: [abeaa45c-19] 
2025-04-14 02:17:16 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=405),tag(outcome=CLIENT_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=METHOD_NOT_ALLOWED)]
2025-04-14 02:17:30 | TRACE | Weights attr: {}
2025-04-14 02:17:30 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:17:30 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:17:30 | DEBUG | Route matched: account-service-route
2025-04-14 02:17:30 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:17:30 | DEBUG | [abeaa45c-20] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:17:30 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:17:30 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:17:30 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"7d4f5e58-a79f-4cb4-9560-6918de4f5418", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62653"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:17:30 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@290596ab', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.82E-5, duration(nanos)=78200.0, startTimeNanos=780566672430800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4b0e0c80} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"7d4f5e58-a79f-4cb4-9560-6918de4f5418", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62653"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:17:30 | TRACE | outbound route: 918755e4, inbound: [abeaa45c-20] 
2025-04-14 02:17:30 | DEBUG | Will instrument the response
2025-04-14 02:17:30 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@290596ab', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0197356, duration(nanos)=1.97356E7, startTimeNanos=780566672430800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4b0e0c80}
2025-04-14 02:17:30 | TRACE | NettyWriteResponseFilter start inbound: 918755e4, outbound: [abeaa45c-20] 
2025-04-14 02:17:30 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=405),tag(outcome=CLIENT_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=METHOD_NOT_ALLOWED)]
2025-04-14 02:18:07 | TRACE | Weights attr: {}
2025-04-14 02:18:07 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:18:07 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:18:07 | DEBUG | Route matched: account-service-route
2025-04-14 02:18:07 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:18:07 | DEBUG | [abeaa45c-21] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:18:07 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:18:07 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:18:07 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"50a17597-0d7c-48fc-b2ca-2299c079d190", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62653"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:18:07 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3cbcea44', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.197E-4, duration(nanos)=119700.0, startTimeNanos=780603714593400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1530b678} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"50a17597-0d7c-48fc-b2ca-2299c079d190", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62653"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:18:07 | TRACE | outbound route: e80c9be6, inbound: [abeaa45c-21] 
2025-04-14 02:18:08 | DEBUG | Will instrument the response
2025-04-14 02:18:08 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3cbcea44', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.8440424, duration(nanos)=8.440424E8, startTimeNanos=780603714593400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1530b678}
2025-04-14 02:18:08 | TRACE | NettyWriteResponseFilter start inbound: e80c9be6, outbound: [abeaa45c-21] 
2025-04-14 02:18:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:28:40 | TRACE | Weights attr: {}
2025-04-14 02:28:40 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-14 02:28:40 | DEBUG | Route matched: user-service-route
2025-04-14 02:28:40 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:28:40 | DEBUG | [a719e9f1-25] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:28:40 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:28:40 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:28:40 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744572517.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:62803"", X-Forwarded-Port:"80"]
2025-04-14 02:28:40 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@57437e97', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.08E-5, duration(nanos)=80800.0, startTimeNanos=781236171524600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@68492e2} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744572517.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:62803"", X-Forwarded-Port:"80"]
2025-04-14 02:28:40 | TRACE | outbound route: 6d57d443, inbound: [a719e9f1-25] 
2025-04-14 02:28:41 | DEBUG | Will instrument the response
2025-04-14 02:28:41 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@57437e97', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.9457384, duration(nanos)=9.457384E8, startTimeNanos=781236171524600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@68492e2}
2025-04-14 02:28:41 | TRACE | NettyWriteResponseFilter start inbound: 6d57d443, outbound: [a719e9f1-25] 
2025-04-14 02:28:41 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-14 02:33:37 | TRACE | Weights attr: {}
2025-04-14 02:33:37 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:33:37 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:33:37 | DEBUG | Route matched: account-service-route
2025-04-14 02:33:37 | DEBUG | Mapping [Exchange: POST http://localhost:8080/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:33:37 | DEBUG | [c6214629-30] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:33:37 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:33:37 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:33:37 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"86eb2cca-de45-4bde-accd-479a6065ddb3", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62987"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:33:37 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3f671b10', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.988E-4, duration(nanos)=298800.0, startTimeNanos=781532930330800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@60e8e739} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NjkwNTYsImV4cCI6MTc0NDY1NTQ1Nn0.xg5y7tg0hETLtHseQRkYfBPVNtPgLcoQxHoPad_HnEQ", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"86eb2cca-de45-4bde-accd-479a6065ddb3", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"271", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:62987"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-14 02:33:37 | TRACE | outbound route: 9c4aabe9, inbound: [c6214629-30] 
2025-04-14 02:33:37 | DEBUG | Will instrument the response
2025-04-14 02:33:37 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3f671b10', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1321204, duration(nanos)=1.321204E8, startTimeNanos=781532930330800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@60e8e739}
2025-04-14 02:33:37 | TRACE | NettyWriteResponseFilter start inbound: 9c4aabe9, outbound: [c6214629-30] 
2025-04-14 02:33:37 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:35:19 | TRACE | Weights attr: {}
2025-04-14 02:35:19 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-14 02:35:19 | DEBUG | Route matched: user-service-route
2025-04-14 02:35:19 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:35:19 | DEBUG | [04555a2e-33] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:35:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:35:19 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:35:19 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744572917.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63074"", X-Forwarded-Port:"80"]
2025-04-14 02:35:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3e2b42a1', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.93E-5, duration(nanos)=99300.0, startTimeNanos=781635117775300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3b9e3b01} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"55", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744572917.0.0.0", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63074"", X-Forwarded-Port:"80"]
2025-04-14 02:35:19 | TRACE | outbound route: 9de14996, inbound: [04555a2e-33] 
2025-04-14 02:35:19 | DEBUG | Will instrument the response
2025-04-14 02:35:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3e2b42a1', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.2743202, duration(nanos)=2.743202E8, startTimeNanos=781635117775300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3b9e3b01}
2025-04-14 02:35:19 | TRACE | NettyWriteResponseFilter start inbound: 9de14996, outbound: [04555a2e-33] 
2025-04-14 02:35:19 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-14 02:37:07 | TRACE | Weights attr: {}
2025-04-14 02:37:07 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:37:07 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:37:07 | DEBUG | Route matched: account-service-route
2025-04-14 02:37:07 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:37:07 | DEBUG | [93512800-38] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:37:07 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:37:07 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:37:07 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573025.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63177"", X-Forwarded-Port:"80"]
2025-04-14 02:37:07 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@c29da2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.688E-4, duration(nanos)=168800.0, startTimeNanos=781743177446300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@10d178b4} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573025.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63177"", X-Forwarded-Port:"80"]
2025-04-14 02:37:07 | TRACE | outbound route: 60239076, inbound: [93512800-38] 
2025-04-14 02:37:07 | TRACE | Weights attr: {}
2025-04-14 02:37:07 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:37:07 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:37:07 | DEBUG | Route matched: account-service-route
2025-04-14 02:37:07 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:37:07 | DEBUG | [8c970f09-39] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:37:07 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:37:07 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:37:07 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573025.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63178"", X-Forwarded-Port:"80"]
2025-04-14 02:37:07 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@f6b83db', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.921E-4, duration(nanos)=892100.0, startTimeNanos=781743237436300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2dda0356} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573025.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63178"", X-Forwarded-Port:"80"]
2025-04-14 02:37:07 | TRACE | outbound route: 00baf24f, inbound: [8c970f09-39] 
2025-04-14 02:37:07 | DEBUG | Will instrument the response
2025-04-14 02:37:07 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@c29da2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1631995, duration(nanos)=1.631995E8, startTimeNanos=781743177446300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@10d178b4}
2025-04-14 02:37:07 | TRACE | NettyWriteResponseFilter start inbound: 60239076, outbound: [93512800-38] 
2025-04-14 02:37:07 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:37:07 | DEBUG | Will instrument the response
2025-04-14 02:37:07 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@f6b83db', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.427117, duration(nanos)=4.27117E8, startTimeNanos=781743237436300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2dda0356}
2025-04-14 02:37:07 | TRACE | NettyWriteResponseFilter start inbound: 00baf24f, outbound: [8c970f09-39] 
2025-04-14 02:37:07 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:37:53 | TRACE | Weights attr: {}
2025-04-14 02:37:53 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:37:53 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:37:53 | DEBUG | Route matched: account-service-route
2025-04-14 02:37:53 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:37:53 | DEBUG | [eaf07474-40] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:37:53 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:37:53 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:37:53 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573027.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63224"", X-Forwarded-Port:"80"]
2025-04-14 02:37:53 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6b5cdd5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.005E-4, duration(nanos)=100500.0, startTimeNanos=781788940008100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@21c32315} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573027.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63224"", X-Forwarded-Port:"80"]
2025-04-14 02:37:53 | TRACE | outbound route: 60239076, inbound: [eaf07474-40] 
2025-04-14 02:37:53 | TRACE | Weights attr: {}
2025-04-14 02:37:53 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:37:53 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:37:53 | DEBUG | Route matched: account-service-route
2025-04-14 02:37:53 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:37:53 | DEBUG | [4ca9a118-41] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:37:53 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:37:53 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:37:53 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573027.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63223"", X-Forwarded-Port:"80"]
2025-04-14 02:37:53 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6ced1e17', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.188E-4, duration(nanos)=118800.0, startTimeNanos=781789006762400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@266166b8} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573027.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63223"", X-Forwarded-Port:"80"]
2025-04-14 02:37:53 | TRACE | outbound route: 00baf24f, inbound: [4ca9a118-41] 
2025-04-14 02:37:53 | DEBUG | Will instrument the response
2025-04-14 02:37:53 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6b5cdd5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1218303, duration(nanos)=1.218303E8, startTimeNanos=781788940008100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@21c32315}
2025-04-14 02:37:53 | TRACE | NettyWriteResponseFilter start inbound: 60239076, outbound: [eaf07474-40] 
2025-04-14 02:37:53 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:37:53 | DEBUG | Will instrument the response
2025-04-14 02:37:53 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6ced1e17', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1163228, duration(nanos)=1.163228E8, startTimeNanos=781789006762400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@266166b8}
2025-04-14 02:37:53 | TRACE | NettyWriteResponseFilter start inbound: 00baf24f, outbound: [4ca9a118-41] 
2025-04-14 02:37:53 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:38:33 | TRACE | Weights attr: {}
2025-04-14 02:38:33 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:38:33 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:38:33 | DEBUG | Route matched: account-service-route
2025-04-14 02:38:33 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:38:33 | DEBUG | [542fad5e-42] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:38:33 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:38:33 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:38:33 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573073.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63263"", X-Forwarded-Port:"80"]
2025-04-14 02:38:33 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@35857ef2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.334E-4, duration(nanos)=133400.0, startTimeNanos=781829505547900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2e0aa42e} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573073.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63263"", X-Forwarded-Port:"80"]
2025-04-14 02:38:33 | TRACE | outbound route: 60239076, inbound: [542fad5e-42] 
2025-04-14 02:38:33 | TRACE | Weights attr: {}
2025-04-14 02:38:33 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:38:33 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:38:33 | DEBUG | Route matched: account-service-route
2025-04-14 02:38:33 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:38:33 | DEBUG | [05d96f10-43] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:38:33 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:38:33 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:38:33 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573073.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63264"", X-Forwarded-Port:"80"]
2025-04-14 02:38:33 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@41b704ca', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.2E-5, duration(nanos)=62000.0, startTimeNanos=781829545163700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3c8a7f19} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cache-Control:"no-cache", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573073.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Pragma:"no-cache", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63264"", X-Forwarded-Port:"80"]
2025-04-14 02:38:33 | TRACE | outbound route: 00baf24f, inbound: [05d96f10-43] 
2025-04-14 02:38:33 | DEBUG | Will instrument the response
2025-04-14 02:38:33 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@35857ef2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0978284, duration(nanos)=9.78284E7, startTimeNanos=781829505547900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2e0aa42e}
2025-04-14 02:38:33 | TRACE | NettyWriteResponseFilter start inbound: 60239076, outbound: [542fad5e-42] 
2025-04-14 02:38:33 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:38:33 | DEBUG | Will instrument the response
2025-04-14 02:38:33 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@41b704ca', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0955987, duration(nanos)=9.55987E7, startTimeNanos=781829545163700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3c8a7f19}
2025-04-14 02:38:33 | TRACE | NettyWriteResponseFilter start inbound: 00baf24f, outbound: [05d96f10-43] 
2025-04-14 02:38:33 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:38:50 | TRACE | Weights attr: {}
2025-04-14 02:38:50 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details"
2025-04-14 02:38:50 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details"
2025-04-14 02:38:50 | DEBUG | Route matched: account-service-route
2025-04-14 02:38:50 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:38:50 | DEBUG | [4966ed33-44] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:38:50 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:38:50 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:38:50 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573113.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a96e45/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63277"", X-Forwarded-Port:"80"]
2025-04-14 02:38:50 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6a7fd4c4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.27E-5, duration(nanos)=62700.0, startTimeNanos=781846278624000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@428c673b} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573113.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a96e45/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63277"", X-Forwarded-Port:"80"]
2025-04-14 02:38:50 | TRACE | outbound route: 60239076, inbound: [4966ed33-44] 
2025-04-14 02:38:50 | DEBUG | Will instrument the response
2025-04-14 02:38:50 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6a7fd4c4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1486979, duration(nanos)=1.486979E8, startTimeNanos=781846278624000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@428c673b}
2025-04-14 02:38:50 | TRACE | NettyWriteResponseFilter start inbound: 60239076, outbound: [4966ed33-44] 
2025-04-14 02:38:50 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:38:50 | TRACE | Weights attr: {}
2025-04-14 02:38:51 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details"
2025-04-14 02:38:51 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details"
2025-04-14 02:38:51 | DEBUG | Route matched: account-service-route
2025-04-14 02:38:51 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:38:51 | DEBUG | [f12ae68d-45] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:38:51 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:38:51 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:38:51 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573113.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a96e45/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63280"", X-Forwarded-Port:"80"]
2025-04-14 02:38:51 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6f580871', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.902E-4, duration(nanos)=190200.0, startTimeNanos=781846743928600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6b41be2b} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573113.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a96e45/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63280"", X-Forwarded-Port:"80"]
2025-04-14 02:38:51 | TRACE | outbound route: 00baf24f, inbound: [f12ae68d-45] 
2025-04-14 02:38:51 | DEBUG | Will instrument the response
2025-04-14 02:38:51 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6f580871', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0942211, duration(nanos)=9.42211E7, startTimeNanos=781846743928600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6b41be2b}
2025-04-14 02:38:51 | TRACE | NettyWriteResponseFilter start inbound: 00baf24f, outbound: [f12ae68d-45] 
2025-04-14 02:38:51 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:41:37 | TRACE | Weights attr: {}
2025-04-14 02:41:37 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a9645/details"
2025-04-14 02:41:37 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a9645/details"
2025-04-14 02:41:37 | DEBUG | Route matched: account-service-route
2025-04-14 02:41:37 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a9645/details] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:41:37 | DEBUG | [54f00b99-46] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:41:37 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:41:37 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:41:37 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573296.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a9645/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63311"", X-Forwarded-Port:"80"]
2025-04-14 02:41:37 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a9645/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@56892dab', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.262E-4, duration(nanos)=126200.0, startTimeNanos=782013397445800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4865bb66} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573296.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a9645/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63311"", X-Forwarded-Port:"80"]
2025-04-14 02:41:37 | TRACE | outbound route: e6741e46, inbound: [54f00b99-46] 
2025-04-14 02:41:37 | DEBUG | Will instrument the response
2025-04-14 02:41:37 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a9645/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@56892dab', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0589992, duration(nanos)=5.89992E7, startTimeNanos=782013397445800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4865bb66}
2025-04-14 02:41:37 | TRACE | NettyWriteResponseFilter start inbound: e6741e46, outbound: [54f00b99-46] 
2025-04-14 02:41:37 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:41:38 | TRACE | Weights attr: {}
2025-04-14 02:41:38 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a9645/details"
2025-04-14 02:41:38 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a9645/details"
2025-04-14 02:41:38 | DEBUG | Route matched: account-service-route
2025-04-14 02:41:38 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a9645/details] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:41:38 | DEBUG | [2e610c9d-47] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:41:38 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:41:38 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:41:38 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573296.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a9645/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63314"", X-Forwarded-Port:"80"]
2025-04-14 02:41:38 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a9645/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@67eabbfb', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.02E-5, duration(nanos)=70200.0, startTimeNanos=782013758679700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1e826298} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573296.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a9645/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63314"", X-Forwarded-Port:"80"]
2025-04-14 02:41:38 | TRACE | outbound route: e6741e46, inbound: [2e610c9d-47] 
2025-04-14 02:41:38 | DEBUG | Will instrument the response
2025-04-14 02:41:38 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a9645/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@67eabbfb', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.036101, duration(nanos)=3.6101E7, startTimeNanos=782013758679700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1e826298}
2025-04-14 02:41:38 | TRACE | NettyWriteResponseFilter start inbound: e6741e46, outbound: [2e610c9d-47] 
2025-04-14 02:41:38 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:41:43 | TRACE | Weights attr: {}
2025-04-14 02:41:43 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details"
2025-04-14 02:41:43 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details"
2025-04-14 02:41:43 | DEBUG | Route matched: account-service-route
2025-04-14 02:41:43 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:41:43 | DEBUG | [c6088c01-48] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:41:43 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:41:43 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:41:43 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573302.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a96e45/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63318"", X-Forwarded-Port:"80"]
2025-04-14 02:41:43 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@461dfd0a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.799E-4, duration(nanos)=679900.0, startTimeNanos=782019499012600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5250d8f9} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573302.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a96e45/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63318"", X-Forwarded-Port:"80"]
2025-04-14 02:41:43 | TRACE | outbound route: e6741e46, inbound: [c6088c01-48] 
2025-04-14 02:41:43 | DEBUG | Will instrument the response
2025-04-14 02:41:43 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@461dfd0a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0879607, duration(nanos)=8.79607E7, startTimeNanos=782019499012600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5250d8f9}
2025-04-14 02:41:43 | TRACE | NettyWriteResponseFilter start inbound: e6741e46, outbound: [c6088c01-48] 
2025-04-14 02:41:43 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:41:44 | TRACE | Weights attr: {}
2025-04-14 02:41:44 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details"
2025-04-14 02:41:44 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details"
2025-04-14 02:41:44 | DEBUG | Route matched: account-service-route
2025-04-14 02:41:44 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:41:44 | DEBUG | [7f06900a-49] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:41:44 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:41:44 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:41:44 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573302.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a96e45/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63320"", X-Forwarded-Port:"80"]
2025-04-14 02:41:44 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4789b6a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.77E-5, duration(nanos)=67700.0, startTimeNanos=782019912063900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2bcc0014} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573302.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/ed34db97-0251-46f7-bba5-9b14c5a96e45/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63320"", X-Forwarded-Port:"80"]
2025-04-14 02:41:44 | TRACE | outbound route: e6741e46, inbound: [7f06900a-49] 
2025-04-14 02:41:44 | DEBUG | Will instrument the response
2025-04-14 02:41:44 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/ed34db97-0251-46f7-bba5-9b14c5a96e45/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4789b6a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1241621, duration(nanos)=1.241621E8, startTimeNanos=782019912063900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2bcc0014}
2025-04-14 02:41:44 | TRACE | NettyWriteResponseFilter start inbound: e6741e46, outbound: [7f06900a-49] 
2025-04-14 02:41:44 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:43:16 | TRACE | Weights attr: {}
2025-04-14 02:43:16 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:43:16 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:43:16 | DEBUG | Route matched: account-service-route
2025-04-14 02:43:16 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:43:16 | DEBUG | [aa2e67d3-50] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:43:16 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:43:16 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:43:16 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63366"", X-Forwarded-Port:"80"]
2025-04-14 02:43:16 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@13b5bb68', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.96E-5, duration(nanos)=59600.0, startTimeNanos=782112353894400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@76ee8cf3} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63366"", X-Forwarded-Port:"80"]
2025-04-14 02:43:16 | TRACE | outbound route: 958094fb, inbound: [aa2e67d3-50] 
2025-04-14 02:43:16 | DEBUG | Will instrument the response
2025-04-14 02:43:16 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@13b5bb68', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1080866, duration(nanos)=1.080866E8, startTimeNanos=782112353894400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@76ee8cf3}
2025-04-14 02:43:16 | TRACE | NettyWriteResponseFilter start inbound: 958094fb, outbound: [aa2e67d3-50] 
2025-04-14 02:43:16 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:43:16 | TRACE | Weights attr: {}
2025-04-14 02:43:16 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:43:16 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:43:16 | DEBUG | Route matched: account-service-route
2025-04-14 02:43:16 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:43:16 | DEBUG | [22c9dfc8-51] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:43:16 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:43:16 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:43:16 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63370"", X-Forwarded-Port:"80"]
2025-04-14 02:43:16 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@dab87bf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.33E-5, duration(nanos)=63300.0, startTimeNanos=782112619877800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3f2cd092} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63370"", X-Forwarded-Port:"80"]
2025-04-14 02:43:16 | TRACE | outbound route: 958094fb, inbound: [22c9dfc8-51] 
2025-04-14 02:43:16 | DEBUG | Will instrument the response
2025-04-14 02:43:16 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@dab87bf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1125735, duration(nanos)=1.125735E8, startTimeNanos=782112619877800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3f2cd092}
2025-04-14 02:43:16 | TRACE | NettyWriteResponseFilter start inbound: 958094fb, outbound: [22c9dfc8-51] 
2025-04-14 02:43:16 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:43:18 | TRACE | Weights attr: {}
2025-04-14 02:43:18 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details"
2025-04-14 02:43:18 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details"
2025-04-14 02:43:18 | DEBUG | Route matched: account-service-route
2025-04-14 02:43:18 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:43:18 | DEBUG | [7f3a6d3d-52] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:43:18 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:43:18 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:43:18 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63374"", X-Forwarded-Port:"80"]
2025-04-14 02:43:18 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7057d924', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.969E-4, duration(nanos)=496900.0, startTimeNanos=782114678025700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@590b9f89} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63374"", X-Forwarded-Port:"80"]
2025-04-14 02:43:18 | TRACE | outbound route: 958094fb, inbound: [7f3a6d3d-52] 
2025-04-14 02:43:19 | DEBUG | Will instrument the response
2025-04-14 02:43:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7057d924', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0974272, duration(nanos)=9.74272E7, startTimeNanos=782114678025700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@590b9f89}
2025-04-14 02:43:19 | TRACE | NettyWriteResponseFilter start inbound: 958094fb, outbound: [7f3a6d3d-52] 
2025-04-14 02:43:19 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:43:19 | TRACE | Weights attr: {}
2025-04-14 02:43:19 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details"
2025-04-14 02:43:19 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details"
2025-04-14 02:43:19 | DEBUG | Route matched: account-service-route
2025-04-14 02:43:19 | DEBUG | Mapping [Exchange: GET http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:43:19 | DEBUG | [40046d64-53] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:43:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:43:19 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:43:19 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63378"", X-Forwarded-Port:"80"]
2025-04-14 02:43:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@49ac41f7', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.16E-5, duration(nanos)=61600.0, startTimeNanos=782115371909600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@9cf3063} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Referer:"http://localhost:5173/account-dashboard/transaction-history/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63378"", X-Forwarded-Port:"80"]
2025-04-14 02:43:19 | TRACE | outbound route: 958094fb, inbound: [40046d64-53] 
2025-04-14 02:43:19 | DEBUG | Will instrument the response
2025-04-14 02:43:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/0ab105d1-9eb4-4c50-aa15-c67c0321e940/details'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@49ac41f7', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0871669, duration(nanos)=8.71669E7, startTimeNanos=782115371909600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@9cf3063}
2025-04-14 02:43:19 | TRACE | NettyWriteResponseFilter start inbound: 958094fb, outbound: [40046d64-53] 
2025-04-14 02:43:19 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:43:25 | TRACE | Weights attr: {}
2025-04-14 02:43:25 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:43:25 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:43:25 | DEBUG | Route matched: account-service-route
2025-04-14 02:43:25 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:43:25 | DEBUG | [338ba357-54] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:43:25 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:43:25 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:43:25 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63386"", X-Forwarded-Port:"80"]
2025-04-14 02:43:25 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2c94c8b1', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.39E-5, duration(nanos)=93900.0, startTimeNanos=782121388728300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2e9f50c4} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63386"", X-Forwarded-Port:"80"]
2025-04-14 02:43:25 | TRACE | outbound route: 958094fb, inbound: [338ba357-54] 
2025-04-14 02:43:25 | TRACE | Weights attr: {}
2025-04-14 02:43:25 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:43:25 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:43:25 | DEBUG | Route matched: account-service-route
2025-04-14 02:43:25 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:43:25 | DEBUG | [0e17f768-55] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:43:25 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:43:25 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:43:25 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63387"", X-Forwarded-Port:"80"]
2025-04-14 02:43:25 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3e834969', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.84E-5, duration(nanos)=98400.0, startTimeNanos=782121427012900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6f44b779} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63387"", X-Forwarded-Port:"80"]
2025-04-14 02:43:25 | TRACE | outbound route: e262075a, inbound: [0e17f768-55] 
2025-04-14 02:43:25 | DEBUG | Will instrument the response
2025-04-14 02:43:25 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2c94c8b1', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1325409, duration(nanos)=1.325409E8, startTimeNanos=782121388728300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2e9f50c4}
2025-04-14 02:43:25 | TRACE | NettyWriteResponseFilter start inbound: 958094fb, outbound: [338ba357-54] 
2025-04-14 02:43:25 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:43:25 | DEBUG | Will instrument the response
2025-04-14 02:43:25 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3e834969', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1042232, duration(nanos)=1.042232E8, startTimeNanos=782121427012900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6f44b779}
2025-04-14 02:43:25 | TRACE | NettyWriteResponseFilter start inbound: e262075a, outbound: [0e17f768-55] 
2025-04-14 02:43:25 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:53:24 | TRACE | Weights attr: {}
2025-04-14 02:53:24 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:53:24 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:53:24 | DEBUG | Route matched: account-service-route
2025-04-14 02:53:24 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:53:24 | DEBUG | [addd7708-56] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:53:24 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:53:24 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:53:24 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63485"", X-Forwarded-Port:"80"]
2025-04-14 02:53:24 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5898e7bf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.6E-5, duration(nanos)=76000.0, startTimeNanos=782719929160300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@16489b71} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63485"", X-Forwarded-Port:"80"]
2025-04-14 02:53:24 | TRACE | outbound route: 2a2b660b, inbound: [addd7708-56] 
2025-04-14 02:53:24 | DEBUG | Will instrument the response
2025-04-14 02:53:24 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5898e7bf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1034641, duration(nanos)=1.034641E8, startTimeNanos=782719929160300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@16489b71}
2025-04-14 02:53:24 | TRACE | NettyWriteResponseFilter start inbound: 2a2b660b, outbound: [addd7708-56] 
2025-04-14 02:53:24 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:56:44 | TRACE | Weights attr: {}
2025-04-14 02:56:44 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:56:44 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:56:44 | DEBUG | Route matched: account-service-route
2025-04-14 02:56:44 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:56:44 | DEBUG | [e18b5039-57] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:56:44 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:56:44 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:56:45 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63500"", X-Forwarded-Port:"80"]
2025-04-14 02:56:45 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5dd00154', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.32E-4, duration(nanos)=132000.0, startTimeNanos=782921022626300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@76d840e0} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63500"", X-Forwarded-Port:"80"]
2025-04-14 02:56:45 | TRACE | outbound route: b2393b3d, inbound: [e18b5039-57] 
2025-04-14 02:56:45 | DEBUG | Will instrument the response
2025-04-14 02:56:45 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5dd00154', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1104412, duration(nanos)=1.104412E8, startTimeNanos=782921022626300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@76d840e0}
2025-04-14 02:56:45 | TRACE | NettyWriteResponseFilter start inbound: b2393b3d, outbound: [e18b5039-57] 
2025-04-14 02:56:45 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:56:53 | TRACE | Weights attr: {}
2025-04-14 02:56:53 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:56:53 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:56:53 | DEBUG | Route matched: account-service-route
2025-04-14 02:56:53 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:56:53 | DEBUG | [3d7fc731-58] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:56:53 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:56:53 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:56:53 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63503"", X-Forwarded-Port:"80"]
2025-04-14 02:56:53 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@516703c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.637E-4, duration(nanos)=163700.0, startTimeNanos=782928827810800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@f4df16f} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63503"", X-Forwarded-Port:"80"]
2025-04-14 02:56:53 | TRACE | outbound route: b2393b3d, inbound: [3d7fc731-58] 
2025-04-14 02:56:53 | DEBUG | Will instrument the response
2025-04-14 02:56:53 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@516703c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0902107, duration(nanos)=9.02107E7, startTimeNanos=782928827810800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@f4df16f}
2025-04-14 02:56:53 | TRACE | NettyWriteResponseFilter start inbound: b2393b3d, outbound: [3d7fc731-58] 
2025-04-14 02:56:53 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:57:02 | TRACE | Weights attr: {}
2025-04-14 02:57:02 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:57:02 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:57:02 | DEBUG | Route matched: account-service-route
2025-04-14 02:57:02 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:57:02 | DEBUG | [a14640db-59] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:57:02 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:57:02 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:57:02 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63505"", X-Forwarded-Port:"80"]
2025-04-14 02:57:02 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1f793c59', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.22E-5, duration(nanos)=92200.0, startTimeNanos=782938235400600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@554cafb0} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63505"", X-Forwarded-Port:"80"]
2025-04-14 02:57:02 | TRACE | outbound route: b2393b3d, inbound: [a14640db-59] 
2025-04-14 02:57:02 | DEBUG | Will instrument the response
2025-04-14 02:57:02 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1f793c59', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0941307, duration(nanos)=9.41307E7, startTimeNanos=782938235400600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@554cafb0}
2025-04-14 02:57:02 | TRACE | NettyWriteResponseFilter start inbound: b2393b3d, outbound: [a14640db-59] 
2025-04-14 02:57:02 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-14 02:57:12 | TRACE | Weights attr: {}
2025-04-14 02:57:12 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/transactions/api/v1/get"
2025-04-14 02:57:12 | TRACE | Pattern "/accounts/**" matches against value "/accounts/transactions/api/v1/get"
2025-04-14 02:57:12 | DEBUG | Route matched: account-service-route
2025-04-14 02:57:12 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-14 02:57:12 | DEBUG | [08ab0f90-60] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@110318a7
2025-04-14 02:57:12 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@412440c1}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@22c0344e}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@4d9bccfe}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@201b52f7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@57806346}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@36c45149}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@40416321}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@435a2c7d}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2184962c}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@33f4844b}, order = 2147483647]]
2025-04-14 02:57:12 | TRACE | RouteToRequestUrlFilter start
2025-04-14 02:57:12 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63512"", X-Forwarded-Port:"80"]
2025-04-14 02:57:12 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@411f53bf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.66E-5, duration(nanos)=66600.0, startTimeNanos=782948296423800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@135ecbfe} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"22", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"en-US,en;q=0.9", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQ1NzI5MTksImV4cCI6MTc0NDY1OTMxOX0.N85K57ZzLP1Ulg3-sAXmD7oCc_kzZHMGI_9afLwB2lI", Content-Type:"application/json", Cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744572498.62.1.1744573303.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://localhost:5173", Referer:"http://localhost:5173/account-dashboard/transaction-history", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"42.113.117.160,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:63512"", X-Forwarded-Port:"80"]
2025-04-14 02:57:12 | TRACE | outbound route: b2393b3d, inbound: [08ab0f90-60] 
2025-04-14 02:57:12 | DEBUG | Will instrument the response
2025-04-14 02:57:12 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/accounts/transactions/api/v1/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@411f53bf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0897063, duration(nanos)=8.97063E7, startTimeNanos=782948296423800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@135ecbfe}
2025-04-14 02:57:12 | TRACE | NettyWriteResponseFilter start inbound: b2393b3d, outbound: [08ab0f90-60] 
2025-04-14 02:57:12 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
