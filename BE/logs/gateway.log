2025-04-22 02:22:49 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-22 02:22:50 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-22 02:22:51 | INFO  | Graceful shutdown complete
2025-04-22 02:22:52 | DEBUG | closeAsync()
2025-04-22 02:22:52 | DEBUG | [channel=0x2151b10e, /192.168.102.3:55410 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-22 02:22:52 | DEBUG | [channel=0x2151b10e, /192.168.102.3:55410 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelInactive()
2025-04-22 02:22:52 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-22 02:22:52 | DEBUG | [channel=0x2151b10e, /192.168.102.3:55410 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-22 02:22:52 | DEBUG | [channel=0x2151b10e, /192.168.102.3:55410 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelInactive() done
2025-04-22 02:22:52 | DEBUG | [channel=0x2151b10e, /192.168.102.3:55410 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-22 02:22:52 | DEBUG | [channel=0x2151b10e, /192.168.102.3:55410 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-22 02:22:52 | DEBUG | [channel=0x2151b10e, /192.168.102.3:55410 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelUnregistered()
2025-04-22 02:22:52 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@12e2f5ab
2025-04-22 02:22:56 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-22 02:22:56 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-22 08:49:24 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-22 08:49:24 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 12020 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-22 08:49:24 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-22 08:49:24 | INFO  | The following 1 profile is active: "local"
2025-04-22 08:49:25 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-22 08:49:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-22 08:49:26 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-22 08:49:26 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-22 08:49:26 | INFO  | Finished Spring Data repository scanning in 35 ms. Found 0 Redis repository interfaces.
2025-04-22 08:49:27 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-22 08:49:27 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-22 08:49:27 | DEBUG | Starting without optional kqueue library
2025-04-22 08:49:27 | DEBUG | Starting without optional io_uring library
2025-04-22 08:49:27 | DEBUG | Starting without optional epoll library
2025-04-22 08:49:27 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-22 08:49:27 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-22 08:49:27 | DEBUG | Starting with JFR support
2025-04-22 08:49:28 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-22 08:49:28 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-22 08:49:28 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-22 08:49:28 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@151659dd, existing ref count 0
2025-04-22 08:49:29 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-22 08:49:29 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, [id: 0xd0feac1e] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-22 08:49:29 | DEBUG | Decode done, empty stack: true
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-22 08:49:29 | DEBUG | Decode done, empty stack: true
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-22 08:49:29 | DEBUG | Decode done, empty stack: true
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-22 08:49:29 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-22 08:49:29 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-22 08:49:30 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-22 08:49:30 | DEBUG | Decode done, empty stack: true
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 08:49:30 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-22 08:49:30 | DEBUG | Decode done, empty stack: true
2025-04-22 08:49:30 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 08:49:30 | INFO  | 

Using generated security password: 3f5bc06d-9e35-4207-b9a4-a7778c662740

2025-04-22 08:49:31 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}, RouteDefinition{id='kafka-management-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/sagas/**}}], filters=[], uri=http://localhost:8085, order=0, metadata={}, enabled=true}]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-22 08:49:31 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-22 08:49:32 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-22 08:49:33 | INFO  | Netty started on port 8080 (http)
2025-04-22 08:49:33 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-22 08:49:33 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-22 08:49:33 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-22 08:49:33 | DEBUG | RouteDefinition matched: user-service-route
2025-04-22 08:49:33 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-22 08:49:33 | DEBUG | RouteDefinition matched: account-service-route
2025-04-22 08:49:33 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-22 08:49:33 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-22 08:49:33 | DEBUG | RouteDefinition kafka-management-service-route applying {_genkey_0=/sagas/**} to Path
2025-04-22 08:49:33 | DEBUG | RouteDefinition matched: kafka-management-service-route
2025-04-22 08:49:33 | DEBUG | New routes count: 4
2025-04-22 08:49:33 | INFO  | Started ApiGatewayApplication in 10.459 seconds (process running for 20.041)
2025-04-22 08:50:41 | TRACE | Weights attr: {}
2025-04-22 08:50:41 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-22 08:50:41 | DEBUG | Route matched: user-service-route
2025-04-22 08:50:41 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 08:50:41 | DEBUG | [74facf37-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 08:50:41 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 08:50:41 | TRACE | RouteToRequestUrlFilter start
2025-04-22 08:50:41 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"63", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745286254.6.0.1745286254.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.39,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:52777"", X-Forwarded-Port:"80"]
2025-04-22 08:50:41 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0011375, duration(nanos)=1137500.0, startTimeNanos=81325123670600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2a674230'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@30d3dc36} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"63", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745286254.6.0.1745286254.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.39,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:52777"", X-Forwarded-Port:"80"]
2025-04-22 08:50:41 | TRACE | outbound route: a3f30c52, inbound: [74facf37-1] 
2025-04-22 08:50:42 | DEBUG | Will instrument the response
2025-04-22 08:50:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.3029282, duration(nanos)=1.3029282E9, startTimeNanos=81325123670600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2a674230'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@30d3dc36}
2025-04-22 08:50:42 | TRACE | NettyWriteResponseFilter start inbound: a3f30c52, outbound: [74facf37-1] 
2025-04-22 08:50:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 08:51:06 | TRACE | Weights attr: {}
2025-04-22 08:51:06 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/logout"
2025-04-22 08:51:06 | DEBUG | Route matched: user-service-route
2025-04-22 08:51:06 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/logout] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 08:51:06 | DEBUG | [22839a99-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 08:51:06 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 08:51:06 | TRACE | RouteToRequestUrlFilter start
2025-04-22 08:51:06 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"0", Accept:"*/*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2ODAyNWQ0M2IzMmE3NDdkYWYxMWI5ZWMiLCJpYXQiOjE3NDUyODY2NDIsImV4cCI6MTc0NTM3MzA0Mn0.pPaPT8NkbwSLXRDECk-m9rSUe-ADQoAhttAbRZx5Wp8", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745286254.6.0.1745286254.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/home", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"103.238.68.84,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:52798"", X-Forwarded-Port:"80"]
2025-04-22 08:51:06 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/logout'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.028E-4, duration(nanos)=102800.0, startTimeNanos=81350025839600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3ad32752'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@12b9bce5} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"0", Accept:"*/*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2ODAyNWQ0M2IzMmE3NDdkYWYxMWI5ZWMiLCJpYXQiOjE3NDUyODY2NDIsImV4cCI6MTc0NTM3MzA0Mn0.pPaPT8NkbwSLXRDECk-m9rSUe-ADQoAhttAbRZx5Wp8", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745286254.6.0.1745286254.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/home", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"103.238.68.84,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:52798"", X-Forwarded-Port:"80"]
2025-04-22 08:51:06 | TRACE | outbound route: a3f30c52, inbound: [22839a99-2] 
2025-04-22 08:51:08 | DEBUG | Will instrument the response
2025-04-22 08:51:08 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/logout'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.1011143, duration(nanos)=2.1011143E9, startTimeNanos=81350025839600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3ad32752'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@12b9bce5}
2025-04-22 08:51:08 | TRACE | NettyWriteResponseFilter start inbound: a3f30c52, outbound: [22839a99-2] 
2025-04-22 08:51:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 08:51:14 | TRACE | Weights attr: {}
2025-04-22 08:51:14 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/register"
2025-04-22 08:51:14 | DEBUG | Route matched: user-service-route
2025-04-22 08:51:14 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 08:51:14 | DEBUG | [a92a3afd-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 08:51:14 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 08:51:14 | TRACE | RouteToRequestUrlFilter start
2025-04-22 08:51:14 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"101", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Content-Type:"application/json", Postman-Token:"43dde6b2-4499-4c03-a17f-0de14fdd8aa8", X-Forwarded-For:"113.160.14.39,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:52811"", X-Forwarded-Port:"80"]
2025-04-22 08:51:14 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.215E-4, duration(nanos)=121500.0, startTimeNanos=81358154222800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@79ac2daf'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@776bdcea} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"101", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Content-Type:"application/json", Postman-Token:"43dde6b2-4499-4c03-a17f-0de14fdd8aa8", X-Forwarded-For:"113.160.14.39,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:52811"", X-Forwarded-Port:"80"]
2025-04-22 08:51:14 | TRACE | outbound route: a3f30c52, inbound: [a92a3afd-3] 
2025-04-22 08:51:14 | DEBUG | Will instrument the response
2025-04-22 08:51:14 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0439982, duration(nanos)=4.39982E7, startTimeNanos=81358154222800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@79ac2daf'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@776bdcea}
2025-04-22 08:51:14 | TRACE | NettyWriteResponseFilter start inbound: a3f30c52, outbound: [a92a3afd-3] 
2025-04-22 08:51:14 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 09:21:59 | TRACE | Weights attr: {}
2025-04-22 09:21:59 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/forgot-password"
2025-04-22 09:21:59 | DEBUG | Route matched: user-service-route
2025-04-22 09:21:59 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 09:21:59 | DEBUG | [6dce4c18-4] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 09:21:59 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 09:21:59 | TRACE | RouteToRequestUrlFilter start
2025-04-22 09:21:59 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288421.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53068"", X-Forwarded-Port:"80"]
2025-04-22 09:21:59 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.799E-4, duration(nanos)=179900.0, startTimeNanos=83202998010700}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@409de509'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4e5a136a} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288421.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53068"", X-Forwarded-Port:"80"]
2025-04-22 09:21:59 | TRACE | outbound route: fd0e0464, inbound: [6dce4c18-4] 
2025-04-22 09:22:01 | TRACE | Weights attr: {}
2025-04-22 09:22:01 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/forgot-password"
2025-04-22 09:22:01 | DEBUG | Route matched: user-service-route
2025-04-22 09:22:01 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 09:22:01 | DEBUG | [5d486915-5] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 09:22:01 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 09:22:01 | TRACE | RouteToRequestUrlFilter start
2025-04-22 09:22:01 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288421.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53072"", X-Forwarded-Port:"80"]
2025-04-22 09:22:01 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.126E-4, duration(nanos)=112600.0, startTimeNanos=83204914474100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@104df768'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@29f70d59} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288421.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53072"", X-Forwarded-Port:"80"]
2025-04-22 09:22:01 | TRACE | outbound route: 732d6d88, inbound: [5d486915-5] 
2025-04-22 09:22:03 | DEBUG | Will instrument the response
2025-04-22 09:22:03 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.0939761, duration(nanos)=4.0939761E9, startTimeNanos=83202998010700}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@409de509'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4e5a136a}
2025-04-22 09:22:03 | TRACE | NettyWriteResponseFilter start inbound: fd0e0464, outbound: [6dce4c18-4] 
2025-04-22 09:22:03 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 09:22:04 | DEBUG | Will instrument the response
2025-04-22 09:22:04 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.4718818, duration(nanos)=3.4718818E9, startTimeNanos=83204914474100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@104df768'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@29f70d59}
2025-04-22 09:22:04 | TRACE | NettyWriteResponseFilter start inbound: 732d6d88, outbound: [5d486915-5] 
2025-04-22 09:22:04 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 09:22:10 | TRACE | Weights attr: {}
2025-04-22 09:22:10 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/forgot-password"
2025-04-22 09:22:10 | DEBUG | Route matched: user-service-route
2025-04-22 09:22:10 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 09:22:10 | DEBUG | [b719b3a8-6] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 09:22:10 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 09:22:10 | TRACE | RouteToRequestUrlFilter start
2025-04-22 09:22:10 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288526.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"103.238.68.84,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53077"", X-Forwarded-Port:"80"]
2025-04-22 09:22:10 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.18E-5, duration(nanos)=91800.0, startTimeNanos=83213740748700}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@51f1b2b0'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@ef072ff} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288526.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"103.238.68.84,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53077"", X-Forwarded-Port:"80"]
2025-04-22 09:22:10 | TRACE | outbound route: fd0e0464, inbound: [b719b3a8-6] 
2025-04-22 09:22:11 | TRACE | Weights attr: {}
2025-04-22 09:22:11 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/forgot-password"
2025-04-22 09:22:11 | DEBUG | Route matched: user-service-route
2025-04-22 09:22:11 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 09:22:11 | DEBUG | [cd245806-7] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 09:22:11 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 09:22:11 | TRACE | RouteToRequestUrlFilter start
2025-04-22 09:22:11 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288526.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.39,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53090"", X-Forwarded-Port:"80"]
2025-04-22 09:22:11 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.42E-5, duration(nanos)=84200.0, startTimeNanos=83215204219900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3656d6d1'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2e8f54e1} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288526.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.39,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53090"", X-Forwarded-Port:"80"]
2025-04-22 09:22:11 | TRACE | outbound route: 732d6d88, inbound: [cd245806-7] 
2025-04-22 09:22:11 | DEBUG | Will instrument the response
2025-04-22 09:22:11 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.273278, duration(nanos)=2.73278E8, startTimeNanos=83215204219900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3656d6d1'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2e8f54e1}
2025-04-22 09:22:11 | TRACE | NettyWriteResponseFilter start inbound: 732d6d88, outbound: [cd245806-7] 
2025-04-22 09:22:12 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 09:22:13 | DEBUG | Will instrument the response
2025-04-22 09:22:13 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.4290255, duration(nanos)=3.4290255E9, startTimeNanos=83213740748700}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@51f1b2b0'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@ef072ff}
2025-04-22 09:22:13 | TRACE | NettyWriteResponseFilter start inbound: fd0e0464, outbound: [b719b3a8-6] 
2025-04-22 09:22:13 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 09:22:37 | TRACE | Weights attr: {}
2025-04-22 09:22:37 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/forgot-password"
2025-04-22 09:22:37 | DEBUG | Route matched: user-service-route
2025-04-22 09:22:37 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 09:22:37 | DEBUG | [20839d38-8] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 09:22:37 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 09:22:37 | TRACE | RouteToRequestUrlFilter start
2025-04-22 09:22:37 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288526.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53095"", X-Forwarded-Port:"80"]
2025-04-22 09:22:37 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.53E-5, duration(nanos)=85300.0, startTimeNanos=83240721959000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6b06fdf7'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@224392df} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288526.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53095"", X-Forwarded-Port:"80"]
2025-04-22 09:22:37 | TRACE | outbound route: 732d6d88, inbound: [20839d38-8] 
2025-04-22 09:22:37 | DEBUG | Will instrument the response
2025-04-22 09:22:37 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.2711927, duration(nanos)=2.711927E8, startTimeNanos=83240721959000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6b06fdf7'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@224392df}
2025-04-22 09:22:37 | TRACE | NettyWriteResponseFilter start inbound: 732d6d88, outbound: [20839d38-8] 
2025-04-22 09:22:37 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 09:22:38 | TRACE | Weights attr: {}
2025-04-22 09:22:38 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/forgot-password"
2025-04-22 09:22:38 | DEBUG | Route matched: user-service-route
2025-04-22 09:22:38 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 09:22:38 | DEBUG | [d0ab348b-9] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 09:22:38 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 09:22:38 | TRACE | RouteToRequestUrlFilter start
2025-04-22 09:22:38 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288526.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53096"", X-Forwarded-Port:"80"]
2025-04-22 09:22:38 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.33E-5, duration(nanos)=83300.0, startTimeNanos=83241650901800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3b2d8f9f'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2a21d066} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"33", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745288526.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53096"", X-Forwarded-Port:"80"]
2025-04-22 09:22:38 | TRACE | outbound route: fd0e0464, inbound: [d0ab348b-9] 
2025-04-22 09:22:38 | DEBUG | Will instrument the response
2025-04-22 09:22:38 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.2758674, duration(nanos)=2.758674E8, startTimeNanos=83241650901800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3b2d8f9f'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2a21d066}
2025-04-22 09:22:38 | TRACE | NettyWriteResponseFilter start inbound: fd0e0464, outbound: [d0ab348b-9] 
2025-04-22 09:22:38 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 09:47:44 | TRACE | Weights attr: {}
2025-04-22 09:47:44 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/register"
2025-04-22 09:47:44 | DEBUG | Route matched: user-service-route
2025-04-22 09:47:44 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 09:47:44 | DEBUG | [0953c232-13] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 09:47:44 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 09:47:44 | TRACE | RouteToRequestUrlFilter start
2025-04-22 09:47:44 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"76", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745289697.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53390"", X-Forwarded-Port:"80"]
2025-04-22 09:47:44 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.73E-4, duration(nanos)=173000.0, startTimeNanos=84747983581300}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@72fa9677'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2e42deaa} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"76", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745289697.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53390"", X-Forwarded-Port:"80"]
2025-04-22 09:47:44 | TRACE | outbound route: 8fd113b0, inbound: [0953c232-13] 
2025-04-22 09:47:44 | DEBUG | Will instrument the response
2025-04-22 09:47:44 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0533797, duration(nanos)=5.33797E7, startTimeNanos=84747983581300}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@72fa9677'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2e42deaa}
2025-04-22 09:47:44 | TRACE | NettyWriteResponseFilter start inbound: 8fd113b0, outbound: [0953c232-13] 
2025-04-22 09:47:44 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 09:48:29 | TRACE | Weights attr: {}
2025-04-22 09:48:29 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/register"
2025-04-22 09:48:29 | DEBUG | Route matched: user-service-route
2025-04-22 09:48:29 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 09:48:29 | DEBUG | [2f9869fd-14] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 09:48:29 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 09:48:29 | TRACE | RouteToRequestUrlFilter start
2025-04-22 09:48:29 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"71", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745289697.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53399"", X-Forwarded-Port:"80"]
2025-04-22 09:48:29 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.148E-4, duration(nanos)=214800.0, startTimeNanos=84793082048900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@56999dc2'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5679299e} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"71", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745289697.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53399"", X-Forwarded-Port:"80"]
2025-04-22 09:48:29 | TRACE | outbound route: 8fd113b0, inbound: [2f9869fd-14] 
2025-04-22 09:48:29 | DEBUG | Will instrument the response
2025-04-22 09:48:29 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0418463, duration(nanos)=4.18463E7, startTimeNanos=84793082048900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@56999dc2'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5679299e}
2025-04-22 09:48:29 | TRACE | NettyWriteResponseFilter start inbound: 8fd113b0, outbound: [2f9869fd-14] 
2025-04-22 09:48:29 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 09:51:18 | TRACE | Weights attr: {}
2025-04-22 09:51:18 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/register"
2025-04-22 09:51:18 | DEBUG | Route matched: user-service-route
2025-04-22 09:51:18 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 09:51:18 | DEBUG | [c30dcccf-15] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 09:51:18 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 09:51:18 | TRACE | RouteToRequestUrlFilter start
2025-04-22 09:51:18 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"76", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745289697.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53421"", X-Forwarded-Port:"80"]
2025-04-22 09:51:18 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.074E-4, duration(nanos)=107400.0, startTimeNanos=84961747853000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7dee311c'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@21db9213} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"76", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745289697.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:53421"", X-Forwarded-Port:"80"]
2025-04-22 09:51:18 | TRACE | outbound route: 6ee46f49, inbound: [c30dcccf-15] 
2025-04-22 09:51:18 | DEBUG | Will instrument the response
2025-04-22 09:51:18 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0438495, duration(nanos)=4.38495E7, startTimeNanos=84961747853000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7dee311c'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@21db9213}
2025-04-22 09:51:18 | TRACE | NettyWriteResponseFilter start inbound: 6ee46f49, outbound: [c30dcccf-15] 
2025-04-22 09:51:18 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 09:54:19 | TRACE | Weights attr: {}
2025-04-22 09:54:19 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/register"
2025-04-22 09:54:19 | DEBUG | Route matched: user-service-route
2025-04-22 09:54:19 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 09:54:19 | DEBUG | [6a2fc856-16] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 09:54:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 09:54:19 | TRACE | RouteToRequestUrlFilter start
2025-04-22 09:54:19 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"101", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Cache-Control:"no-cache", Content-Type:"application/json", Postman-Token:"92a95554-e2d7-432b-84e4-c55ffcda29aa", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:60648"", X-Forwarded-Port:"80"]
2025-04-22 09:54:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.702E-4, duration(nanos)=270200.0, startTimeNanos=85143381240100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@286de289'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7f6bd16c} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"101", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Cache-Control:"no-cache", Content-Type:"application/json", Postman-Token:"92a95554-e2d7-432b-84e4-c55ffcda29aa", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:60648"", X-Forwarded-Port:"80"]
2025-04-22 09:54:19 | TRACE | outbound route: c44f000a, inbound: [6a2fc856-16] 
2025-04-22 09:54:19 | DEBUG | Will instrument the response
2025-04-22 09:54:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0456193, duration(nanos)=4.56193E7, startTimeNanos=85143381240100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@286de289'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7f6bd16c}
2025-04-22 09:54:19 | TRACE | NettyWriteResponseFilter start inbound: c44f000a, outbound: [6a2fc856-16] 
2025-04-22 09:54:19 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 09:56:16 | TRACE | Weights attr: {}
2025-04-22 09:56:16 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/register"
2025-04-22 09:56:16 | DEBUG | Route matched: user-service-route
2025-04-22 09:56:16 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 09:56:16 | DEBUG | [a7be7230-17] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 09:56:16 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 09:56:16 | TRACE | RouteToRequestUrlFilter start
2025-04-22 09:56:16 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"101", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Cache-Control:"no-cache", Content-Type:"application/json", Postman-Token:"8d958a48-459f-4e7b-a3fd-8932a88341a2", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:65282"", X-Forwarded-Port:"80"]
2025-04-22 09:56:16 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.878E-4, duration(nanos)=187800.0, startTimeNanos=85260372801500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@38258d9e'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@aaa3be} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"PostmanRuntime/7.43.3", Content-Length:"101", Accept:"*/*", Accept-Encoding:"gzip, deflate, br", Cache-Control:"no-cache", Content-Type:"application/json", Postman-Token:"8d958a48-459f-4e7b-a3fd-8932a88341a2", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:65282"", X-Forwarded-Port:"80"]
2025-04-22 09:56:16 | TRACE | outbound route: 4d2f7413, inbound: [a7be7230-17] 
2025-04-22 09:56:16 | DEBUG | Will instrument the response
2025-04-22 09:56:16 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0547847, duration(nanos)=5.47847E7, startTimeNanos=85260372801500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@38258d9e'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@aaa3be}
2025-04-22 09:56:16 | TRACE | NettyWriteResponseFilter start inbound: 4d2f7413, outbound: [a7be7230-17] 
2025-04-22 09:56:16 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 10:17:03 | TRACE | Weights attr: {}
2025-04-22 10:17:03 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/register"
2025-04-22 10:17:03 | DEBUG | Route matched: user-service-route
2025-04-22 10:17:03 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 10:17:03 | DEBUG | [011abbb0-18] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 10:17:03 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 10:17:03 | TRACE | RouteToRequestUrlFilter start
2025-04-22 10:17:03 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"80", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745291799.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:59370"", X-Forwarded-Port:"80"]
2025-04-22 10:17:03 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.23E-5, duration(nanos)=92300.0, startTimeNanos=86507117259200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5770161b'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4d9df6ba} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"80", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"csrftoken=uc7yXF7c0DChnFGiY4tVuKOy3QN2cqup; _ga=GA1.1.358429727.1744467333; _ga_1BESNPCQ8G=GS1.1.1745288055.7.1.1745291799.0.0.0", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""macOS"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"113.160.14.17,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:59370"", X-Forwarded-Port:"80"]
2025-04-22 10:17:03 | TRACE | outbound route: ab0a3e5f, inbound: [011abbb0-18] 
2025-04-22 10:17:07 | DEBUG | Will instrument the response
2025-04-22 10:17:07 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/register'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.9036884, duration(nanos)=3.9036884E9, startTimeNanos=86507117259200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5770161b'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4d9df6ba}
2025-04-22 10:17:07 | TRACE | NettyWriteResponseFilter start inbound: ab0a3e5f, outbound: [011abbb0-18] 
2025-04-22 10:17:07 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 11:52:22 | INFO  | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-22 11:52:26 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-22 11:52:26 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-22 11:52:26 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-22 11:52:26 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-22 11:52:26 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-22 11:52:26 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-22 11:52:27 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-22 11:52:27 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-22 11:52:28 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:52:31 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-22 11:52:32 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:52:32 | DEBUG | [channel=0x71400397, [id: 0xcf0ba056] (inactive), epid=0x1, chid=0x2] channelRegistered()
2025-04-22 11:52:33 | DEBUG | [channel=0x71400397, /192.168.102.3:50630 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-22 11:52:33 | DEBUG | [channel=0x71400397, /192.168.102.3:50630 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:52:33 | DEBUG | [channel=0x71400397, /192.168.102.3:50630 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] Received: 705 bytes, 1 commands in the stack
2025-04-22 11:52:44 | DEBUG | [channel=0x71400397, /192.168.102.3:50630 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] Stack contains: 1 commands
2025-04-22 11:52:44 | DEBUG | Decode done, empty stack: true
2025-04-22 11:52:44 | DEBUG | [channel=0x71400397, /192.168.102.3:50630 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:52:44 | DEBUG | [channel=0x71400397, /192.168.102.3:50630 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-22 11:52:44 | DEBUG | [channel=0x71400397, /192.168.102.3:50630 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:52:44 | DEBUG | [channel=0x71400397, /192.168.102.3:50630 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:52:44 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection initialization timed out after 3 second(s)
io.lettuce.core.RedisCommandTimeoutException: Connection initialization timed out after 3 second(s)
	at io.lettuce.core.protocol.RedisHandshakeHandler.lambda$channelRegistered$0(RedisHandshakeHandler.java:52)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:106)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-22 11:52:46 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-22 11:52:46 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 2, delay 2ms
2025-04-22 11:52:46 | DEBUG | [channel=0x71400397, /192.168.102.3:50630 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] channelInactive()
2025-04-22 11:52:46 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-22 11:52:46 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 2 command(s) to buffer
2025-04-22 11:52:46 | DEBUG | [channel=0x71400397, /192.168.102.3:50630 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] channelInactive() done
2025-04-22 11:52:46 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-22 11:52:46 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-22 11:52:46 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Skipping scheduleReconnect() because I have an active channel
2025-04-22 11:52:46 | DEBUG | [channel=0x71400397, /192.168.102.3:50630 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x2] channelUnregistered()
2025-04-22 11:52:46 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:52:46 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-22 11:52:46 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:52:47 | DEBUG | [channel=0x3dbb323d, [id: 0x5df8e914] (inactive), epid=0x1, chid=0x3] channelRegistered()
2025-04-22 11:52:47 | DEBUG | [channel=0x3dbb323d, /192.168.102.3:54528 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-22 11:52:47 | DEBUG | [channel=0x3dbb323d, /192.168.102.3:54528 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:52:54 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection initialization timed out after 3 second(s)
io.lettuce.core.RedisCommandTimeoutException: Connection initialization timed out after 3 second(s)
	at io.lettuce.core.protocol.RedisHandshakeHandler.lambda$channelRegistered$0(RedisHandshakeHandler.java:52)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:106)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-22 11:52:54 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-22 11:52:54 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 3, delay 4ms
2025-04-22 11:52:54 | DEBUG | [channel=0x3dbb323d, /192.168.102.3:54528 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] channelInactive()
2025-04-22 11:52:54 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-22 11:52:54 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 1 command(s) to buffer
2025-04-22 11:52:54 | DEBUG | [channel=0x3dbb323d, /192.168.102.3:54528 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] channelInactive() done
2025-04-22 11:52:54 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-22 11:52:54 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-22 11:52:54 | DEBUG | [channel=0xd81926bd, /10.24.4.125:52764 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Skipping scheduleReconnect() because I have an active channel
2025-04-22 11:52:54 | DEBUG | [channel=0x3dbb323d, /192.168.102.3:54528 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] channelUnregistered()
2025-04-22 11:52:55 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:52:55 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-22 11:52:55 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:52:56 | DEBUG | [channel=0xef7ec708, [id: 0x496bb644] (inactive), epid=0x1, chid=0x4] channelRegistered()
2025-04-22 11:52:56 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-22 11:52:56 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:52:56 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Received: 705 bytes, 1 commands in the stack
2025-04-22 11:52:56 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Stack contains: 1 commands
2025-04-22 11:52:56 | DEBUG | Decode done, empty stack: true
2025-04-22 11:52:56 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:52:56 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-22 11:52:56 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:52:57 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:52:57 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Received: 10 bytes, 2 commands in the stack
2025-04-22 11:52:57 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Stack contains: 2 commands
2025-04-22 11:52:57 | DEBUG | Decode done, empty stack: true
2025-04-22 11:52:57 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Stack contains: 1 commands
2025-04-22 11:53:04 | DEBUG | Decode done, empty stack: true
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] channelActive()
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 3 command(s) buffered
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 3 commands
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] write(ctx, LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] write(ctx, LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] write(ctx, LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelFlush
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] channelActive() done
2025-04-22 11:53:04 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] channelInactive()
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 3 command(s) to buffer
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] channelInactive() done
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-22 11:53:04 | DEBUG | [channel=0xef7ec708, /192.168.102.3:60998 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x4] channelUnregistered()
2025-04-22 11:53:04 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:53:04 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-22 11:53:04 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:53:04 | DEBUG | [channel=0xc1325685, [id: 0xb0330032] (inactive), epid=0x1, chid=0x5] channelRegistered()
2025-04-22 11:53:05 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-22 11:53:05 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:53:05 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Received: 705 bytes, 1 commands in the stack
2025-04-22 11:53:05 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Stack contains: 1 commands
2025-04-22 11:53:05 | DEBUG | Decode done, empty stack: true
2025-04-22 11:53:05 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:05 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-22 11:53:05 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:53:05 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:53:05 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Received: 10 bytes, 2 commands in the stack
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Stack contains: 2 commands
2025-04-22 11:53:19 | DEBUG | Decode done, empty stack: true
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Stack contains: 1 commands
2025-04-22 11:53:19 | DEBUG | Decode done, empty stack: true
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] channelActive()
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 3 command(s) buffered
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 3 commands
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] write(ctx, LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] write(ctx, LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] write(ctx, LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 11:53:19 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:30 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelFlush
2025-04-22 11:53:30 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-22 11:53:30 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] channelActive() done
2025-04-22 11:53:30 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:53:30 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] channelInactive()
2025-04-22 11:53:30 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-22 11:53:30 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 3 command(s) to buffer
2025-04-22 11:53:30 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] channelInactive() done
2025-04-22 11:53:30 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-22 11:53:30 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-22 11:53:30 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-22 11:53:30 | DEBUG | [channel=0xc1325685, /192.168.102.3:61008 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x5] channelUnregistered()
2025-04-22 11:53:31 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:53:31 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-22 11:53:31 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, [id: 0x012cb1d5] (inactive), epid=0x1, chid=0x6] channelRegistered()
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Received: 705 bytes, 1 commands in the stack
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Stack contains: 1 commands
2025-04-22 11:53:31 | DEBUG | Decode done, empty stack: true
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Received: 10 bytes, 2 commands in the stack
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Stack contains: 2 commands
2025-04-22 11:53:31 | DEBUG | Decode done, empty stack: true
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Stack contains: 1 commands
2025-04-22 11:53:31 | DEBUG | Decode done, empty stack: true
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] channelActive()
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 3 command(s) buffered
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 3 commands
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] write(ctx, LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] write(ctx, LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:31 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] write(ctx, LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 11:53:32 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:32 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelFlush
2025-04-22 11:53:32 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-22 11:53:32 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] channelActive() done
2025-04-22 11:53:32 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 11:53:32 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Received: 715 bytes, 3 commands in the stack
2025-04-22 11:53:32 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Stack contains: 3 commands
2025-04-22 11:53:32 | DEBUG | Decode done, empty stack: true
2025-04-22 11:53:32 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:32 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Stack contains: 2 commands
2025-04-22 11:53:32 | DEBUG | Decode done, empty stack: true
2025-04-22 11:53:32 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 11:53:32 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Stack contains: 1 commands
2025-04-22 11:53:32 | DEBUG | Decode done, empty stack: true
2025-04-22 11:53:32 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:14:38 | INFO  | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-22 16:14:38 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] channelInactive()
2025-04-22 16:14:38 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-22 16:14:38 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-22 16:14:38 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] channelInactive() done
2025-04-22 16:14:38 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-22 16:14:38 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-22 16:14:38 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-22 16:14:38 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x6] channelUnregistered()
2025-04-22 16:14:39 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 16:14:40 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-22 16:14:40 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 16:14:40 | DEBUG | [channel=0x1f96faab, [id: 0xab4020d3] (inactive), epid=0x1, chid=0x7] channelRegistered()
2025-04-22 16:14:40 | DEBUG | [channel=0x1f96faab, /192.168.102.3:50077 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x7] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-22 16:14:40 | DEBUG | [channel=0x1f96faab, /192.168.102.3:50077 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 16:14:40 | DEBUG | [channel=0x1f96faab, /192.168.102.3:50077 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x7] Received: 705 bytes, 1 commands in the stack
2025-04-22 16:14:43 | TRACE | Weights attr: {}
2025-04-22 16:15:04 | DEBUG | [channel=0x1f96faab, /192.168.102.3:50077 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x7] Stack contains: 1 commands
2025-04-22 16:15:04 | DEBUG | Decode done, empty stack: true
2025-04-22 16:15:04 | DEBUG | [channel=0x1f96faab, /192.168.102.3:50077 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x7] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:04 | DEBUG | [channel=0x1f96faab, /192.168.102.3:50077 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x7] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-22 16:15:04 | DEBUG | [channel=0x1f96faab, /192.168.102.3:50077 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 16:15:04 | DEBUG | [channel=0x1f96faab, /192.168.102.3:50077 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 16:15:04 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection initialization timed out after 3 second(s)
io.lettuce.core.RedisCommandTimeoutException: Connection initialization timed out after 3 second(s)
	at io.lettuce.core.protocol.RedisHandshakeHandler.lambda$channelRegistered$0(RedisHandshakeHandler.java:52)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:106)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-22 16:15:04 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-22 16:15:04 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 2, delay 2ms
2025-04-22 16:15:04 | DEBUG | [channel=0x1f96faab, /192.168.102.3:50077 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x7] channelInactive()
2025-04-22 16:15:04 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-22 16:15:04 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 2 command(s) to buffer
2025-04-22 16:15:04 | DEBUG | [channel=0x1f96faab, /192.168.102.3:50077 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x7] channelInactive() done
2025-04-22 16:15:04 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-22 16:15:04 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-22 16:15:04 | DEBUG | [channel=0x8b937b39, /192.168.102.3:64039 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Skipping scheduleReconnect() because I have an active channel
2025-04-22 16:15:04 | DEBUG | [channel=0x1f96faab, /192.168.102.3:50077 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x7] channelUnregistered()
2025-04-22 16:15:05 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/forgot-password"
2025-04-22 16:15:05 | DEBUG | Route matched: user-service-route
2025-04-22 16:15:05 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 16:15:05 | DEBUG | [4d1c053b-19] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 16:15:05 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 16:15:05 | TRACE | RouteToRequestUrlFilter start
2025-04-22 16:15:05 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 16:15:05 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-22 16:15:05 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 16:15:05 | DEBUG | [channel=0x1b408f74, [id: 0x2cc0f5ed] (inactive), epid=0x1, chid=0x8] channelRegistered()
2025-04-22 16:15:05 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"_ga=GA1.1.92c2c6f7-3608-4f85-d99a-cfe0c271c161; _ga_699NE13B0K=GS1.1.1743422859.1.1.1743423273.0.0.0; csrftoken=60sSlIwzlqWDOFuITZ2IcDfxzvovnrdxVOiF2roAMFLwROb7xcpBm6zGixxZ2O03; _ga_1BESNPCQ8G=GS1.1.1745311769.19.1.1745313236.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"2402:800:61c3:255d:8d9c:a556:d3cb:21a9,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50083"", X-Forwarded-Port:"80"]
2025-04-22 16:15:05 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.00213, duration(nanos)=2130000.0, startTimeNanos=107989157430400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1141928'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7c224813} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"_ga=GA1.1.92c2c6f7-3608-4f85-d99a-cfe0c271c161; _ga_699NE13B0K=GS1.1.1743422859.1.1.1743423273.0.0.0; csrftoken=60sSlIwzlqWDOFuITZ2IcDfxzvovnrdxVOiF2roAMFLwROb7xcpBm6zGixxZ2O03; _ga_1BESNPCQ8G=GS1.1.1745311769.19.1.1745313236.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"2402:800:61c3:255d:8d9c:a556:d3cb:21a9,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50083"", X-Forwarded-Port:"80"]
2025-04-22 16:15:05 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-22 16:15:05 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 16:15:05 | TRACE | outbound route: 6a9df78d, inbound: [4d1c053b-19] 
2025-04-22 16:15:05 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] Received: 705 bytes, 1 commands in the stack
2025-04-22 16:15:05 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] Stack contains: 1 commands
2025-04-22 16:15:05 | DEBUG | Decode done, empty stack: true
2025-04-22 16:15:05 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:05 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-22 16:15:05 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 16:15:05 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 16:15:06 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] Received: 10 bytes, 2 commands in the stack
2025-04-22 16:15:06 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] Stack contains: 2 commands
2025-04-22 16:15:06 | DEBUG | Decode done, empty stack: true
2025-04-22 16:15:06 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:06 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] Stack contains: 1 commands
2025-04-22 16:15:06 | DEBUG | Decode done, empty stack: true
2025-04-22 16:15:06 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:06 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] channelActive()
2025-04-22 16:15:06 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 2 command(s) buffered
2025-04-22 16:15:06 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-22 16:15:06 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-22 16:15:06 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 2 commands
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] write(ctx, LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] write(ctx, LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelFlush
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] channelActive() done
2025-04-22 16:15:16 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] channelInactive()
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 2 command(s) to buffer
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] channelInactive() done
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-22 16:15:16 | DEBUG | [channel=0x1b408f74, /192.168.102.3:50120 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x8] channelUnregistered()
2025-04-22 16:15:16 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 16:15:16 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-22 16:15:16 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 16:15:16 | DEBUG | [channel=0x8f3591bf, [id: 0x209fadde] (inactive), epid=0x1, chid=0x9] channelRegistered()
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Received: 705 bytes, 1 commands in the stack
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Stack contains: 1 commands
2025-04-22 16:15:17 | DEBUG | Decode done, empty stack: true
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Received: 10 bytes, 2 commands in the stack
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Stack contains: 2 commands
2025-04-22 16:15:17 | DEBUG | Decode done, empty stack: true
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Stack contains: 1 commands
2025-04-22 16:15:17 | DEBUG | Decode done, empty stack: true
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] channelActive()
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 2 command(s) buffered
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 2 commands
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] write(ctx, LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 16:15:17 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:19 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelWrite command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:19 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] write(ctx, LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2025-04-22 16:15:19 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:19 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() channelFlush
2025-04-22 16:15:19 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-22 16:15:19 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] channelActive() done
2025-04-22 16:15:19 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-22 16:15:19 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Received: 10 bytes, 2 commands in the stack
2025-04-22 16:15:19 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Stack contains: 2 commands
2025-04-22 16:15:19 | DEBUG | Decode done, empty stack: true
2025-04-22 16:15:19 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:19 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Stack contains: 1 commands
2025-04-22 16:15:19 | DEBUG | Decode done, empty stack: true
2025-04-22 16:15:19 | DEBUG | [channel=0x8f3591bf, /192.168.102.3:50125 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x9] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-22 16:15:43 | TRACE | Weights attr: {}
2025-04-22 16:15:43 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/forgot-password"
2025-04-22 16:15:43 | DEBUG | Route matched: user-service-route
2025-04-22 16:15:43 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 16:15:43 | DEBUG | [ed048b7d-20] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 16:15:43 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 16:15:43 | TRACE | RouteToRequestUrlFilter start
2025-04-22 16:15:43 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"_ga=GA1.1.92c2c6f7-3608-4f85-d99a-cfe0c271c161; _ga_699NE13B0K=GS1.1.1743422859.1.1.1743423273.0.0.0; csrftoken=60sSlIwzlqWDOFuITZ2IcDfxzvovnrdxVOiF2roAMFLwROb7xcpBm6zGixxZ2O03; _ga_1BESNPCQ8G=GS1.1.1745311769.19.1.1745313338.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"2402:800:61c3:255d:8d9c:a556:d3cb:21a9,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50139"", X-Forwarded-Port:"80"]
2025-04-22 16:15:43 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.355E-4, duration(nanos)=835500.0, startTimeNanos=108027234918100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3e17f25b'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1f56b444} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"_ga=GA1.1.92c2c6f7-3608-4f85-d99a-cfe0c271c161; _ga_699NE13B0K=GS1.1.1743422859.1.1.1743423273.0.0.0; csrftoken=60sSlIwzlqWDOFuITZ2IcDfxzvovnrdxVOiF2roAMFLwROb7xcpBm6zGixxZ2O03; _ga_1BESNPCQ8G=GS1.1.1745311769.19.1.1745313338.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"2402:800:61c3:255d:8d9c:a556:d3cb:21a9,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50139"", X-Forwarded-Port:"80"]
2025-04-22 16:15:43 | DEBUG | Will instrument the response
2025-04-22 16:15:43 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=38.3676535, duration(nanos)=3.83676535E10, startTimeNanos=107989157430400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1141928'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7c224813}
2025-04-22 16:15:43 | TRACE | outbound route: f8b5a7d7, inbound: [ed048b7d-20] 
2025-04-22 16:15:43 | TRACE | NettyWriteResponseFilter start inbound: 6a9df78d, outbound: [4d1c053b-19] 
2025-04-22 16:15:43 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-22 16:15:45 | DEBUG | Will instrument the response
2025-04-22 16:15:45 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.5669622, duration(nanos)=1.5669622E9, startTimeNanos=108027234918100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3e17f25b'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1f56b444}
2025-04-22 16:15:45 | TRACE | NettyWriteResponseFilter start inbound: f8b5a7d7, outbound: [ed048b7d-20] 
2025-04-22 16:15:45 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-22 16:15:48 | TRACE | Weights attr: {}
2025-04-22 16:15:48 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/forgot-password"
2025-04-22 16:15:48 | DEBUG | Route matched: user-service-route
2025-04-22 16:15:48 | DEBUG | Mapping [Exchange: POST http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-22 16:15:48 | DEBUG | [4f09a7ef-21] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@5e976553
2025-04-22 16:15:48 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@48697181}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@204a02a4}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@f996445}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@361c4981}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@50a095cb}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@7282f7b1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@3f2afa8b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@35fac3ba}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@2ee5c08d}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@7263b0c4}, order = 2147483647]]
2025-04-22 16:15:48 | TRACE | RouteToRequestUrlFilter start
2025-04-22 16:15:48 | DEBUG | Will instrument the HTTP request headers [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"_ga=GA1.1.92c2c6f7-3608-4f85-d99a-cfe0c271c161; _ga_699NE13B0K=GS1.1.1743422859.1.1.1743423273.0.0.0; csrftoken=60sSlIwzlqWDOFuITZ2IcDfxzvovnrdxVOiF2roAMFLwROb7xcpBm6zGixxZ2O03; _ga_1BESNPCQ8G=GS1.1.1745311769.19.1.1745313338.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"2402:800:61c3:255d:8d9c:a556:d3cb:21a9,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50148"", X-Forwarded-Port:"80"]
2025-04-22 16:15:48 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.495E-4, duration(nanos)=249500.0, startTimeNanos=108032370090000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3fc6037f'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6aa4e06a} created for the request. New headers are [Host:"good-musical-joey.ngrok-free.app", User-Agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36", Content-Length:"36", Accept:"application/json, text/plain, */*", Accept-Encoding:"gzip, deflate, br, zstd", Accept-Language:"vi-VN,vi;q=0.9,fr-FR;q=0.8,fr;q=0.7,en-US;q=0.6,en;q=0.5", Content-Type:"application/json", Cookie:"_ga=GA1.1.92c2c6f7-3608-4f85-d99a-cfe0c271c161; _ga_699NE13B0K=GS1.1.1743422859.1.1.1743423273.0.0.0; csrftoken=60sSlIwzlqWDOFuITZ2IcDfxzvovnrdxVOiF2roAMFLwROb7xcpBm6zGixxZ2O03; _ga_1BESNPCQ8G=GS1.1.1745311769.19.1.1745313338.0.0.0", Ngrok-Skip-Browser-Warning:"true", Origin:"http://127.0.0.1:5173", Referer:"http://127.0.0.1:5173/forget-password", Sec-Ch-Ua:""Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"", Sec-Ch-Ua-Mobile:"?0", Sec-Ch-Ua-Platform:""Windows"", Sec-Fetch-Dest:"empty", Sec-Fetch-Mode:"cors", Sec-Fetch-Site:"same-origin", X-Forwarded-For:"2402:800:61c3:255d:8d9c:a556:d3cb:21a9,0:0:0:0:0:0:0:1", X-Forwarded-Host:"good-musical-joey.ngrok-free.app,good-musical-joey.ngrok-free.app", X-Forwarded-Proto:"https,http", Forwarded:"proto=http;host=good-musical-joey.ngrok-free.app;for="[0:0:0:0:0:0:0:1]:50148"", X-Forwarded-Port:"80"]
2025-04-22 16:15:50 | TRACE | outbound route: f8b5a7d7, inbound: [4f09a7ef-21] 
2025-04-22 16:15:50 | DEBUG | Will instrument the response
2025-04-22 16:15:50 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://good-musical-joey.ngrok-free.app/users/api/v1/auth/forgot-password'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.092765, duration(nanos)=2.092765E9, startTimeNanos=108032370090000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3fc6037f'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6aa4e06a}
2025-04-22 16:15:50 | TRACE | NettyWriteResponseFilter start inbound: f8b5a7d7, outbound: [4f09a7ef-21] 
2025-04-22 16:15:50 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
