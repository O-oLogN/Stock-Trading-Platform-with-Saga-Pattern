2025-04-09 10:22:23 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 10:22:23 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 13500 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 10:22:23 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 10:22:23 | INFO  | The following 1 profile is active: "local"
2025-04-09 10:22:25 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 10:22:25 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 10:22:26 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 10:22:26 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 10:22:26 | INFO  | Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2025-04-09 10:22:26 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 10:22:27 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 10:22:27 | DEBUG | Starting without optional kqueue library
2025-04-09 10:22:27 | DEBUG | Starting without optional io_uring library
2025-04-09 10:22:27 | DEBUG | Starting without optional epoll library
2025-04-09 10:22:27 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 10:22:27 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 10:22:27 | DEBUG | Starting with JFR support
2025-04-09 10:22:28 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:22:28 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:22:28 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:22:28 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@1c411474, existing ref count 0
2025-04-09 10:22:28 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:22:28 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 10:22:28 | DEBUG | [channel=0x543046a2, [id: 0x29cf26c5] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:22:29 | DEBUG | Decode done, empty stack: true
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 10:22:29 | DEBUG | Decode done, empty stack: true
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:22:29 | DEBUG | Decode done, empty stack: true
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 10:22:29 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 10:22:29 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:22:29 | DEBUG | Decode done, empty stack: true
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:22:29 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:22:29 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:22:30 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:22:30 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:22:30 | DEBUG | Decode done, empty stack: true
2025-04-09 10:22:30 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:22:30 | INFO  | 

Using generated security password: 37266a34-24b9-476d-9c8d-bb882c7cf3f9

2025-04-09 10:22:31 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 10:22:31 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 10:22:32 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 10:22:34 | INFO  | Netty started on port 8080 (http)
2025-04-09 10:22:34 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 10:22:34 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 10:22:34 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 10:22:34 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 10:22:34 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 10:22:34 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 10:22:34 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 10:22:34 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 10:22:34 | DEBUG | New routes count: 3
2025-04-09 10:22:34 | INFO  | Started ApiGatewayApplication in 12.392 seconds (process running for 23.05)
2025-04-09 10:29:10 | TRACE | Weights attr: {}
2025-04-09 10:29:10 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 10:29:10 | DEBUG | Route matched: user-service-route
2025-04-09 10:29:10 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 10:29:10 | DEBUG | [ac70299a-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@62732be7
2025-04-09 10:29:10 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@3b0c38f2}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@70e8c019}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@248b2091}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4b86a656}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4797023d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@5cc152f9}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@55cc4c61}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1117cc7c}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@42150951}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@36f497b1}, order = 2147483647]]
2025-04-09 10:29:10 | TRACE | RouteToRequestUrlFilter start
2025-04-09 10:29:10 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"55", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744169348.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55537"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:29:10 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0017474, duration(nanos)=1747400.0, startTimeNanos=378014960342500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@40cec744'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2b445194} created for the request. New headers are [host:"localhost:8080", content-length:"55", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744169348.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55537"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:29:10 | TRACE | outbound route: b249b899, inbound: [ac70299a-3] 
2025-04-09 10:29:11 | DEBUG | Will instrument the response
2025-04-09 10:29:11 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.3652919, duration(nanos)=1.3652919E9, startTimeNanos=378014960342500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@40cec744'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2b445194}
2025-04-09 10:29:11 | TRACE | NettyWriteResponseFilter start inbound: b249b899, outbound: [ac70299a-3] 
2025-04-09 10:29:11 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 10:39:35 | TRACE | Weights attr: {}
2025-04-09 10:39:35 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 10:39:35 | DEBUG | Route matched: user-service-route
2025-04-09 10:39:35 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 10:39:35 | DEBUG | [81d8a4f3-8] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@62732be7
2025-04-09 10:39:35 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@3b0c38f2}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@70e8c019}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@248b2091}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4b86a656}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4797023d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@5cc152f9}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@55cc4c61}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1117cc7c}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@42150951}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@36f497b1}, order = 2147483647]]
2025-04-09 10:39:35 | TRACE | RouteToRequestUrlFilter start
2025-04-09 10:39:35 | DEBUG | Will instrument the HTTP request headers [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"87730b4c-1c0e-4ed4-8f16-55e155ea5006", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56025"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:39:35 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.339E-4, duration(nanos)=133900.0, startTimeNanos=378640667377900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@14fea2ab'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1a394e44} created for the request. New headers are [X-Forwarded-For:"203.0.113.50,0:0:0:0:0:0:0:1", Content-Type:"application/json", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"87730b4c-1c0e-4ed4-8f16-55e155ea5006", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"69", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56025"", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:39:35 | TRACE | outbound route: 5f159e84, inbound: [81d8a4f3-8] 
2025-04-09 10:39:36 | DEBUG | Will instrument the response
2025-04-09 10:39:36 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3152603, duration(nanos)=3.152603E8, startTimeNanos=378640667377900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@14fea2ab'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1a394e44}
2025-04-09 10:39:36 | TRACE | NettyWriteResponseFilter start inbound: 5f159e84, outbound: [81d8a4f3-8] 
2025-04-09 10:39:36 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 10:39:47 | TRACE | Weights attr: {}
2025-04-09 10:39:47 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 10:39:47 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 10:39:47 | DEBUG | Route matched: account-service-route
2025-04-09 10:39:47 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 10:39:47 | DEBUG | [81d8a4f3-9] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@62732be7
2025-04-09 10:39:47 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@3b0c38f2}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@70e8c019}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@248b2091}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4b86a656}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4797023d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@5cc152f9}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@55cc4c61}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1117cc7c}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@42150951}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@36f497b1}, order = 2147483647]]
2025-04-09 10:39:47 | TRACE | RouteToRequestUrlFilter start
2025-04-09 10:39:47 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"926e13e1-752a-48ff-a82d-916c7e06b9c8", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56025"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:39:47 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.045E-4, duration(nanos)=104500.0, startTimeNanos=378651996416400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@9733eaa'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1be2169b} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"926e13e1-752a-48ff-a82d-916c7e06b9c8", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56025"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:39:47 | TRACE | outbound route: 50b1a407, inbound: [81d8a4f3-9] 
2025-04-09 10:39:48 | DEBUG | Will instrument the response
2025-04-09 10:39:48 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.925314, duration(nanos)=9.25314E8, startTimeNanos=378651996416400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@9733eaa'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1be2169b}
2025-04-09 10:39:48 | TRACE | NettyWriteResponseFilter start inbound: 50b1a407, outbound: [81d8a4f3-9] 
2025-04-09 10:39:48 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 10:42:46 | TRACE | Weights attr: {}
2025-04-09 10:42:46 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/login"
2025-04-09 10:42:46 | DEBUG | Route matched: user-service-route
2025-04-09 10:42:46 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/login] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 10:42:46 | DEBUG | [97d5a3dd-10] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@62732be7
2025-04-09 10:42:46 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@3b0c38f2}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@70e8c019}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@248b2091}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4b86a656}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@4797023d}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@5cc152f9}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@55cc4c61}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@1117cc7c}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@42150951}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@36f497b1}, order = 2147483647]]
2025-04-09 10:42:46 | TRACE | RouteToRequestUrlFilter start
2025-04-09 10:42:46 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"55", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744170162.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56146"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:42:46 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.354E-4, duration(nanos)=135400.0, startTimeNanos=378831240120400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5f6b715a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@51ac84c7} created for the request. New headers are [host:"localhost:8080", content-length:"55", sec-ch-ua-platform:""Windows"", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744170162.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56146"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 10:42:46 | TRACE | outbound route: 77f06859, inbound: [97d5a3dd-10] 
2025-04-09 10:42:46 | DEBUG | Will instrument the response
2025-04-09 10:42:46 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/login'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.2976423, duration(nanos)=2.976423E8, startTimeNanos=378831240120400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5f6b715a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@51ac84c7}
2025-04-09 10:42:46 | TRACE | NettyWriteResponseFilter start inbound: 77f06859, outbound: [97d5a3dd-10] 
2025-04-09 10:42:46 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 10:54:27 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 10:54:27 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 10:54:27 | INFO  | Graceful shutdown complete
2025-04-09 10:54:27 | DEBUG | closeAsync()
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 10:54:27 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 10:54:27 | DEBUG | [channel=0x543046a2, /192.168.102.3:55235 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 10:54:27 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@1c411474
2025-04-09 10:54:29 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 10:54:29 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 10:54:36 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 10:54:36 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 15272 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 10:54:36 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 10:54:36 | INFO  | The following 1 profile is active: "local"
2025-04-09 10:54:37 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 10:54:37 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 10:54:37 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 10:54:37 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 10:54:37 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 10:54:38 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 10:54:38 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 10:54:38 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 10:54:38 | INFO  | Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2025-04-09 10:54:39 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 10:54:39 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 10:54:39 | DEBUG | Starting without optional kqueue library
2025-04-09 10:54:39 | DEBUG | Starting without optional io_uring library
2025-04-09 10:54:39 | DEBUG | Starting without optional epoll library
2025-04-09 10:54:39 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 10:54:39 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 10:54:40 | DEBUG | Starting with JFR support
2025-04-09 10:54:40 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:54:40 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:54:40 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:54:40 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@5c25daad, existing ref count 0
2025-04-09 10:54:40 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:54:40 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, [id: 0x7595477c] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:54:41 | DEBUG | Decode done, empty stack: true
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 10:54:41 | DEBUG | Decode done, empty stack: true
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:54:41 | DEBUG | Decode done, empty stack: true
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 10:54:41 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 10:54:41 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:41 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:54:42 | DEBUG | Decode done, empty stack: true
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:54:42 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:54:42 | DEBUG | Decode done, empty stack: true
2025-04-09 10:54:42 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:54:42 | INFO  | 

Using generated security password: f8d91081-9ba2-4feb-9f46-d52511d6395f

2025-04-09 10:54:43 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 10:54:43 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 10:54:44 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 10:54:44 | INFO  | Netty started on port 8080 (http)
2025-04-09 10:54:44 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 10:54:44 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 10:54:44 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 10:54:44 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 10:54:44 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 10:54:44 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 10:54:44 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 10:54:44 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 10:54:44 | DEBUG | New routes count: 3
2025-04-09 10:54:44 | INFO  | Started ApiGatewayApplication in 9.792 seconds (process running for 12.168)
2025-04-09 10:55:33 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-09 10:55:33 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09 10:55:33 | INFO  | Graceful shutdown complete
2025-04-09 10:55:33 | DEBUG | closeAsync()
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-09 10:55:33 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-09 10:55:33 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@5c25daad
2025-04-09 10:55:33 | DEBUG | [channel=0x569b10d1, /192.168.102.3:56538 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 10:55:36 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 10:55:36 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-09 10:55:46 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-09 10:55:46 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 760 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-09 10:55:46 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-09 10:55:46 | INFO  | The following 1 profile is active: "local"
2025-04-09 10:55:47 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-09 10:55:47 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-09 10:55:47 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-09 10:55:47 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-09 10:55:47 | INFO  | Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-04-09 10:55:48 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-09 10:55:48 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-09 10:55:48 | DEBUG | Starting without optional kqueue library
2025-04-09 10:55:48 | DEBUG | Starting without optional io_uring library
2025-04-09 10:55:48 | DEBUG | Starting without optional epoll library
2025-04-09 10:55:48 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-09 10:55:48 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-09 10:55:48 | DEBUG | Starting with JFR support
2025-04-09 10:55:49 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:55:49 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:55:49 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-09 10:55:49 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@2864d34d, existing ref count 0
2025-04-09 10:55:49 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 10:55:49 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, [id: 0x769c5c91] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:55:50 | DEBUG | Decode done, empty stack: true
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-09 10:55:50 | DEBUG | Decode done, empty stack: true
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:55:50 | DEBUG | Decode done, empty stack: true
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-09 10:55:50 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-09 10:55:50 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:55:51 | DEBUG | Decode done, empty stack: true
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:55:51 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-09 10:55:51 | DEBUG | Decode done, empty stack: true
2025-04-09 10:55:51 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 10:55:51 | INFO  | 

Using generated security password: 0f44d3bc-0291-4007-83f9-6d49221ac563

2025-04-09 10:55:52 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-09 10:55:52 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-09 10:55:52 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-09 10:55:53 | INFO  | Netty started on port 8080 (http)
2025-04-09 10:55:53 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-09 10:55:53 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-09 10:55:53 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-09 10:55:53 | DEBUG | RouteDefinition matched: user-service-route
2025-04-09 10:55:53 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-09 10:55:53 | DEBUG | RouteDefinition matched: account-service-route
2025-04-09 10:55:53 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-09 10:55:53 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-09 10:55:53 | DEBUG | New routes count: 3
2025-04-09 10:55:53 | INFO  | Started ApiGatewayApplication in 8.558 seconds (process running for 11.718)
2025-04-09 11:11:19 | TRACE | Weights attr: {}
2025-04-09 11:11:19 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:19 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:19 | DEBUG | Route matched: account-service-route
2025-04-09 11:11:19 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:11:19 | DEBUG | [974c97f3-7] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:11:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:11:19 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:11:19 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171877.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57129"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@68190989', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0014124, duration(nanos)=1412400.0, startTimeNanos=380544268450900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@512eaf8a} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171877.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57129"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:19 | TRACE | outbound route: fcf5eadd, inbound: [974c97f3-7] 
2025-04-09 11:11:19 | DEBUG | Will instrument the response
2025-04-09 11:11:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@68190989', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.278534, duration(nanos)=2.78534E8, startTimeNanos=380544268450900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@512eaf8a}
2025-04-09 11:11:19 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [974c97f3-7] 
2025-04-09 11:11:19 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:11:19 | TRACE | Weights attr: {}
2025-04-09 11:11:19 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:19 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:19 | DEBUG | Route matched: account-service-route
2025-04-09 11:11:19 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:11:19 | DEBUG | [31db559b-8] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:11:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:11:19 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:11:19 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171877.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57131"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@67cb526e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.208E-4, duration(nanos)=120800.0, startTimeNanos=380544755205500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@690ca0e7} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171877.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57131"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:19 | TRACE | outbound route: fcf5eadd, inbound: [31db559b-8] 
2025-04-09 11:11:20 | DEBUG | Will instrument the response
2025-04-09 11:11:20 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@67cb526e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1176608, duration(nanos)=1.176608E8, startTimeNanos=380544755205500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@690ca0e7}
2025-04-09 11:11:20 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [31db559b-8] 
2025-04-09 11:11:20 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:11:30 | TRACE | Weights attr: {}
2025-04-09 11:11:30 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:30 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:30 | DEBUG | Route matched: account-service-route
2025-04-09 11:11:30 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:11:30 | DEBUG | [a3512fcf-9] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:11:30 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:11:30 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:11:30 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171889.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57150"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:30 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1442dd9a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.196E-4, duration(nanos)=219600.0, startTimeNanos=380555748664900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1a853162} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171889.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57150"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:30 | TRACE | outbound route: fcf5eadd, inbound: [a3512fcf-9] 
2025-04-09 11:11:31 | DEBUG | Will instrument the response
2025-04-09 11:11:31 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1442dd9a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1246532, duration(nanos)=1.246532E8, startTimeNanos=380555748664900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1a853162}
2025-04-09 11:11:31 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [a3512fcf-9] 
2025-04-09 11:11:31 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:11:31 | TRACE | Weights attr: {}
2025-04-09 11:11:31 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:31 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:11:31 | DEBUG | Route matched: account-service-route
2025-04-09 11:11:31 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:11:31 | DEBUG | [36beaf34-10] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:11:31 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:11:31 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:11:31 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171889.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57152"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:31 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2d28e91c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0027845, duration(nanos)=2784500.0, startTimeNanos=380556052044500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@23ef02c9} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171889.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57152"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:11:31 | TRACE | outbound route: fcf5eadd, inbound: [36beaf34-10] 
2025-04-09 11:11:31 | DEBUG | Will instrument the response
2025-04-09 11:11:31 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2d28e91c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.113756, duration(nanos)=1.13756E8, startTimeNanos=380556052044500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@23ef02c9}
2025-04-09 11:11:31 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [36beaf34-10] 
2025-04-09 11:11:31 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:12:18 | TRACE | Weights attr: {}
2025-04-09 11:12:18 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:18 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:18 | DEBUG | Route matched: account-service-route
2025-04-09 11:12:18 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:12:18 | DEBUG | [a8945407-11] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:12:18 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:12:18 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:12:18 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171890.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57189"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:18 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3852ea04', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.69E-5, duration(nanos)=96900.0, startTimeNanos=380603186814400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1e4ef713} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171890.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57189"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:18 | TRACE | outbound route: fcf5eadd, inbound: [a8945407-11] 
2025-04-09 11:12:18 | DEBUG | Will instrument the response
2025-04-09 11:12:18 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3852ea04', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1284343, duration(nanos)=1.284343E8, startTimeNanos=380603186814400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1e4ef713}
2025-04-09 11:12:18 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [a8945407-11] 
2025-04-09 11:12:18 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:12:18 | TRACE | Weights attr: {}
2025-04-09 11:12:18 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:18 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:18 | DEBUG | Route matched: account-service-route
2025-04-09 11:12:18 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:12:18 | DEBUG | [72a64e66-12] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:12:18 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:12:18 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:12:18 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171890.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57190"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:18 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1554c596', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.897E-4, duration(nanos)=289700.0, startTimeNanos=380603369518700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@19d34443} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171890.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57190"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:18 | TRACE | outbound route: fcf5eadd, inbound: [72a64e66-12] 
2025-04-09 11:12:18 | DEBUG | Will instrument the response
2025-04-09 11:12:18 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1554c596', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1043142, duration(nanos)=1.043142E8, startTimeNanos=380603369518700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@19d34443}
2025-04-09 11:12:18 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [72a64e66-12] 
2025-04-09 11:12:18 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:12:42 | TRACE | Weights attr: {}
2025-04-09 11:12:42 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:42 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:42 | DEBUG | Route matched: account-service-route
2025-04-09 11:12:42 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:12:42 | DEBUG | [2adeca8f-13] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:12:42 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:12:42 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:12:42 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171938.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57212"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:42 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5bb83b59', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.012E-4, duration(nanos)=101200.0, startTimeNanos=380627149039300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@599493b9} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171938.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57212"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:42 | TRACE | outbound route: fcf5eadd, inbound: [2adeca8f-13] 
2025-04-09 11:12:42 | DEBUG | Will instrument the response
2025-04-09 11:12:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5bb83b59', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1110605, duration(nanos)=1.110605E8, startTimeNanos=380627149039300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@599493b9}
2025-04-09 11:12:42 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [2adeca8f-13] 
2025-04-09 11:12:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:12:42 | TRACE | Weights attr: {}
2025-04-09 11:12:42 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:42 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:12:42 | DEBUG | Route matched: account-service-route
2025-04-09 11:12:42 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:12:42 | DEBUG | [0bc71e84-14] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:12:42 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:12:42 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:12:42 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171938.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57213"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:42 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@62d208f2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.7E-5, duration(nanos)=77000.0, startTimeNanos=380627360873300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@8586dbd} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171938.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57213"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:12:42 | TRACE | outbound route: fcf5eadd, inbound: [0bc71e84-14] 
2025-04-09 11:12:42 | DEBUG | Will instrument the response
2025-04-09 11:12:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@62d208f2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1017406, duration(nanos)=1.017406E8, startTimeNanos=380627360873300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@8586dbd}
2025-04-09 11:12:42 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [0bc71e84-14] 
2025-04-09 11:12:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:13:05 | TRACE | Weights attr: {}
2025-04-09 11:13:05 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:13:05 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:13:05 | DEBUG | Route matched: account-service-route
2025-04-09 11:13:05 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:13:05 | DEBUG | [026e5f76-15] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:13:05 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:13:05 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:13:05 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171962.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57238"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:13:05 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@34ee3b8e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.085E-4, duration(nanos)=108500.0, startTimeNanos=380650215701900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1bc3e5dd} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171962.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57238"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:13:05 | TRACE | outbound route: fcf5eadd, inbound: [026e5f76-15] 
2025-04-09 11:13:05 | DEBUG | Will instrument the response
2025-04-09 11:13:05 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@34ee3b8e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1036963, duration(nanos)=1.036963E8, startTimeNanos=380650215701900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1bc3e5dd}
2025-04-09 11:13:05 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [026e5f76-15] 
2025-04-09 11:13:05 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:13:05 | TRACE | Weights attr: {}
2025-04-09 11:13:05 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:13:05 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:13:05 | DEBUG | Route matched: account-service-route
2025-04-09 11:13:05 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:13:05 | DEBUG | [6199833f-16] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:13:05 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:13:05 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:13:05 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171962.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57239"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:13:05 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@481e5593', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.73E-5, duration(nanos)=87300.0, startTimeNanos=380650398944200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7b555173} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171962.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57239"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:13:05 | TRACE | outbound route: fcf5eadd, inbound: [6199833f-16] 
2025-04-09 11:13:05 | DEBUG | Will instrument the response
2025-04-09 11:13:05 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@481e5593', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1240963, duration(nanos)=1.240963E8, startTimeNanos=380650398944200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7b555173}
2025-04-09 11:13:05 | TRACE | NettyWriteResponseFilter start inbound: fcf5eadd, outbound: [6199833f-16] 
2025-04-09 11:13:05 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:14:08 | TRACE | Weights attr: {}
2025-04-09 11:14:08 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:14:08 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:14:08 | DEBUG | Route matched: account-service-route
2025-04-09 11:14:08 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:14:08 | DEBUG | [93314187-17] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:14:08 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:14:08 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:14:08 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171985.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57286"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:14:08 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@216f5191', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.88E-5, duration(nanos)=68800.0, startTimeNanos=380713261886500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3b97c416} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171985.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57286"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:14:08 | TRACE | outbound route: 14212c4c, inbound: [93314187-17] 
2025-04-09 11:14:08 | DEBUG | Will instrument the response
2025-04-09 11:14:08 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@216f5191', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1322506, duration(nanos)=1.322506E8, startTimeNanos=380713261886500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3b97c416}
2025-04-09 11:14:08 | TRACE | NettyWriteResponseFilter start inbound: 14212c4c, outbound: [93314187-17] 
2025-04-09 11:14:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:14:08 | TRACE | Weights attr: {}
2025-04-09 11:14:08 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:14:08 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 11:14:08 | DEBUG | Route matched: account-service-route
2025-04-09 11:14:08 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 11:14:08 | DEBUG | [426867fe-18] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 11:14:08 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 11:14:08 | TRACE | RouteToRequestUrlFilter start
2025-04-09 11:14:08 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171985.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57289"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:14:08 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@709af4c4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.096E-4, duration(nanos)=109600.0, startTimeNanos=380713459906600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2fdf7bd} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744165459.24.1.1744171985.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:57289"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 11:14:08 | TRACE | outbound route: 14212c4c, inbound: [426867fe-18] 
2025-04-09 11:14:08 | DEBUG | Will instrument the response
2025-04-09 11:14:08 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@709af4c4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1232608, duration(nanos)=1.232608E8, startTimeNanos=380713459906600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2fdf7bd}
2025-04-09 11:14:08 | TRACE | NettyWriteResponseFilter start inbound: 14212c4c, outbound: [426867fe-18] 
2025-04-09 11:14:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 11:58:27 | INFO  | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-09 11:58:27 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-09 11:58:28 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:28 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:28 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:28 | DEBUG | [channel=0xb9df3ebe, [id: 0x543d4ee3] (inactive), epid=0x1, chid=0x2] channelRegistered()
2025-04-09 11:58:31 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:31 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:31 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 2, delay 2ms
2025-04-09 11:58:31 | DEBUG | [channel=0xb9df3ebe, [id: 0x543d4ee3] (inactive), epid=0x1, chid=0x2] channelUnregistered()
2025-04-09 11:58:31 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:31 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:31 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:31 | DEBUG | [channel=0xda6c666c, [id: 0x816bc7e9] (inactive), epid=0x1, chid=0x3] channelRegistered()
2025-04-09 11:58:33 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:33 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:33 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 3, delay 4ms
2025-04-09 11:58:33 | DEBUG | [channel=0xda6c666c, [id: 0x816bc7e9] (inactive), epid=0x1, chid=0x3] channelUnregistered()
2025-04-09 11:58:33 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:33 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:33 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:33 | DEBUG | [channel=0x6fe5dc81, [id: 0x5ad0852a] (inactive), epid=0x1, chid=0x4] channelRegistered()
2025-04-09 11:58:36 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:36 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:36 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 4, delay 8ms
2025-04-09 11:58:36 | DEBUG | [channel=0x6fe5dc81, [id: 0x5ad0852a] (inactive), epid=0x1, chid=0x4] channelUnregistered()
2025-04-09 11:58:36 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:36 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:36 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:36 | DEBUG | [channel=0x77f6ce13, [id: 0x0ca79f86] (inactive), epid=0x1, chid=0x5] channelRegistered()
2025-04-09 11:58:39 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:39 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:39 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 5, delay 16ms
2025-04-09 11:58:39 | DEBUG | [channel=0x77f6ce13, [id: 0x0ca79f86] (inactive), epid=0x1, chid=0x5] channelUnregistered()
2025-04-09 11:58:39 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/<unresolved>:14694
2025-04-09 11:58:39 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:39 | DEBUG | [channel=0x66bc056f, [id: 0x6083cb7f] (inactive), epid=0x1, chid=0x6] channelRegistered()
2025-04-09 11:58:39 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:41 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:41 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:41 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 6, delay 32ms
2025-04-09 11:58:41 | DEBUG | [channel=0x66bc056f, [id: 0x6083cb7f] (inactive), epid=0x1, chid=0x6] channelUnregistered()
2025-04-09 11:58:41 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:41 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:41 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:41 | DEBUG | [channel=0xc1a084f8, [id: 0x8635c788] (inactive), epid=0x1, chid=0x7] channelRegistered()
2025-04-09 11:58:43 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:43 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:43 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 7, delay 64ms
2025-04-09 11:58:43 | DEBUG | [channel=0xc1a084f8, [id: 0x8635c788] (inactive), epid=0x1, chid=0x7] channelUnregistered()
2025-04-09 11:58:43 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:43 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:43 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:43 | DEBUG | [channel=0x174eb6eb, [id: 0x45837e33] (inactive), epid=0x1, chid=0x8] channelRegistered()
2025-04-09 11:58:45 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:45 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:45 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 8, delay 128ms
2025-04-09 11:58:45 | DEBUG | [channel=0x174eb6eb, [id: 0x45837e33] (inactive), epid=0x1, chid=0x8] channelUnregistered()
2025-04-09 11:58:46 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:46 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:46 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:46 | DEBUG | [channel=0x47da7204, [id: 0xd024eb3e] (inactive), epid=0x1, chid=0x9] channelRegistered()
2025-04-09 11:58:48 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:48 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:48 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 9, delay 256ms
2025-04-09 11:58:48 | DEBUG | [channel=0x47da7204, [id: 0xd024eb3e] (inactive), epid=0x1, chid=0x9] channelUnregistered()
2025-04-09 11:58:48 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:48 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:48 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:48 | DEBUG | [channel=0x1196a003, [id: 0xe7a95f0b] (inactive), epid=0x1, chid=0xa] channelRegistered()
2025-04-09 11:58:50 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:50 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 10, delay 512ms
2025-04-09 11:58:50 | DEBUG | [channel=0x1196a003, [id: 0xe7a95f0b] (inactive), epid=0x1, chid=0xa] channelUnregistered()
2025-04-09 11:58:51 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:51 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:51 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:51 | DEBUG | [channel=0x5301c04e, [id: 0x43f97ee0] (inactive), epid=0x1, chid=0xb] channelRegistered()
2025-04-09 11:58:53 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:53 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:53 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 11, delay 1024ms
2025-04-09 11:58:53 | DEBUG | [channel=0x5301c04e, [id: 0x43f97ee0] (inactive), epid=0x1, chid=0xb] channelUnregistered()
2025-04-09 11:58:54 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:54 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:54 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:54 | DEBUG | [channel=0xb366787e, [id: 0xcf1ff245] (inactive), epid=0x1, chid=0xc] channelRegistered()
2025-04-09 11:58:56 | DEBUG | Cannot reconnect to [redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694]: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 11:58:56 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 11:58:56 | DEBUG | [channel=0xee61ad89, /192.168.102.3:56592 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 12, delay 2048ms
2025-04-09 11:58:56 | DEBUG | [channel=0xb366787e, [id: 0xcf1ff245] (inactive), epid=0x1, chid=0xc] channelUnregistered()
2025-04-09 11:58:58 | DEBUG | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:58 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 11:58:58 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 11:58:58 | DEBUG | [channel=0xcaa223fc, [id: 0x10822564] (inactive), epid=0x1, chid=0xd] channelRegistered()
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Received: 705 bytes, 1 commands in the stack
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Stack contains: 1 commands
2025-04-09 11:58:59 | DEBUG | Decode done, empty stack: true
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Received: 10 bytes, 2 commands in the stack
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Stack contains: 2 commands
2025-04-09 11:58:59 | DEBUG | Decode done, empty stack: true
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Stack contains: 1 commands
2025-04-09 11:58:59 | DEBUG | Decode done, empty stack: true
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelActive()
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 11:58:59 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelActive() done
2025-04-09 11:58:59 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 12:03:25 | TRACE | Weights attr: {}
2025-04-09 12:03:25 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 12:03:25 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 12:03:25 | DEBUG | Route matched: account-service-route
2025-04-09 12:03:25 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:03:25 | DEBUG | [ecb68e4c-19] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:03:25 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:03:25 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:03:25 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.0.1744175004.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59103"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:25 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2c08f1ca', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.77E-5, duration(nanos)=97700.0, startTimeNanos=383670143417600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@69ff8d8e} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.0.1744175004.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59103"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:25 | TRACE | outbound route: cdc77ba7, inbound: [ecb68e4c-19] 
2025-04-09 12:03:25 | DEBUG | Will instrument the response
2025-04-09 12:03:25 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2c08f1ca', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.4337929, duration(nanos)=4.337929E8, startTimeNanos=383670143417600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@69ff8d8e}
2025-04-09 12:03:25 | TRACE | NettyWriteResponseFilter start inbound: cdc77ba7, outbound: [ecb68e4c-19] 
2025-04-09 12:03:25 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 12:03:25 | TRACE | Weights attr: {}
2025-04-09 12:03:25 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 12:03:25 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-09 12:03:25 | DEBUG | Route matched: account-service-route
2025-04-09 12:03:25 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:03:25 | DEBUG | [680ed135-20] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:03:25 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:03:25 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:03:25 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.0.1744175004.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59107"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:25 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@765818a9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.209E-4, duration(nanos)=120900.0, startTimeNanos=383670631799200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4c50693c} created for the request. New headers are [host:"localhost:8080", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", sec-ch-ua-mobile:"?0", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/account-dashboard/payment-methods", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.0.1744175004.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59107"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:25 | TRACE | outbound route: cdc77ba7, inbound: [680ed135-20] 
2025-04-09 12:03:25 | DEBUG | Will instrument the response
2025-04-09 12:03:25 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@765818a9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1324028, duration(nanos)=1.324028E8, startTimeNanos=383670631799200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4c50693c}
2025-04-09 12:03:25 | TRACE | NettyWriteResponseFilter start inbound: cdc77ba7, outbound: [680ed135-20] 
2025-04-09 12:03:25 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-09 12:03:58 | TRACE | Weights attr: {}
2025-04-09 12:03:58 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/2fa/enable"
2025-04-09 12:03:58 | DEBUG | Route matched: user-service-route
2025-04-09 12:03:58 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/2fa/enable] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:03:58 | DEBUG | [d9e341e9-21] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:03:58 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:03:58 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:03:58 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59137"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:58 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@88aa460', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.182E-4, duration(nanos)=218200.0, startTimeNanos=383703044721800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@ff62cf7} created for the request. New headers are [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59137"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:03:58 | TRACE | outbound route: 731a2fd5, inbound: [d9e341e9-21] 
2025-04-09 12:04:11 | DEBUG | Will instrument the response
2025-04-09 12:04:11 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@88aa460', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=13.0275846, duration(nanos)=1.30275846E10, startTimeNanos=383703044721800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@ff62cf7}
2025-04-09 12:04:11 | TRACE | NettyWriteResponseFilter start inbound: 731a2fd5, outbound: [d9e341e9-21] 
2025-04-09 12:04:11 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 12:04:32 | TRACE | Weights attr: {}
2025-04-09 12:04:32 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/2fa/enable"
2025-04-09 12:04:32 | DEBUG | Route matched: user-service-route
2025-04-09 12:04:32 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/2fa/enable] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:04:32 | DEBUG | [3e6e8698-22] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:04:32 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:04:32 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:04:32 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59165"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:32 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4c05aab8', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.39E-4, duration(nanos)=139000.0, startTimeNanos=383737330595900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6b9e5b28} created for the request. New headers are [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59165"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:32 | TRACE | outbound route: 731a2fd5, inbound: [3e6e8698-22] 
2025-04-09 12:04:32 | DEBUG | Will instrument the response
2025-04-09 12:04:32 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4c05aab8', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3935744, duration(nanos)=3.935744E8, startTimeNanos=383737330595900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6b9e5b28}
2025-04-09 12:04:32 | TRACE | NettyWriteResponseFilter start inbound: 731a2fd5, outbound: [3e6e8698-22] 
2025-04-09 12:04:32 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 12:04:37 | TRACE | Weights attr: {}
2025-04-09 12:04:37 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/2fa/enable"
2025-04-09 12:04:37 | DEBUG | Route matched: user-service-route
2025-04-09 12:04:37 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/2fa/enable] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:04:37 | DEBUG | [2e5b2a5b-23] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:04:37 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:04:37 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:04:37 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59168"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:37 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@17484052', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.303E-4, duration(nanos)=130300.0, startTimeNanos=383742745576200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2ce3cc8} created for the request. New headers are [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59168"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:37 | TRACE | outbound route: 731a2fd5, inbound: [2e5b2a5b-23] 
2025-04-09 12:04:38 | DEBUG | Will instrument the response
2025-04-09 12:04:38 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@17484052', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3771826, duration(nanos)=3.771826E8, startTimeNanos=383742745576200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2ce3cc8}
2025-04-09 12:04:38 | TRACE | NettyWriteResponseFilter start inbound: 731a2fd5, outbound: [2e5b2a5b-23] 
2025-04-09 12:04:38 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 12:04:51 | TRACE | Weights attr: {}
2025-04-09 12:04:51 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/auth/2fa/enable"
2025-04-09 12:04:51 | DEBUG | Route matched: user-service-route
2025-04-09 12:04:51 | DEBUG | Mapping [Exchange: POST http://localhost:8080/users/api/v1/auth/2fa/enable] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-09 12:04:51 | DEBUG | [7865fad2-24] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7607340f
2025-04-09 12:04:51 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@1b82f62a}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@15a0f9}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@2259d54f}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@4d9bccfe}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@36c45149}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@67e21ea2}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@33f4844b}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@412440c1}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@56820446}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2184962c}, order = 2147483647]]
2025-04-09 12:04:51 | TRACE | RouteToRequestUrlFilter start
2025-04-09 12:04:51 | DEBUG | Will instrument the HTTP request headers [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59182"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:51 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a271862', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.111E-4, duration(nanos)=411100.0, startTimeNanos=383756216774800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6c0ccedf} created for the request. New headers are [host:"localhost:8080", content-length:"48", sec-ch-ua-platform:""Windows"", authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDQxNjk5NzYsImV4cCI6MTc0NDI1NjM3Nn0._qX2-kse2_lW_kzGYoUAvFvWYXyUi9MuLVbpVxMM1qo", user-agent:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36", accept:"application/json, text/plain, */*", sec-ch-ua:""Chromium";v="134", "Not:A-Brand";v="24", "Google Chrome";v="134"", content-type:"application/json", sec-ch-ua-mobile:"?0", origin:"http://localhost:5173", sec-fetch-site:"same-origin", sec-fetch-mode:"cors", sec-fetch-dest:"empty", referer:"http://localhost:5173/two-factor-auth", accept-encoding:"gzip, deflate, br, zstd", accept-language:"en-US,en;q=0.9", cookie:"Idea-9b819866=4ea97b12-ed4e-4ef4-942c-2e5264ecfaa3; Idea-9b819867=fd183e17-6d85-4862-9be6-abca81862d55; CookieConsent=true; DEFAULT_shopizer_cart=c17a7cab56494760873f306748ff5fa9; __stripe_mid=11920142-51f0-45fb-b5bf-569bcf65d1084fdad5; _ga=GA1.1.1687235608.1743928613; _ga_1BESNPCQ8G=GS1.1.1744175004.25.1.1744175022.0.0.0", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:59182"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-09 12:04:51 | TRACE | outbound route: 731a2fd5, inbound: [7865fad2-24] 
2025-04-09 12:04:51 | DEBUG | Will instrument the response
2025-04-09 12:04:51 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/auth/2fa/enable'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a271862', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3719556, duration(nanos)=3.719556E8, startTimeNanos=383756216774800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6c0ccedf}
2025-04-09 12:04:51 | TRACE | NettyWriteResponseFilter start inbound: 731a2fd5, outbound: [7865fad2-24] 
2025-04-09 12:04:51 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-09 12:58:08 | INFO  | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:356)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:796)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelInactive()
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelInactive() done
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] scheduleReconnect()
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect attempt 1, delay 1ms
2025-04-09 12:58:08 | DEBUG | [channel=0xcaa223fc, /10.24.15.108:58833 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xd] channelUnregistered()
2025-04-09 12:58:09 | INFO  | Reconnecting, last destination was redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 12:58:09 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-09 12:58:09 | DEBUG | Reconnecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, [id: 0x3efa08cf] (inactive), epid=0x1, chid=0xe] channelRegistered()
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Received: 705 bytes, 1 commands in the stack
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Stack contains: 1 commands
2025-04-09 12:58:09 | DEBUG | Decode done, empty stack: true
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 12:58:09 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Received: 10 bytes, 2 commands in the stack
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Stack contains: 2 commands
2025-04-09 12:58:10 | DEBUG | Decode done, empty stack: true
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Stack contains: 1 commands
2025-04-09 12:58:10 | DEBUG | Decode done, empty stack: true
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] channelActive()
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-09 12:58:10 | DEBUG | [channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0xe] channelActive() done
2025-04-09 12:58:10 | INFO  | Reconnected to redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, Channel channel=0x89bb3ce4, /192.168.102.3:52421 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
