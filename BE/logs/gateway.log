2025-04-20 00:34:32 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-20 00:34:32 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 12988 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-20 00:34:32 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-20 00:34:32 | INFO  | The following 1 profile is active: "local"
2025-04-20 00:34:35 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-20 00:34:35 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-20 00:34:35 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-20 00:34:36 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-20 00:34:36 | INFO  | Finished Spring Data repository scanning in 32 ms. Found 0 Redis repository interfaces.
2025-04-20 00:34:36 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-20 00:34:37 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-20 00:34:37 | DEBUG | Starting without optional kqueue library
2025-04-20 00:34:37 | DEBUG | Starting without optional io_uring library
2025-04-20 00:34:38 | DEBUG | Starting without optional epoll library
2025-04-20 00:34:38 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-20 00:34:38 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-20 00:34:38 | DEBUG | Starting with JFR support
2025-04-20 00:34:39 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-20 00:34:40 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-20 00:34:40 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-20 00:34:40 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@3a8fb023, existing ref count 0
2025-04-20 00:34:40 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-20 00:34:40 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-20 00:34:41 | DEBUG | [channel=0x1df19ca4, [id: 0x981d6091] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-20 00:34:41 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 00:34:41 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:41 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-20 00:34:41 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-20 00:34:41 | DEBUG | Decode done, empty stack: true
2025-04-20 00:34:41 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 00:34:41 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-20 00:34:41 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:41 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-20 00:34:42 | DEBUG | Decode done, empty stack: true
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-20 00:34:42 | DEBUG | Decode done, empty stack: true
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-20 00:34:42 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-20 00:34:42 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-20 00:34:42 | DEBUG | Decode done, empty stack: true
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 00:34:42 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-20 00:34:42 | DEBUG | Decode done, empty stack: true
2025-04-20 00:34:42 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 00:34:43 | INFO  | 

Using generated security password: 06bd5f54-562b-4b42-b65f-ebc8f5b809d9

2025-04-20 00:34:46 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}, RouteDefinition{id='kafka-management-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/sagas/**}}], filters=[], uri=http://localhost:8085, order=0, metadata={}, enabled=true}]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-20 00:34:47 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-20 00:34:48 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-20 00:34:49 | INFO  | Netty started on port 8080 (http)
2025-04-20 00:34:49 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-20 00:34:49 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-20 00:34:49 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-20 00:34:49 | DEBUG | RouteDefinition matched: user-service-route
2025-04-20 00:34:49 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-20 00:34:49 | DEBUG | RouteDefinition matched: account-service-route
2025-04-20 00:34:49 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-20 00:34:49 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-20 00:34:49 | DEBUG | RouteDefinition kafka-management-service-route applying {_genkey_0=/sagas/**} to Path
2025-04-20 00:34:49 | DEBUG | RouteDefinition matched: kafka-management-service-route
2025-04-20 00:34:49 | DEBUG | New routes count: 4
2025-04-20 00:34:49 | INFO  | Started ApiGatewayApplication in 19.399 seconds (process running for 21.517)
2025-04-20 00:34:50 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-20 00:34:50 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-20 00:34:50 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-20 00:34:50 | DEBUG | [channel=0x6dc389e4, [id: 0xe2f870fd] (inactive), epid=0x2, chid=0x2] channelRegistered()
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 705 bytes, 1 commands in the stack
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-20 00:34:51 | DEBUG | Decode done, empty stack: true
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 10 bytes, 2 commands in the stack
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 2 commands
2025-04-20 00:34:51 | DEBUG | Decode done, empty stack: true
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-20 00:34:51 | DEBUG | Decode done, empty stack: true
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelActive()
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activating endpoint
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands()
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands() Flushing 0 commands
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelActive() done
2025-04-20 00:34:51 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-20 00:34:51 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 7 bytes, 1 commands in the stack
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-20 00:34:51 | DEBUG | Decode done, empty stack: true
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 00:34:51 | DEBUG | dispatching command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 00:34:51 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 00:34:52 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 7 bytes, 1 commands in the stack
2025-04-20 00:34:52 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-20 00:34:52 | DEBUG | Decode done, empty stack: true
2025-04-20 00:34:52 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-04-20 00:34:52 | DEBUG | Redis health check: PONG
2025-04-20 00:45:43 | TRACE | Weights attr: {}
2025-04-20 00:45:43 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal"
2025-04-20 00:45:43 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal"
2025-04-20 00:45:43 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal"
2025-04-20 00:45:43 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal"
2025-04-20 00:45:43 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 00:45:43 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 00:45:43 | DEBUG | [5457aca7-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 00:45:43 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 00:45:43 | TRACE | RouteToRequestUrlFilter start
2025-04-20 00:45:43 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"41c02cb8-ac4f-416c-8879-76bf7130837a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52052"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:45:43 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@19730fdf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0012069, duration(nanos)=1206900.0, startTimeNanos=3212889760300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@64585081} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"41c02cb8-ac4f-416c-8879-76bf7130837a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52052"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:45:43 | TRACE | outbound route: eb67c473, inbound: [5457aca7-1] 
2025-04-20 00:45:43 | DEBUG | Will instrument the response
2025-04-20 00:45:43 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@19730fdf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3818521, duration(nanos)=3.818521E8, startTimeNanos=3212889760300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@64585081}
2025-04-20 00:45:43 | TRACE | NettyWriteResponseFilter start inbound: eb67c473, outbound: [5457aca7-1] 
2025-04-20 00:45:43 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=404),tag(outcome=CLIENT_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=NOT_FOUND)]
2025-04-20 00:46:10 | TRACE | Weights attr: {}
2025-04-20 00:46:10 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:46:10 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:46:10 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:46:10 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:46:10 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 00:46:10 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 00:46:10 | DEBUG | [5457aca7-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 00:46:10 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 00:46:10 | TRACE | RouteToRequestUrlFilter start
2025-04-20 00:46:10 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"87977179-362a-4a61-ac95-71cc7c1dc74b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52052"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:46:10 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@157cbc77', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.862E-4, duration(nanos)=386200.0, startTimeNanos=3240086093400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1bbb50a8} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"87977179-362a-4a61-ac95-71cc7c1dc74b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52052"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:46:10 | TRACE | outbound route: eb67c473, inbound: [5457aca7-2] 
2025-04-20 00:46:10 | DEBUG | Will instrument the response
2025-04-20 00:46:10 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@157cbc77', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.2958562, duration(nanos)=2.958562E8, startTimeNanos=3240086093400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1bbb50a8}
2025-04-20 00:46:10 | TRACE | NettyWriteResponseFilter start inbound: eb67c473, outbound: [5457aca7-2] 
2025-04-20 00:46:10 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 00:47:57 | TRACE | Weights attr: {}
2025-04-20 00:47:57 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:47:57 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:47:57 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:47:57 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:47:57 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 00:47:57 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 00:47:57 | DEBUG | [0bfb1157-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 00:47:57 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 00:47:57 | TRACE | RouteToRequestUrlFilter start
2025-04-20 00:47:57 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"655ef6d3-4dcf-4172-bbe3-1024c7d84b40", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52086"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:47:57 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@184024cc', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.357E-4, duration(nanos)=135700.0, startTimeNanos=3347221171100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1687d9b4} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"655ef6d3-4dcf-4172-bbe3-1024c7d84b40", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52086"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:47:57 | TRACE | outbound route: 61864946, inbound: [0bfb1157-3] 
2025-04-20 00:47:57 | DEBUG | Will instrument the response
2025-04-20 00:47:57 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@184024cc', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0739413, duration(nanos)=7.39413E7, startTimeNanos=3347221171100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1687d9b4}
2025-04-20 00:47:57 | TRACE | NettyWriteResponseFilter start inbound: 61864946, outbound: [0bfb1157-3] 
2025-04-20 00:47:57 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 00:48:07 | TRACE | Weights attr: {}
2025-04-20 00:48:07 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:48:07 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:48:07 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:48:07 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:48:07 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 00:48:07 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 00:48:07 | DEBUG | [0bfb1157-4] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 00:48:07 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 00:48:07 | TRACE | RouteToRequestUrlFilter start
2025-04-20 00:48:07 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"87a108b4-2981-4e4d-9c57-efaf165bd44c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52086"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:48:07 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@b84c787', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.168E-4, duration(nanos)=216800.0, startTimeNanos=3356846854600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5432887} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"87a108b4-2981-4e4d-9c57-efaf165bd44c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52086"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:48:07 | TRACE | outbound route: 88c368ca, inbound: [0bfb1157-4] 
2025-04-20 00:48:07 | DEBUG | Will instrument the response
2025-04-20 00:48:07 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@b84c787', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0621448, duration(nanos)=6.21448E7, startTimeNanos=3356846854600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5432887}
2025-04-20 00:48:07 | TRACE | NettyWriteResponseFilter start inbound: 88c368ca, outbound: [0bfb1157-4] 
2025-04-20 00:48:07 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 00:50:15 | TRACE | Weights attr: {}
2025-04-20 00:50:15 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:50:15 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:50:15 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:50:15 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:50:15 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 00:50:15 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 00:50:15 | DEBUG | [558e2a14-5] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 00:50:15 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 00:50:15 | TRACE | RouteToRequestUrlFilter start
2025-04-20 00:50:15 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"236dd8b6-5075-47bd-9755-cc6711469547", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52252"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:50:15 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@535b9196', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.024E-4, duration(nanos)=102400.0, startTimeNanos=3485155916600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5055f035} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"236dd8b6-5075-47bd-9755-cc6711469547", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52252"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:50:15 | TRACE | outbound route: 61bd700a, inbound: [558e2a14-5] 
2025-04-20 00:50:38 | DEBUG | Will instrument the response
2025-04-20 00:50:38 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@535b9196', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=22.8374597, duration(nanos)=2.28374597E10, startTimeNanos=3485155916600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5055f035}
2025-04-20 00:50:38 | TRACE | NettyWriteResponseFilter start inbound: 61bd700a, outbound: [558e2a14-5] 
2025-04-20 00:50:38 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 00:58:50 | TRACE | Weights attr: {}
2025-04-20 00:58:50 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:58:50 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:58:50 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:58:50 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 00:58:50 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 00:58:50 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 00:58:50 | DEBUG | [a9e6845f-6] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 00:58:50 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 00:58:50 | TRACE | RouteToRequestUrlFilter start
2025-04-20 00:58:50 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"c3b0fe64-f844-45a9-88d2-84eae8b12004", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52484"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:58:50 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a865a93', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.174E-4, duration(nanos)=117400.0, startTimeNanos=4000621945500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2a69cab0} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"c3b0fe64-f844-45a9-88d2-84eae8b12004", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52484"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 00:58:50 | TRACE | outbound route: 9a7a55f8, inbound: [a9e6845f-6] 
2025-04-20 00:59:00 | DEBUG | Will instrument the response
2025-04-20 00:59:00 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a865a93', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.7298806, duration(nanos)=9.7298806E9, startTimeNanos=4000621945500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2a69cab0}
2025-04-20 00:59:00 | TRACE | NettyWriteResponseFilter start inbound: 9a7a55f8, outbound: [a9e6845f-6] 
2025-04-20 00:59:00 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 01:02:40 | TRACE | Weights attr: {}
2025-04-20 01:02:40 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:02:40 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:02:40 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:02:40 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:02:40 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 01:02:40 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 01:02:40 | DEBUG | [4026b422-7] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 01:02:40 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 01:02:40 | TRACE | RouteToRequestUrlFilter start
2025-04-20 01:02:40 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"1e311cd1-19bf-4202-a174-2ab13e3b40dd", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52501"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:02:40 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@12b84fbc', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.98E-5, duration(nanos)=89800.0, startTimeNanos=4230787023900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@57bad38f} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"1e311cd1-19bf-4202-a174-2ab13e3b40dd", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52501"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:02:40 | TRACE | outbound route: 32509864, inbound: [4026b422-7] 
2025-04-20 01:02:46 | DEBUG | Will instrument the response
2025-04-20 01:02:46 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@12b84fbc', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.0889269, duration(nanos)=5.0889269E9, startTimeNanos=4230787023900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@57bad38f}
2025-04-20 01:02:46 | TRACE | NettyWriteResponseFilter start inbound: 32509864, outbound: [4026b422-7] 
2025-04-20 01:02:46 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 01:14:26 | TRACE | Weights attr: {}
2025-04-20 01:14:26 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:14:26 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:14:26 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:14:26 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:14:26 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 01:14:26 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 01:14:26 | DEBUG | [06abaf11-8] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 01:14:26 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 01:14:26 | TRACE | RouteToRequestUrlFilter start
2025-04-20 01:14:26 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"c474d471-59c9-45f2-be7a-c4e31c6be79e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52660"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:14:26 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@17cacf7', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.78E-5, duration(nanos)=97800.0, startTimeNanos=4936719610900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@447e22bc} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"c474d471-59c9-45f2-be7a-c4e31c6be79e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52660"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:14:26 | TRACE | outbound route: d3468f06, inbound: [06abaf11-8] 
2025-04-20 01:14:37 | DEBUG | Will instrument the response
2025-04-20 01:14:37 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@17cacf7', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=10.7386358, duration(nanos)=1.07386358E10, startTimeNanos=4936719610900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@447e22bc}
2025-04-20 01:14:37 | TRACE | NettyWriteResponseFilter start inbound: d3468f06, outbound: [06abaf11-8] 
2025-04-20 01:14:37 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 01:16:36 | TRACE | Weights attr: {}
2025-04-20 01:16:36 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:16:36 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:16:36 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:16:36 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:16:36 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 01:16:36 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 01:16:36 | DEBUG | [435bc52a-9] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 01:16:36 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 01:16:36 | TRACE | RouteToRequestUrlFilter start
2025-04-20 01:16:36 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"fc4aa112-30bf-4136-a95a-3cb0f7551db4", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52699"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:16:36 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@524651b8', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.079E-4, duration(nanos)=107900.0, startTimeNanos=5066080980500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@700b8d95} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"fc4aa112-30bf-4136-a95a-3cb0f7551db4", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52699"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:16:36 | TRACE | outbound route: 608a9c64, inbound: [435bc52a-9] 
2025-04-20 01:16:44 | DEBUG | Will instrument the response
2025-04-20 01:16:44 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@524651b8', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.9987597, duration(nanos)=7.9987597E9, startTimeNanos=5066080980500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@700b8d95}
2025-04-20 01:16:44 | TRACE | NettyWriteResponseFilter start inbound: 608a9c64, outbound: [435bc52a-9] 
2025-04-20 01:16:44 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 01:21:40 | TRACE | Weights attr: {}
2025-04-20 01:21:40 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:21:40 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:21:40 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:21:40 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:21:40 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 01:21:40 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 01:21:40 | DEBUG | [33327d7f-10] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 01:21:40 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 01:21:40 | TRACE | RouteToRequestUrlFilter start
2025-04-20 01:21:40 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"f73b5d6a-bd13-4b68-af59-40283c8b4f96", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52733"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:21:40 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6b96e145', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.693E-4, duration(nanos)=169300.0, startTimeNanos=5369837450100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@52932fdf} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"f73b5d6a-bd13-4b68-af59-40283c8b4f96", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52733"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:21:40 | TRACE | outbound route: 12267a40, inbound: [33327d7f-10] 
2025-04-20 01:21:47 | DEBUG | Will instrument the response
2025-04-20 01:21:47 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6b96e145', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.3115777, duration(nanos)=7.3115777E9, startTimeNanos=5369837450100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@52932fdf}
2025-04-20 01:21:47 | TRACE | NettyWriteResponseFilter start inbound: 12267a40, outbound: [33327d7f-10] 
2025-04-20 01:21:47 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 01:23:52 | TRACE | Weights attr: {}
2025-04-20 01:23:52 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:23:52 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:23:52 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:23:52 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:23:52 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 01:23:52 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 01:23:52 | DEBUG | [e142cb44-11] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 01:23:52 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 01:23:52 | TRACE | RouteToRequestUrlFilter start
2025-04-20 01:23:52 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"8c59020e-b113-4d04-bb9c-0c9a7ba53381", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52800"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:23:52 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4ec5ebf0', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.62E-5, duration(nanos)=76200.0, startTimeNanos=5502766158100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6627c1e5} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"8c59020e-b113-4d04-bb9c-0c9a7ba53381", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52800"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:23:52 | TRACE | outbound route: 147817e9, inbound: [e142cb44-11] 
2025-04-20 01:23:57 | DEBUG | Will instrument the response
2025-04-20 01:23:57 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4ec5ebf0', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.4159189, duration(nanos)=4.4159189E9, startTimeNanos=5502766158100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6627c1e5}
2025-04-20 01:23:57 | TRACE | NettyWriteResponseFilter start inbound: 147817e9, outbound: [e142cb44-11] 
2025-04-20 01:23:57 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 01:25:15 | TRACE | Weights attr: {}
2025-04-20 01:25:15 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:25:15 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:25:15 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:25:15 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:25:15 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 01:25:15 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 01:25:15 | DEBUG | [3c2850ab-12] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 01:25:15 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 01:25:15 | TRACE | RouteToRequestUrlFilter start
2025-04-20 01:25:15 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"0a53e3d5-9bfc-4c8f-8e52-2cf98ec7dd40", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52831"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:25:15 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@696b6d4b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.91E-5, duration(nanos)=69100.0, startTimeNanos=5585106344400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@757067f1} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"0a53e3d5-9bfc-4c8f-8e52-2cf98ec7dd40", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52831"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:25:15 | TRACE | outbound route: ad70a19e, inbound: [3c2850ab-12] 
2025-04-20 01:27:11 | DEBUG | Will instrument the response
2025-04-20 01:27:11 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@696b6d4b', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=116.0104799, duration(nanos)=1.160104799E11, startTimeNanos=5585106344400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@757067f1}
2025-04-20 01:27:11 | TRACE | NettyWriteResponseFilter start inbound: ad70a19e, outbound: [3c2850ab-12] 
2025-04-20 01:27:11 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 01:41:24 | TRACE | Weights attr: {}
2025-04-20 01:41:24 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:41:24 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:41:24 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:41:24 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:41:24 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 01:41:24 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 01:41:24 | DEBUG | [668c8a6d-13] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 01:41:24 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 01:41:24 | TRACE | RouteToRequestUrlFilter start
2025-04-20 01:41:24 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ea99f60a-8b8a-41a5-8f60-1ac5914426f6", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52965"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:41:24 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7f537523', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.47E-5, duration(nanos)=94700.0, startTimeNanos=6554174605100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@78e6a4} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ea99f60a-8b8a-41a5-8f60-1ac5914426f6", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52965"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:41:24 | TRACE | outbound route: cfbf0534, inbound: [668c8a6d-13] 
2025-04-20 01:41:48 | DEBUG | Will instrument the response
2025-04-20 01:41:48 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7f537523', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=23.8163674, duration(nanos)=2.38163674E10, startTimeNanos=6554174605100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@78e6a4}
2025-04-20 01:41:48 | TRACE | NettyWriteResponseFilter start inbound: cfbf0534, outbound: [668c8a6d-13] 
2025-04-20 01:41:48 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 01:45:39 | TRACE | Weights attr: {}
2025-04-20 01:45:39 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:45:39 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:45:39 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:45:39 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:45:39 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 01:45:39 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 01:45:39 | DEBUG | [a05e8e30-14] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 01:45:39 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 01:45:39 | TRACE | RouteToRequestUrlFilter start
2025-04-20 01:45:39 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"57cd315a-1cde-4424-9788-4ed04ad13bef", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52996"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:45:39 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3aa9a5dc', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0976038, duration(nanos)=9.76038E7, startTimeNanos=6809428251200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5ef1c473} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"57cd315a-1cde-4424-9788-4ed04ad13bef", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:52996"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:45:39 | TRACE | outbound route: a08d6617, inbound: [a05e8e30-14] 
2025-04-20 01:48:37 | DEBUG | Will instrument the response
2025-04-20 01:48:37 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3aa9a5dc', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=177.4821469, duration(nanos)=1.774821469E11, startTimeNanos=6809428251200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5ef1c473}
2025-04-20 01:48:37 | TRACE | NettyWriteResponseFilter start inbound: a08d6617, outbound: [a05e8e30-14] 
2025-04-20 01:48:37 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 01:51:35 | TRACE | Weights attr: {}
2025-04-20 01:51:35 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:51:35 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:51:35 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:51:35 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:51:35 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 01:51:35 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 01:51:35 | DEBUG | [602c82c5-15] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 01:51:35 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 01:51:35 | TRACE | RouteToRequestUrlFilter start
2025-04-20 01:51:35 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"00b05205-3378-4f92-9a51-6f9757420f72", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53107"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:51:35 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@36b2a732', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.79E-5, duration(nanos)=77900.0, startTimeNanos=7165464901500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@37952cc0} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"00b05205-3378-4f92-9a51-6f9757420f72", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53107"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:51:35 | TRACE | outbound route: fc14b1dc, inbound: [602c82c5-15] 
2025-04-20 01:51:54 | DEBUG | Will instrument the response
2025-04-20 01:51:54 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@36b2a732', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=18.9716432, duration(nanos)=1.89716432E10, startTimeNanos=7165464901500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@37952cc0}
2025-04-20 01:51:54 | TRACE | NettyWriteResponseFilter start inbound: fc14b1dc, outbound: [602c82c5-15] 
2025-04-20 01:51:54 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 01:57:28 | TRACE | Weights attr: {}
2025-04-20 01:57:28 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:57:28 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:57:28 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:57:28 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:57:28 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 01:57:28 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 01:57:28 | DEBUG | [105eb47b-16] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 01:57:28 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 01:57:28 | TRACE | RouteToRequestUrlFilter start
2025-04-20 01:57:28 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"5d950284-91b8-4138-ab49-dbd302999082", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53148"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:57:28 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@118f76bc', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.29E-5, duration(nanos)=92900.0, startTimeNanos=7518479245000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2451ddf3} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"5d950284-91b8-4138-ab49-dbd302999082", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53148"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:57:28 | TRACE | outbound route: e52d775b, inbound: [105eb47b-16] 
2025-04-20 01:57:41 | DEBUG | Will instrument the response
2025-04-20 01:57:41 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@118f76bc', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=13.1530151, duration(nanos)=1.31530151E10, startTimeNanos=7518479245000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2451ddf3}
2025-04-20 01:57:41 | TRACE | NettyWriteResponseFilter start inbound: e52d775b, outbound: [105eb47b-16] 
2025-04-20 01:57:41 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 01:59:49 | TRACE | Weights attr: {}
2025-04-20 01:59:49 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:59:49 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:59:49 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:59:49 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 01:59:49 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 01:59:49 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 01:59:49 | DEBUG | [4f49c253-17] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 01:59:49 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 01:59:49 | TRACE | RouteToRequestUrlFilter start
2025-04-20 01:59:49 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"0757b856-d9bc-4625-85c7-85bd5ace202d", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53180"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:59:49 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6053bc82', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.252E-4, duration(nanos)=125200.0, startTimeNanos=7659152339100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4c18e238} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"0757b856-d9bc-4625-85c7-85bd5ace202d", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53180"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 01:59:49 | TRACE | outbound route: 76e3ddcf, inbound: [4f49c253-17] 
2025-04-20 02:00:15 | DEBUG | Will instrument the response
2025-04-20 02:00:15 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6053bc82', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=26.0911864, duration(nanos)=2.60911864E10, startTimeNanos=7659152339100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4c18e238}
2025-04-20 02:00:15 | TRACE | NettyWriteResponseFilter start inbound: 76e3ddcf, outbound: [4f49c253-17] 
2025-04-20 02:00:15 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 02:06:19 | TRACE | Weights attr: {}
2025-04-20 02:06:19 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:06:19 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:06:19 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:06:19 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:06:19 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:06:19 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:06:19 | DEBUG | [43dc676f-18] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:06:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:06:19 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:06:19 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"fe100da3-8f49-4059-ba34-efd072e53263", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53221"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:06:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2318a21', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.679E-4, duration(nanos)=167900.0, startTimeNanos=8049173950500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4997a06f} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"fe100da3-8f49-4059-ba34-efd072e53263", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53221"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:06:19 | TRACE | outbound route: 66b5e575, inbound: [43dc676f-18] 
2025-04-20 02:07:01 | DEBUG | Will instrument the response
2025-04-20 02:07:01 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2318a21', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=42.4931501, duration(nanos)=4.24931501E10, startTimeNanos=8049173950500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4997a06f}
2025-04-20 02:07:01 | TRACE | NettyWriteResponseFilter start inbound: 66b5e575, outbound: [43dc676f-18] 
2025-04-20 02:07:01 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:11:19 | TRACE | Weights attr: {}
2025-04-20 02:11:19 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:11:19 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:11:19 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:11:19 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:11:19 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:11:19 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:11:19 | DEBUG | [52015e6e-19] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:11:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:11:19 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:11:19 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"6f6fb735-3334-4f63-a223-b9c2f7a83414", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53254"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:11:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@56eedba9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.42E-5, duration(nanos)=64200.0, startTimeNanos=8349162241000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@e9e0078} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"6f6fb735-3334-4f63-a223-b9c2f7a83414", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53254"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:11:19 | TRACE | outbound route: e22e6d12, inbound: [52015e6e-19] 
2025-04-20 02:11:19 | DEBUG | Will instrument the response
2025-04-20 02:11:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@56eedba9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.2182251, duration(nanos)=2.182251E8, startTimeNanos=8349162241000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@e9e0078}
2025-04-20 02:11:19 | TRACE | NettyWriteResponseFilter start inbound: e22e6d12, outbound: [52015e6e-19] 
2025-04-20 02:11:19 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:12:07 | TRACE | Weights attr: {}
2025-04-20 02:12:07 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:07 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:07 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:07 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:07 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:12:07 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:12:07 | DEBUG | [52015e6e-20] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:12:07 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:12:07 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:12:07 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ba3d1c83-0d40-4a4d-a707-ffdc43d5a606", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53254"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:12:07 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@16e2fd07', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.032E-4, duration(nanos)=103200.0, startTimeNanos=8396888948300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@60db5fc5} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ba3d1c83-0d40-4a4d-a707-ffdc43d5a606", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53254"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:12:07 | TRACE | outbound route: e22e6d12, inbound: [52015e6e-20] 
2025-04-20 02:12:20 | WARN  | [e22e6d12-2, L:/127.0.0.1:53255 ! R:localhost/127.0.0.1:8085] The connection observed an error
reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response
2025-04-20 02:12:20 | DEBUG | An exception occurred and observation was not previously stopped, will stop it. The exception was [reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response]
2025-04-20 02:12:20 | ERROR | [52015e6e-20]  500 Server Error for HTTP POST "/sagas/api/v1/withdrawal/start"
reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ com.project.apigateway.filter.GlobalCorsFilter$$Lambda/0x000001dad7702c88 [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ AuthorizationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ LogoutWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ CorsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ com.project.apigateway.security.JwtAuthenticationFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/sagas/api/v1/withdrawal/start" [ExceptionHandlingWebHandler]
Original Stack Trace:
2025-04-20 02:12:20 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 02:12:27 | TRACE | Weights attr: {}
2025-04-20 02:12:27 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:27 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:27 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:27 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:27 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:12:27 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:12:27 | DEBUG | [52015e6e-21] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:12:27 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:12:27 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:12:27 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ffe7cad4-3d80-4083-9c0d-40f9d3432b99", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53254"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:12:27 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@28866cf5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.68E-5, duration(nanos)=56800.0, startTimeNanos=8417018842000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6f0cf287} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ffe7cad4-3d80-4083-9c0d-40f9d3432b99", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53254"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:12:27 | TRACE | outbound route: 0d17f8f2, inbound: [52015e6e-21] 
2025-04-20 02:12:27 | DEBUG | Will instrument the response
2025-04-20 02:12:27 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@28866cf5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0708261, duration(nanos)=7.08261E7, startTimeNanos=8417018842000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6f0cf287}
2025-04-20 02:12:27 | TRACE | NettyWriteResponseFilter start inbound: 0d17f8f2, outbound: [52015e6e-21] 
2025-04-20 02:12:27 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:12:45 | TRACE | Weights attr: {}
2025-04-20 02:12:45 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:45 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:45 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:45 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:12:45 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:12:45 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:12:45 | DEBUG | [52015e6e-22] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:12:45 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:12:45 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:12:45 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"454df514-9ea7-4316-b064-ce2bc7facb8a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53254"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:12:45 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3ee77bc4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.21E-5, duration(nanos)=62100.0, startTimeNanos=8435625529300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6e65f237} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"454df514-9ea7-4316-b064-ce2bc7facb8a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53254"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:12:45 | TRACE | outbound route: 0d17f8f2, inbound: [52015e6e-22] 
2025-04-20 02:12:45 | DEBUG | Will instrument the response
2025-04-20 02:12:45 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3ee77bc4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0805647, duration(nanos)=8.05647E7, startTimeNanos=8435625529300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6e65f237}
2025-04-20 02:12:45 | TRACE | NettyWriteResponseFilter start inbound: 0d17f8f2, outbound: [52015e6e-22] 
2025-04-20 02:12:45 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:18:20 | TRACE | Weights attr: {}
2025-04-20 02:18:20 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:18:20 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:18:20 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:18:20 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:18:20 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:18:20 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:18:20 | DEBUG | [921e6e49-23] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:18:20 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:18:20 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:18:20 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b4f01f54-c34f-48fe-8253-7ba4f255e2fa", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53488"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:18:20 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1348c1b5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.546E-4, duration(nanos)=154600.0, startTimeNanos=8770141716900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6dab9e64} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b4f01f54-c34f-48fe-8253-7ba4f255e2fa", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53488"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:18:20 | TRACE | outbound route: b8daa5d6, inbound: [921e6e49-23] 
2025-04-20 02:18:21 | DEBUG | Will instrument the response
2025-04-20 02:18:21 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1348c1b5', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.6571916, duration(nanos)=6.571916E8, startTimeNanos=8770141716900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6dab9e64}
2025-04-20 02:18:21 | TRACE | NettyWriteResponseFilter start inbound: b8daa5d6, outbound: [921e6e49-23] 
2025-04-20 02:18:21 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:18:45 | TRACE | Weights attr: {}
2025-04-20 02:18:45 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:18:45 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:18:45 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:18:45 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:18:45 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:18:45 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:18:45 | DEBUG | [921e6e49-24] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:18:45 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:18:45 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:18:45 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"bc90b4c1-c802-494f-aa1b-d13b5b1ccd3f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53488"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:18:45 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@a8bfff4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.84E-5, duration(nanos)=58400.0, startTimeNanos=8795399081800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@201f0513} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"bc90b4c1-c802-494f-aa1b-d13b5b1ccd3f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53488"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:18:45 | TRACE | outbound route: b8daa5d6, inbound: [921e6e49-24] 
2025-04-20 02:18:45 | DEBUG | Will instrument the response
2025-04-20 02:18:45 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@a8bfff4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0940932, duration(nanos)=9.40932E7, startTimeNanos=8795399081800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@201f0513}
2025-04-20 02:18:45 | TRACE | NettyWriteResponseFilter start inbound: b8daa5d6, outbound: [921e6e49-24] 
2025-04-20 02:18:45 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:19:21 | TRACE | Weights attr: {}
2025-04-20 02:19:21 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:19:21 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:19:21 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:19:21 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:19:21 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:19:21 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:19:21 | DEBUG | [921e6e49-25] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:19:21 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:19:21 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:19:21 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"36776305-6d2b-4dd0-90cd-368cf4f6713f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53488"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:19:21 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@12c6e448', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.51E-5, duration(nanos)=75100.0, startTimeNanos=8831099102100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@19c4cd0a} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"36776305-6d2b-4dd0-90cd-368cf4f6713f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53488"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:19:21 | TRACE | outbound route: b8daa5d6, inbound: [921e6e49-25] 
2025-04-20 02:19:27 | DEBUG | Will instrument the response
2025-04-20 02:19:27 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@12c6e448', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.8464474, duration(nanos)=5.8464474E9, startTimeNanos=8831099102100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@19c4cd0a}
2025-04-20 02:19:27 | TRACE | NettyWriteResponseFilter start inbound: b8daa5d6, outbound: [921e6e49-25] 
2025-04-20 02:19:27 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:27:57 | TRACE | Weights attr: {}
2025-04-20 02:27:57 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:27:57 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:27:57 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:27:57 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:27:57 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:27:57 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:27:57 | DEBUG | [3b5e9111-26] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:27:57 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:27:57 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:27:57 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"94738577-a7fc-4451-8c25-96077e50f5b2", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53679"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:27:57 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@600b1d58', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.09E-5, duration(nanos)=70900.0, startTimeNanos=9347345201900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@14eb5dee} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"94738577-a7fc-4451-8c25-96077e50f5b2", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53679"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:27:57 | TRACE | outbound route: 3c6aaeb1, inbound: [3b5e9111-26] 
2025-04-20 02:27:57 | DEBUG | Will instrument the response
2025-04-20 02:27:57 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@600b1d58', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1110733, duration(nanos)=1.110733E8, startTimeNanos=9347345201900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@14eb5dee}
2025-04-20 02:27:57 | TRACE | NettyWriteResponseFilter start inbound: 3c6aaeb1, outbound: [3b5e9111-26] 
2025-04-20 02:27:57 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:35:01 | TRACE | Weights attr: {}
2025-04-20 02:35:01 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:01 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:01 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:01 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:01 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:35:01 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:35:01 | DEBUG | [a43c5e62-27] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:35:01 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:35:01 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:35:01 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"53e96344-6acd-49e9-ad77-77581d9a1948", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53898"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:35:01 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@75e895a2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.03E-4, duration(nanos)=103000.0, startTimeNanos=9771543702600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1de4383c} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"53e96344-6acd-49e9-ad77-77581d9a1948", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53898"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:35:01 | TRACE | outbound route: daf481bb, inbound: [a43c5e62-27] 
2025-04-20 02:35:01 | DEBUG | Will instrument the response
2025-04-20 02:35:01 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@75e895a2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0924188, duration(nanos)=9.24188E7, startTimeNanos=9771543702600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1de4383c}
2025-04-20 02:35:01 | TRACE | NettyWriteResponseFilter start inbound: daf481bb, outbound: [a43c5e62-27] 
2025-04-20 02:35:01 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:35:13 | TRACE | Weights attr: {}
2025-04-20 02:35:13 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:13 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:13 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:13 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:13 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:35:13 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:35:13 | DEBUG | [a43c5e62-28] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:35:13 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:35:14 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:35:14 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"2458d635-29c4-4614-8c2a-ef5cd7aa5782", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53898"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:35:14 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2114ced2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.604E-4, duration(nanos)=160400.0, startTimeNanos=9783818044800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1b8b9842} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"2458d635-29c4-4614-8c2a-ef5cd7aa5782", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53898"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:35:14 | TRACE | outbound route: daf481bb, inbound: [a43c5e62-28] 
2025-04-20 02:35:14 | DEBUG | Will instrument the response
2025-04-20 02:35:14 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2114ced2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0835674, duration(nanos)=8.35674E7, startTimeNanos=9783818044800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1b8b9842}
2025-04-20 02:35:14 | TRACE | NettyWriteResponseFilter start inbound: daf481bb, outbound: [a43c5e62-28] 
2025-04-20 02:35:14 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:35:53 | TRACE | Weights attr: {}
2025-04-20 02:35:53 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:53 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:53 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:53 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:35:53 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:35:53 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:35:53 | DEBUG | [a43c5e62-29] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:35:53 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:35:53 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:35:53 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"19bf5aaf-72f3-4e25-b097-85d048b9e62e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53898"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:35:53 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2beeb03', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.001E-4, duration(nanos)=100100.0, startTimeNanos=9823403344500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@a2ea919} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"19bf5aaf-72f3-4e25-b097-85d048b9e62e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53898"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:35:53 | TRACE | outbound route: daf481bb, inbound: [a43c5e62-29] 
2025-04-20 02:35:53 | DEBUG | Will instrument the response
2025-04-20 02:35:53 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2beeb03', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0673199, duration(nanos)=6.73199E7, startTimeNanos=9823403344500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@a2ea919}
2025-04-20 02:35:53 | TRACE | NettyWriteResponseFilter start inbound: daf481bb, outbound: [a43c5e62-29] 
2025-04-20 02:35:53 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:36:56 | TRACE | Weights attr: {}
2025-04-20 02:36:56 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:36:56 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:36:56 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:36:56 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:36:56 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:36:56 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:36:56 | DEBUG | [92553b2f-30] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:36:56 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:36:56 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:36:56 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b1a307e7-cd10-4765-81be-0f92c83db643", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53909"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:36:56 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@11d73dec', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.31E-5, duration(nanos)=73100.0, startTimeNanos=9886629694600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@506281ab} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b1a307e7-cd10-4765-81be-0f92c83db643", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:53909"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:36:56 | TRACE | outbound route: 30a76692, inbound: [92553b2f-30] 
2025-04-20 02:36:56 | DEBUG | Will instrument the response
2025-04-20 02:36:56 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@11d73dec', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0732442, duration(nanos)=7.32442E7, startTimeNanos=9886629694600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@506281ab}
2025-04-20 02:36:56 | TRACE | NettyWriteResponseFilter start inbound: 30a76692, outbound: [92553b2f-30] 
2025-04-20 02:36:56 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:40:07 | TRACE | Weights attr: {}
2025-04-20 02:40:07 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:40:07 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:40:07 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:40:07 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:40:07 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:40:07 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:40:07 | DEBUG | [61dac087-31] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:40:07 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:40:07 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:40:07 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"7711d91f-4954-4778-8d47-1f58dbe97f49", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54063"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:40:07 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@48f4075c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.401E-4, duration(nanos)=140100.0, startTimeNanos=10077246637400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@799df898} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"7711d91f-4954-4778-8d47-1f58dbe97f49", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54063"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:40:07 | TRACE | outbound route: c49521be, inbound: [61dac087-31] 
2025-04-20 02:40:07 | DEBUG | Will instrument the response
2025-04-20 02:40:07 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@48f4075c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.4816336, duration(nanos)=4.816336E8, startTimeNanos=10077246637400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@799df898}
2025-04-20 02:40:07 | TRACE | NettyWriteResponseFilter start inbound: c49521be, outbound: [61dac087-31] 
2025-04-20 02:40:07 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:40:20 | TRACE | Weights attr: {}
2025-04-20 02:40:20 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:40:20 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:40:20 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:40:20 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:40:20 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:40:20 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:40:20 | DEBUG | [61dac087-32] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:40:20 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:40:20 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:40:20 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"e7a71e95-7dbc-4559-b4eb-74fed06774fb", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54063"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:40:20 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4eaaa098', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.11E-5, duration(nanos)=71100.0, startTimeNanos=10090188709200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@164513c3} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"e7a71e95-7dbc-4559-b4eb-74fed06774fb", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54063"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:40:20 | TRACE | outbound route: c49521be, inbound: [61dac087-32] 
2025-04-20 02:40:20 | DEBUG | Will instrument the response
2025-04-20 02:40:20 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4eaaa098', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0805992, duration(nanos)=8.05992E7, startTimeNanos=10090188709200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@164513c3}
2025-04-20 02:40:20 | TRACE | NettyWriteResponseFilter start inbound: c49521be, outbound: [61dac087-32] 
2025-04-20 02:40:20 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:47:02 | TRACE | Weights attr: {}
2025-04-20 02:47:02 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:47:02 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:47:02 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:47:02 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:47:02 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:47:02 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:47:02 | DEBUG | [21d054a9-33] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:47:02 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:47:02 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:47:02 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"3a50960a-fb5d-4a8e-8c66-f5183009b3de", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54119"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:47:02 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2feff8b0', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.98E-5, duration(nanos)=69800.0, startTimeNanos=10492367543800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@107cdcda} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"3a50960a-fb5d-4a8e-8c66-f5183009b3de", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54119"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:47:02 | TRACE | outbound route: 071e5019, inbound: [21d054a9-33] 
2025-04-20 02:47:02 | DEBUG | Will instrument the response
2025-04-20 02:47:02 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2feff8b0', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1121088, duration(nanos)=1.121088E8, startTimeNanos=10492367543800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@107cdcda}
2025-04-20 02:47:02 | TRACE | NettyWriteResponseFilter start inbound: 071e5019, outbound: [21d054a9-33] 
2025-04-20 02:47:02 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 02:56:32 | TRACE | Weights attr: {}
2025-04-20 02:56:32 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:56:32 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:56:32 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:56:32 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 02:56:32 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 02:56:32 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 02:56:32 | DEBUG | [9e230961-34] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@77d3c3d7
2025-04-20 02:56:32 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@6c4786af}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@5ff29e8b}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@750457a5}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@5d04fbb7}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@5c7e55a4}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@65c689e7}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@7ae6927}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@da67c46}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@55574295}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@a6a2c20}, order = 2147483647]]
2025-04-20 02:56:32 | TRACE | RouteToRequestUrlFilter start
2025-04-20 02:56:32 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b791f4a6-e76e-42ae-9904-ce2f31e430d9", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54299"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:56:32 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@68bbb722', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.01E-5, duration(nanos)=70100.0, startTimeNanos=11062301906500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@26f193f6} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b791f4a6-e76e-42ae-9904-ce2f31e430d9", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54299"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 02:56:32 | TRACE | outbound route: 16d6fb09, inbound: [9e230961-34] 
2025-04-20 02:56:33 | DEBUG | Will instrument the response
2025-04-20 02:56:33 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@68bbb722', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.6908932, duration(nanos)=6.908932E8, startTimeNanos=11062301906500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@26f193f6}
2025-04-20 02:56:33 | TRACE | NettyWriteResponseFilter start inbound: 16d6fb09, outbound: [9e230961-34] 
2025-04-20 02:56:33 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:01:09 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-20 03:01:09 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-20 03:01:09 | INFO  | Graceful shutdown complete
2025-04-20 03:01:09 | DEBUG | closeAsync()
2025-04-20 03:01:09 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-20 03:01:09 | DEBUG | closeAsync()
2025-04-20 03:01:09 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] closeAsync()
2025-04-20 03:01:09 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-20 03:01:09 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@3a8fb023
2025-04-20 03:01:09 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelInactive()
2025-04-20 03:01:09 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] deactivating endpoint handler
2025-04-20 03:01:09 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelInactive() done
2025-04-20 03:01:09 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-20 03:01:09 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-20 03:01:09 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-20 03:01:09 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-20 03:01:09 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-20 03:01:09 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-20 03:01:09 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-20 03:01:09 | DEBUG | [channel=0x6dc389e4, /192.168.102.3:51390 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelUnregistered()
2025-04-20 03:01:09 | DEBUG | [channel=0x1df19ca4, /192.168.102.3:51386 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-20 03:01:12 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-20 03:01:12 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-20 03:02:30 | INFO  | HV000001: Hibernate Validator 8.0.2.Final
2025-04-20 03:02:30 | INFO  | Starting ApiGatewayApplication using Java 23.0.2 with PID 10072 (D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE\API-gateway\target\classes started by hiepg in D:\Code\Big Apps\Hybrid-Blockchain-Based-Stock-Trading-Platform-with-Arbitrage-Bot\BE)
2025-04-20 03:02:30 | DEBUG | Running with Spring Boot v3.4.3, Spring v6.2.3
2025-04-20 03:02:30 | INFO  | The following 1 profile is active: "local"
2025-04-20 03:02:33 | TRACE | Condition GatewayAutoConfiguration.OnVerboseDisabledCondition on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration#gatewayLegacyControllerEndpoint did not match due to NoneNestedConditions 1 matched 0 did not; NestedCondition on GatewayAutoConfiguration.OnVerboseDisabledCondition.VerboseDisabled @ConditionalOnProperty (spring.cloud.gateway.actuator.verbose.enabled) matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#routingFilter matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#nettyWriteResponseFilter matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyWebSocketClient matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration#reactorNettyRequestUpgradeStrategy matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#adaptCachedBodyGlobalFilter matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeCachedBodyFilter matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#routeToRequestUrlFilter matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardRoutingFilter matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#forwardPathFilter matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#webSocketService matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledGlobalFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#websocketRoutingFilter matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightCalculatorWebFilter matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#afterRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#beforeRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#betweenRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cookieRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#headerRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#hostRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#methodRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#pathRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#queryRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#readBodyPredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#remoteAddrRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#xForwardedRemoteAddrRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#weightRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledPredicate on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cloudFoundryRouteServiceRoutePredicateFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestHeadersIfNotPresentGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#mapRequestHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addRequestParameterGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#addResponseHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyRequestBodyGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#dedupeResponseHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#modifyResponseBodyGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#cacheRequestBodyGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#prefixPathGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#preserveHostHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#redirectToGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeJsonAttributesResponseBodyGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeRequestParameterGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#removeResponseHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#principalNameKeyResolver matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestRateLimiterGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewritePathGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#retryGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setPathGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#secureHeadersGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setRequestHostHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setResponseHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteResponseHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteLocationResponseHeaderGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#setStatusGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#saveSessionGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#stripPrefixGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderToRequestUriGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestSizeGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#requestHeaderSizeGatewayFilterFactory matched
2025-04-20 03:02:33 | TRACE | Condition OnEnabledFilter on org.springframework.cloud.gateway.config.GatewayAutoConfiguration#rewriteRequestParameterGatewayFilterFactory matched
2025-04-20 03:02:34 | INFO  | Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-20 03:02:34 | INFO  | Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-20 03:02:34 | INFO  | Finished Spring Data repository scanning in 32 ms. Found 0 Redis repository interfaces.
2025-04-20 03:02:35 | INFO  | BeanFactory id=65a8124d-7f3c-325c-9d2a-019d5b45ab5a
2025-04-20 03:02:36 | DEBUG | Starting with netty's non-blocking DNS resolver library
2025-04-20 03:02:36 | DEBUG | Starting without optional kqueue library
2025-04-20 03:02:36 | DEBUG | Starting without optional io_uring library
2025-04-20 03:02:36 | DEBUG | Starting without optional epoll library
2025-04-20 03:02:36 | DEBUG | -Dio.netty.eventLoopThreads: 4
2025-04-20 03:02:36 | DEBUG | Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2025-04-20 03:02:36 | DEBUG | Starting with JFR support
2025-04-20 03:02:37 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-20 03:02:38 | DEBUG | Allocating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-20 03:02:38 | DEBUG | Creating executor io.netty.channel.nio.NioEventLoopGroup
2025-04-20 03:02:38 | DEBUG | Adding reference to io.netty.channel.nio.NioEventLoopGroup@25df2014, existing ref count 0
2025-04-20 03:02:38 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-20 03:02:38 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-20 03:02:38 | DEBUG | [channel=0x6a1d2ee1, [id: 0x72acde13] (inactive), epid=0x1, chid=0x1] channelRegistered()
2025-04-20 03:02:38 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 03:02:38 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 705 bytes, 1 commands in the stack
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-20 03:02:39 | DEBUG | Decode done, empty stack: true
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 2 commands
2025-04-20 03:02:39 | DEBUG | Decode done, empty stack: true
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-20 03:02:39 | DEBUG | Decode done, empty stack: true
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive()
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] activating endpoint
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands()
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] flushCommands() Flushing 0 commands
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelActive() done
2025-04-20 03:02:39 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-20 03:02:39 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-20 03:02:39 | DEBUG | Decode done, empty stack: true
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 03:02:39 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] write() done
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 03:02:39 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:40 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2025-04-20 03:02:40 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Stack contains: 1 commands
2025-04-20 03:02:40 | DEBUG | Decode done, empty stack: true
2025-04-20 03:02:40 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 03:02:40 | INFO  | 

Using generated security password: 110980ef-985c-4ed0-bbc5-bbf678c1836a

2025-04-20 03:02:41 | DEBUG | Routes supplied from Gateway Properties: [RouteDefinition{id='user-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/users/**}}], filters=[], uri=http://localhost:8081, order=0, metadata={}, enabled=true}, RouteDefinition{id='account-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/accounts/**}}], filters=[], uri=http://localhost:8083, order=0, metadata={}, enabled=true}, RouteDefinition{id='trading-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/trading/**}}], filters=[], uri=http://localhost:8084, order=0, metadata={}, enabled=true}, RouteDefinition{id='kafka-management-service-route', predicates=[PredicateDefinition{name='Path', args={_genkey_0=/sagas/**}}], filters=[], uri=http://localhost:8085, order=0, metadata={}, enabled=true}]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [After]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [Before]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [Between]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [Cookie]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [Header]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [Host]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [Method]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [Path]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [Query]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [ReadBody]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [RemoteAddr]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [Weight]
2025-04-20 03:02:42 | INFO  | Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-04-20 03:02:42 | INFO  | Exposing 2 endpoints beneath base path '/actuator'
2025-04-20 03:02:44 | INFO  | Netty started on port 8080 (http)
2025-04-20 03:02:44 | DEBUG | Starting RedisMessageListenerContainer...
2025-04-20 03:02:44 | DEBUG | Postpone listening for Redis messages until actual listeners are added
2025-04-20 03:02:44 | DEBUG | RouteDefinition user-service-route applying {_genkey_0=/users/**} to Path
2025-04-20 03:02:44 | DEBUG | RouteDefinition matched: user-service-route
2025-04-20 03:02:44 | DEBUG | RouteDefinition account-service-route applying {_genkey_0=/accounts/**} to Path
2025-04-20 03:02:44 | DEBUG | RouteDefinition matched: account-service-route
2025-04-20 03:02:44 | DEBUG | RouteDefinition trading-service-route applying {_genkey_0=/trading/**} to Path
2025-04-20 03:02:44 | DEBUG | RouteDefinition matched: trading-service-route
2025-04-20 03:02:44 | DEBUG | RouteDefinition kafka-management-service-route applying {_genkey_0=/sagas/**} to Path
2025-04-20 03:02:44 | DEBUG | RouteDefinition matched: kafka-management-service-route
2025-04-20 03:02:44 | DEBUG | New routes count: 4
2025-04-20 03:02:44 | INFO  | Started ApiGatewayApplication in 15.602 seconds (process running for 22.541)
2025-04-20 03:02:45 | DEBUG | Trying to get a Redis connection for: redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-20 03:02:45 | DEBUG | Resolved SocketAddress redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694 using redis://default:********************************@redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com:14694?timeout=3s
2025-04-20 03:02:45 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694
2025-04-20 03:02:45 | DEBUG | [channel=0x98c2ff01, [id: 0x42a94a96] (inactive), epid=0x2, chid=0x2] channelRegistered()
2025-04-20 03:02:45 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 03:02:45 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 705 bytes, 1 commands in the stack
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-20 03:02:46 | DEBUG | Decode done, empty stack: true
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=HELLO, output=GenericMapOutput [output={server=redis, version=7.4.2, proto=3, id=25, mode=cluster, role=master, modules=name, ReJSON=ver, 20808=path, /enterprise-managed=args, name=searchlight, ver=21013, path=/enterprise-managed, args=FORK_GC_CLEAN_THRESHOLD, timeseries=ver, 11205=path, 100=MAXAGGREGATERESULTS, 10000=MT_MODE, MT_MODE_ONLY_ON_OPERATIONS=WORKER_THREADS}, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, [AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]], promise)
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=CLIENT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 10 bytes, 2 commands in the stack
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 2 commands
2025-04-20 03:02:46 | DEBUG | Decode done, empty stack: true
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-20 03:02:46 | DEBUG | Decode done, empty stack: true
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=CLIENT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelActive()
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] activating endpoint
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands()
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] flushCommands() Flushing 0 commands
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelActive()
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelActive() done
2025-04-20 03:02:46 | DEBUG | Connecting to Redis at redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694: Success
2025-04-20 03:02:46 | DEBUG | dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 7 bytes, 1 commands in the stack
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-20 03:02:46 | DEBUG | Decode done, empty stack: true
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2025-04-20 03:02:46 | DEBUG | dispatching command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() writeAndFlush command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] write() done
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] write(ctx, SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2025-04-20 03:02:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] writing command SubscriptionCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2025-04-20 03:02:47 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Received: 7 bytes, 1 commands in the stack
2025-04-20 03:02:47 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Stack contains: 1 commands
2025-04-20 03:02:47 | DEBUG | Decode done, empty stack: true
2025-04-20 03:02:47 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] Completing command LatencyMeteredCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
2025-04-20 03:02:47 | DEBUG | Redis health check: PONG
2025-04-20 03:03:21 | TRACE | Weights attr: {}
2025-04-20 03:03:21 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:03:21 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:03:21 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:03:21 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:03:21 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:03:21 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:03:21 | DEBUG | [ed6faf14-1] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:03:21 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:03:21 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:03:21 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"dae900f1-76b4-49e1-a4e4-9b3d54cb119a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54613"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:03:21 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a5c9fd0', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0150405, duration(nanos)=1.50405E7, startTimeNanos=11471533653600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6e221017} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"dae900f1-76b4-49e1-a4e4-9b3d54cb119a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54613"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:03:22 | TRACE | outbound route: c85a3273, inbound: [ed6faf14-1] 
2025-04-20 03:03:24 | DEBUG | Will instrument the response
2025-04-20 03:03:24 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a5c9fd0', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.7105787, duration(nanos)=2.7105787E9, startTimeNanos=11471533653600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6e221017}
2025-04-20 03:03:24 | TRACE | NettyWriteResponseFilter start inbound: c85a3273, outbound: [ed6faf14-1] 
2025-04-20 03:03:24 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:06:50 | TRACE | Weights attr: {}
2025-04-20 03:06:50 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:06:50 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:06:50 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:06:50 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:06:50 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:06:50 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:06:50 | DEBUG | [02933956-2] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:06:50 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:06:50 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:06:50 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"e109c511-6747-43c3-a8b4-3c03b3e2a7c1", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54662"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:06:50 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@26005fef', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.298E-4, duration(nanos)=229800.0, startTimeNanos=11679921108000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@28c7b55f} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"e109c511-6747-43c3-a8b4-3c03b3e2a7c1", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54662"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:06:50 | TRACE | outbound route: 8f68d61a, inbound: [02933956-2] 
2025-04-20 03:06:50 | DEBUG | Will instrument the response
2025-04-20 03:06:50 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@26005fef', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1216449, duration(nanos)=1.216449E8, startTimeNanos=11679921108000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@28c7b55f}
2025-04-20 03:06:50 | TRACE | NettyWriteResponseFilter start inbound: 8f68d61a, outbound: [02933956-2] 
2025-04-20 03:06:50 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:09:08 | TRACE | Weights attr: {}
2025-04-20 03:09:08 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:09:08 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:09:08 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:09:08 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:09:08 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:09:08 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:09:08 | DEBUG | [45cced68-3] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:09:08 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:09:08 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:09:08 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"6f042460-419c-4abd-9a29-661637f0c0d3", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54745"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:09:08 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@490f09ec', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.937E-4, duration(nanos)=193700.0, startTimeNanos=11818058710700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@47c8febd} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"6f042460-419c-4abd-9a29-661637f0c0d3", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54745"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:09:08 | TRACE | outbound route: 116c0f06, inbound: [45cced68-3] 
2025-04-20 03:09:08 | DEBUG | Will instrument the response
2025-04-20 03:09:08 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@490f09ec', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0789408, duration(nanos)=7.89408E7, startTimeNanos=11818058710700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@47c8febd}
2025-04-20 03:09:08 | TRACE | NettyWriteResponseFilter start inbound: 116c0f06, outbound: [45cced68-3] 
2025-04-20 03:09:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:09:28 | TRACE | Weights attr: {}
2025-04-20 03:09:28 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:09:28 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:09:28 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:09:28 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:09:28 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:09:28 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:09:28 | DEBUG | [45cced68-4] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:09:28 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:09:28 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:09:28 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"dec8f876-0751-4d44-8437-50362e3e8521", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54745"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:09:28 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@513e5b06', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.11E-4, duration(nanos)=111000.0, startTimeNanos=11838198324500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5ff9bf51} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"dec8f876-0751-4d44-8437-50362e3e8521", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54745"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:09:28 | TRACE | outbound route: 116c0f06, inbound: [45cced68-4] 
2025-04-20 03:09:28 | DEBUG | Will instrument the response
2025-04-20 03:09:28 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@513e5b06', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0656481, duration(nanos)=6.56481E7, startTimeNanos=11838198324500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5ff9bf51}
2025-04-20 03:09:28 | TRACE | NettyWriteResponseFilter start inbound: 116c0f06, outbound: [45cced68-4] 
2025-04-20 03:09:28 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:14:27 | TRACE | Weights attr: {}
2025-04-20 03:14:27 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:14:27 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:14:27 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:14:27 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:14:27 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:14:27 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:14:27 | DEBUG | [fbc6264a-5] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:14:27 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:14:27 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:14:27 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"36d180f2-3b27-47f3-ab4b-f59abdb6a2fa", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54823"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:14:27 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2245ad66', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.176E-4, duration(nanos)=117600.0, startTimeNanos=12137027686000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7f0ee655} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"36d180f2-3b27-47f3-ab4b-f59abdb6a2fa", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54823"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:14:27 | TRACE | outbound route: 4270ba47, inbound: [fbc6264a-5] 
2025-04-20 03:14:27 | DEBUG | Will instrument the response
2025-04-20 03:14:27 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2245ad66', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0691628, duration(nanos)=6.91628E7, startTimeNanos=12137027686000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7f0ee655}
2025-04-20 03:14:27 | TRACE | NettyWriteResponseFilter start inbound: 4270ba47, outbound: [fbc6264a-5] 
2025-04-20 03:14:27 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:16:58 | TRACE | Weights attr: {}
2025-04-20 03:16:58 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:16:58 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:16:58 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:16:58 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:16:58 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:16:58 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:16:58 | DEBUG | [6e58b9e0-6] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:16:58 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:16:58 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:16:58 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"27e557a1-3690-481c-a153-db1b37a44d33", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54840"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:16:58 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5db4e442', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.972E-4, duration(nanos)=197200.0, startTimeNanos=12288673241100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2e6c74b9} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"27e557a1-3690-481c-a153-db1b37a44d33", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54840"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:16:58 | TRACE | outbound route: bf5e1556, inbound: [6e58b9e0-6] 
2025-04-20 03:16:58 | DEBUG | Will instrument the response
2025-04-20 03:16:58 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5db4e442', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.082126, duration(nanos)=8.2126E7, startTimeNanos=12288673241100}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2e6c74b9}
2025-04-20 03:16:58 | TRACE | NettyWriteResponseFilter start inbound: bf5e1556, outbound: [6e58b9e0-6] 
2025-04-20 03:16:58 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:17:28 | TRACE | Weights attr: {}
2025-04-20 03:17:28 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:17:28 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:17:28 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:17:28 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:17:28 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:17:28 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:17:28 | DEBUG | [6e58b9e0-7] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:17:28 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:17:28 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:17:28 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"3ac0de77-0f0c-4def-b7b4-bb47799cfa18", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54840"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:17:28 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3784cddd', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.92E-5, duration(nanos)=99200.0, startTimeNanos=12317941207700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3739f086} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"3ac0de77-0f0c-4def-b7b4-bb47799cfa18", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54840"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:17:28 | TRACE | outbound route: bf5e1556, inbound: [6e58b9e0-7] 
2025-04-20 03:17:28 | DEBUG | Will instrument the response
2025-04-20 03:17:28 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3784cddd', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0667491, duration(nanos)=6.67491E7, startTimeNanos=12317941207700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3739f086}
2025-04-20 03:17:28 | TRACE | NettyWriteResponseFilter start inbound: bf5e1556, outbound: [6e58b9e0-7] 
2025-04-20 03:17:28 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:18:09 | TRACE | Weights attr: {}
2025-04-20 03:18:09 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:18:09 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:18:09 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:18:09 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:18:09 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:18:09 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:18:09 | DEBUG | [6e58b9e0-8] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:18:09 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:18:09 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:18:09 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"7689f387-56bc-47f1-909e-13ff9ff0058a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54840"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:18:09 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3d013bdf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.411E-4, duration(nanos)=141100.0, startTimeNanos=12359298025700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2f900819} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"7689f387-56bc-47f1-909e-13ff9ff0058a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54840"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:18:09 | TRACE | outbound route: bf5e1556, inbound: [6e58b9e0-8] 
2025-04-20 03:18:09 | DEBUG | Will instrument the response
2025-04-20 03:18:09 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3d013bdf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0713688, duration(nanos)=7.13688E7, startTimeNanos=12359298025700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@2f900819}
2025-04-20 03:18:09 | TRACE | NettyWriteResponseFilter start inbound: bf5e1556, outbound: [6e58b9e0-8] 
2025-04-20 03:18:09 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:19:38 | TRACE | Weights attr: {}
2025-04-20 03:19:38 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:19:38 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:19:38 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:19:38 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:19:38 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:19:38 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:19:38 | DEBUG | [731cd11a-9] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:19:38 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:19:38 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:19:38 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"e6e9c930-6716-4b60-ab27-758458e487d7", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54857"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:19:38 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3d7de67e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.58E-5, duration(nanos)=95800.0, startTimeNanos=12448018710600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@35c993ca} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"e6e9c930-6716-4b60-ab27-758458e487d7", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54857"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:19:38 | TRACE | outbound route: 2a182e82, inbound: [731cd11a-9] 
2025-04-20 03:19:38 | DEBUG | Will instrument the response
2025-04-20 03:19:38 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3d7de67e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1099674, duration(nanos)=1.099674E8, startTimeNanos=12448018710600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@35c993ca}
2025-04-20 03:19:38 | TRACE | NettyWriteResponseFilter start inbound: 2a182e82, outbound: [731cd11a-9] 
2025-04-20 03:19:38 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:22:41 | TRACE | Weights attr: {}
2025-04-20 03:22:41 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:22:41 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:22:41 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:22:41 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:22:41 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:22:41 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:22:41 | DEBUG | [e1a41905-10] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:22:41 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:22:41 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:22:41 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"d449fce3-f929-4ca4-86c5-460a5a2d8441", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54877"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:22:41 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@adf53f2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.735E-4, duration(nanos)=173500.0, startTimeNanos=12631311437000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@475b37ac} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"d449fce3-f929-4ca4-86c5-460a5a2d8441", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:54877"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:22:41 | TRACE | outbound route: 19b19022, inbound: [e1a41905-10] 
2025-04-20 03:22:41 | DEBUG | Will instrument the response
2025-04-20 03:22:41 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@adf53f2', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0885236, duration(nanos)=8.85236E7, startTimeNanos=12631311437000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@475b37ac}
2025-04-20 03:22:41 | TRACE | NettyWriteResponseFilter start inbound: 19b19022, outbound: [e1a41905-10] 
2025-04-20 03:22:41 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:28:32 | TRACE | Weights attr: {}
2025-04-20 03:28:32 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:28:32 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:28:32 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:28:32 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:28:32 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:28:32 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:28:32 | DEBUG | [341cff13-11] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:28:32 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:28:32 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:28:32 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b862d2c0-baac-446e-b195-2b8331999a3e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55052"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:28:32 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@66da0bc9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.75E-5, duration(nanos)=97500.0, startTimeNanos=12981871466800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@77a1c8ea} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b862d2c0-baac-446e-b195-2b8331999a3e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55052"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:28:32 | TRACE | outbound route: 23bb2a30, inbound: [341cff13-11] 
2025-04-20 03:28:32 | DEBUG | Will instrument the response
2025-04-20 03:28:32 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@66da0bc9', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.5768994, duration(nanos)=5.768994E8, startTimeNanos=12981871466800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@77a1c8ea}
2025-04-20 03:28:32 | TRACE | NettyWriteResponseFilter start inbound: 23bb2a30, outbound: [341cff13-11] 
2025-04-20 03:28:32 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:30:58 | TRACE | Weights attr: {}
2025-04-20 03:30:58 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:30:58 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:30:58 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:30:58 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:30:58 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:30:58 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:30:58 | DEBUG | [9384d5bf-12] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:30:58 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:30:58 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:30:58 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"4529d799-a903-4d12-ab34-f1a7f738dd75", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55066"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:30:58 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7eeb4a25', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.61E-5, duration(nanos)=86100.0, startTimeNanos=13128095562300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4a0049e4} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"4529d799-a903-4d12-ab34-f1a7f738dd75", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55066"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:30:58 | TRACE | outbound route: 99e57e43, inbound: [9384d5bf-12] 
2025-04-20 03:30:58 | DEBUG | Will instrument the response
2025-04-20 03:30:58 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7eeb4a25', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1051239, duration(nanos)=1.051239E8, startTimeNanos=13128095562300}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4a0049e4}
2025-04-20 03:30:58 | TRACE | NettyWriteResponseFilter start inbound: 99e57e43, outbound: [9384d5bf-12] 
2025-04-20 03:30:58 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:35:08 | TRACE | Weights attr: {}
2025-04-20 03:35:08 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:35:08 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:35:08 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:35:08 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:35:08 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:35:08 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:35:08 | DEBUG | [9df34dbe-13] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:35:08 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:35:08 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:35:08 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b2aadde7-522e-47a3-a8f7-d35f0a1dbf4a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55092"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:35:08 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2fe71504', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.945E-4, duration(nanos)=194500.0, startTimeNanos=13378658508400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@564984f1} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b2aadde7-522e-47a3-a8f7-d35f0a1dbf4a", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55092"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:35:08 | TRACE | outbound route: 0ae784a7, inbound: [9df34dbe-13] 
2025-04-20 03:35:08 | DEBUG | Will instrument the response
2025-04-20 03:35:08 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2fe71504', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1216932, duration(nanos)=1.216932E8, startTimeNanos=13378658508400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@564984f1}
2025-04-20 03:35:08 | TRACE | NettyWriteResponseFilter start inbound: 0ae784a7, outbound: [9df34dbe-13] 
2025-04-20 03:35:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 03:50:21 | TRACE | Weights attr: {}
2025-04-20 03:50:21 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:50:21 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:50:21 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:50:21 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 03:50:21 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 03:50:21 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 03:50:21 | DEBUG | [9a3cca7f-14] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 03:50:21 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 03:50:21 | TRACE | RouteToRequestUrlFilter start
2025-04-20 03:50:21 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ae9147e4-7798-4121-94e6-d0e2ab6de3c0", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55168"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:50:21 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@e6aa37d', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.055E-4, duration(nanos)=105500.0, startTimeNanos=14290906213800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1092034b} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ae9147e4-7798-4121-94e6-d0e2ab6de3c0", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55168"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 03:50:21 | TRACE | outbound route: 00f6a2b2, inbound: [9a3cca7f-14] 
2025-04-20 03:50:21 | DEBUG | Will instrument the response
2025-04-20 03:50:21 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@e6aa37d', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.2946082, duration(nanos)=2.946082E8, startTimeNanos=14290906213800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1092034b}
2025-04-20 03:50:21 | TRACE | NettyWriteResponseFilter start inbound: 00f6a2b2, outbound: [9a3cca7f-14] 
2025-04-20 03:50:21 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:01:42 | TRACE | Weights attr: {}
2025-04-20 04:01:42 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:01:42 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:01:42 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:01:42 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:01:42 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:01:42 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:01:42 | DEBUG | [c40345d3-15] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:01:42 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:01:42 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:01:42 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"96ea832a-2e5f-40ec-8267-6e7bf28a8ed8", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55343"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:01:42 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@629411aa', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.377E-4, duration(nanos)=137700.0, startTimeNanos=14972308330700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1b8b738a} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"96ea832a-2e5f-40ec-8267-6e7bf28a8ed8", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55343"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:01:42 | TRACE | outbound route: 117c01e6, inbound: [c40345d3-15] 
2025-04-20 04:01:43 | DEBUG | Will instrument the response
2025-04-20 04:01:43 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@629411aa', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.0262691, duration(nanos)=1.0262691E9, startTimeNanos=14972308330700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1b8b738a}
2025-04-20 04:01:43 | TRACE | NettyWriteResponseFilter start inbound: 117c01e6, outbound: [c40345d3-15] 
2025-04-20 04:01:43 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:03:17 | TRACE | Weights attr: {}
2025-04-20 04:03:17 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:03:17 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:03:17 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:03:17 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:03:17 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:03:17 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:03:17 | DEBUG | [3e435e4b-16] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:03:17 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:03:17 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:03:17 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"4c1d644b-87ac-4231-a744-0d943dd15d89", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55360"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:03:17 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7aa5d07f', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.356E-4, duration(nanos)=135600.0, startTimeNanos=15066842413500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3222f9a6} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"4c1d644b-87ac-4231-a744-0d943dd15d89", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55360"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:03:17 | TRACE | outbound route: 96a9f024, inbound: [3e435e4b-16] 
2025-04-20 04:03:17 | DEBUG | Will instrument the response
2025-04-20 04:03:17 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7aa5d07f', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0998132, duration(nanos)=9.98132E7, startTimeNanos=15066842413500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3222f9a6}
2025-04-20 04:03:17 | TRACE | NettyWriteResponseFilter start inbound: 96a9f024, outbound: [3e435e4b-16] 
2025-04-20 04:03:17 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:05:15 | TRACE | Weights attr: {}
2025-04-20 04:05:15 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:05:15 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:05:15 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:05:15 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:05:15 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:05:15 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:05:15 | DEBUG | [702b575c-17] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:05:15 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:05:15 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:05:15 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"5b070ce5-cdf1-400a-b898-ab94ab645d93", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55375"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:05:15 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6663454', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.199E-4, duration(nanos)=119900.0, startTimeNanos=15185535244500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1c924665} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"5b070ce5-cdf1-400a-b898-ab94ab645d93", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55375"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:05:15 | TRACE | outbound route: 17319867, inbound: [702b575c-17] 
2025-04-20 04:05:15 | DEBUG | Will instrument the response
2025-04-20 04:05:15 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6663454', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.2216414, duration(nanos)=2.216414E8, startTimeNanos=15185535244500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1c924665}
2025-04-20 04:05:15 | TRACE | NettyWriteResponseFilter start inbound: 17319867, outbound: [702b575c-17] 
2025-04-20 04:05:15 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:06:14 | TRACE | Weights attr: {}
2025-04-20 04:06:14 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:06:14 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:06:14 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:06:14 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:06:14 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:06:14 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:06:14 | DEBUG | [702b575c-18] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:06:14 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:06:14 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:06:14 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"44d18de3-eb64-403c-a715-44cb51a30754", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55375"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:06:14 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@25565a68', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.0E-5, duration(nanos)=80000.0, startTimeNanos=15244430948600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@25de9dd2} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"44d18de3-eb64-403c-a715-44cb51a30754", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55375"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:06:14 | TRACE | outbound route: 17319867, inbound: [702b575c-18] 
2025-04-20 04:06:14 | DEBUG | Will instrument the response
2025-04-20 04:06:14 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@25565a68', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0966835, duration(nanos)=9.66835E7, startTimeNanos=15244430948600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@25de9dd2}
2025-04-20 04:06:14 | TRACE | NettyWriteResponseFilter start inbound: 17319867, outbound: [702b575c-18] 
2025-04-20 04:06:14 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:08:17 | TRACE | Weights attr: {}
2025-04-20 04:08:17 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:08:17 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:08:17 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:08:17 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:08:17 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:08:17 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:08:17 | DEBUG | [16dea460-19] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:08:17 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:08:17 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:08:17 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"37b7f27a-e033-450c-b93f-0fbb9d0d8b02", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55406"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:08:17 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1165ceaf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.252E-4, duration(nanos)=125200.0, startTimeNanos=15367498031800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5132f82a} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"37b7f27a-e033-450c-b93f-0fbb9d0d8b02", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55406"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:08:17 | TRACE | outbound route: e7e789ac, inbound: [16dea460-19] 
2025-04-20 04:08:17 | DEBUG | Will instrument the response
2025-04-20 04:08:17 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1165ceaf', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1308085, duration(nanos)=1.308085E8, startTimeNanos=15367498031800}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5132f82a}
2025-04-20 04:08:17 | TRACE | NettyWriteResponseFilter start inbound: e7e789ac, outbound: [16dea460-19] 
2025-04-20 04:08:17 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:13:11 | TRACE | Weights attr: {}
2025-04-20 04:13:11 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:11 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:11 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:11 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:11 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:13:11 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:13:11 | DEBUG | [e63418b6-20] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:13:11 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:13:11 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:13:11 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"870a18f6-2ee0-493a-ad1e-ed0a388d020e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55553"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:13:11 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7f91fa20', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=3.823E-4, duration(nanos)=382300.0, startTimeNanos=15661418867600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5adbc3bd} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"870a18f6-2ee0-493a-ad1e-ed0a388d020e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55553"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:13:11 | TRACE | outbound route: 913c0120, inbound: [e63418b6-20] 
2025-04-20 04:13:12 | DEBUG | Will instrument the response
2025-04-20 04:13:12 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7f91fa20', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.8060382, duration(nanos)=8.060382E8, startTimeNanos=15661418867600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5adbc3bd}
2025-04-20 04:13:12 | TRACE | NettyWriteResponseFilter start inbound: 913c0120, outbound: [e63418b6-20] 
2025-04-20 04:13:12 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:13:26 | TRACE | Weights attr: {}
2025-04-20 04:13:26 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:26 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:26 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:26 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:26 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:13:26 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:13:26 | DEBUG | [e63418b6-21] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:13:26 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:13:26 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:13:26 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"78926e2b-0808-4b1f-b2db-2441b0968b83", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55553"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:13:26 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@59d3501e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.871E-4, duration(nanos)=187100.0, startTimeNanos=15676167501700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@57fc842f} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"78926e2b-0808-4b1f-b2db-2441b0968b83", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55553"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:13:26 | TRACE | outbound route: 913c0120, inbound: [e63418b6-21] 
2025-04-20 04:13:26 | DEBUG | Will instrument the response
2025-04-20 04:13:26 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@59d3501e', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.117614, duration(nanos)=1.17614E8, startTimeNanos=15676167501700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@57fc842f}
2025-04-20 04:13:26 | TRACE | NettyWriteResponseFilter start inbound: 913c0120, outbound: [e63418b6-21] 
2025-04-20 04:13:26 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:13:35 | TRACE | Weights attr: {}
2025-04-20 04:13:35 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:35 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:35 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:35 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:13:35 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:13:35 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:13:35 | DEBUG | [e63418b6-22] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:13:35 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:13:36 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:13:36 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b4e7e19e-3e17-4b54-b38e-12e8eff64c39", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55553"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:13:36 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@47688d52', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.45E-5, duration(nanos)=94500.0, startTimeNanos=15685889018200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@50fa0acd} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"b4e7e19e-3e17-4b54-b38e-12e8eff64c39", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55553"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:13:36 | TRACE | outbound route: 913c0120, inbound: [e63418b6-22] 
2025-04-20 04:13:36 | DEBUG | Will instrument the response
2025-04-20 04:13:36 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@47688d52', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1053752, duration(nanos)=1.053752E8, startTimeNanos=15685889018200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@50fa0acd}
2025-04-20 04:13:36 | TRACE | NettyWriteResponseFilter start inbound: 913c0120, outbound: [e63418b6-22] 
2025-04-20 04:13:37 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:21:03 | TRACE | Weights attr: {}
2025-04-20 04:21:03 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:21:03 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:21:03 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:21:03 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:21:03 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:21:03 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:21:03 | DEBUG | [ca7f394e-23] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:21:03 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:21:03 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:21:03 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"c30891c2-16fa-4ec7-b7d2-61b6c3981a88", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55596"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:21:03 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@598cf70', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.94E-5, duration(nanos)=89400.0, startTimeNanos=16132826941700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@43ad9441} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"c30891c2-16fa-4ec7-b7d2-61b6c3981a88", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55596"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:21:03 | TRACE | outbound route: 9445e3a2, inbound: [ca7f394e-23] 
2025-04-20 04:21:03 | DEBUG | Will instrument the response
2025-04-20 04:21:03 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@598cf70', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1237902, duration(nanos)=1.237902E8, startTimeNanos=16132826941700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@43ad9441}
2025-04-20 04:21:03 | TRACE | NettyWriteResponseFilter start inbound: 9445e3a2, outbound: [ca7f394e-23] 
2025-04-20 04:21:03 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:30:17 | TRACE | Weights attr: {}
2025-04-20 04:30:17 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:30:17 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:30:17 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:30:17 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:30:17 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:30:17 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:30:17 | DEBUG | [eecd3b9a-24] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:30:17 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:30:17 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:30:17 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a8692449-394f-4d49-af00-deb39cc91e78", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55640"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:30:17 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3e0c2d31', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.49E-4, duration(nanos)=149000.0, startTimeNanos=16687319034900}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3a4ec766} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a8692449-394f-4d49-af00-deb39cc91e78", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55640"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:30:22 | DEBUG | An exception occurred and observation was not previously stopped, will stop it. The exception was [io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:8085]
2025-04-20 04:30:24 | ERROR | [eecd3b9a-24]  500 Server Error for HTTP POST "/sagas/api/v1/withdrawal/start"
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/127.0.0.1:8085
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoError] :
	reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
Error has been observed at the following site(s):
	*__FluxOnErrorResume$ResumeSubscriber.onError ⇢ at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:576)
	*__________________________Mono.onErrorResume ⇢ at reactor.netty.transport.TransportConnector.lambda$connect$6(TransportConnector.java:166)
	*________________________________Mono.flatMap ⇢ at reactor.netty.transport.TransportConnector.connect(TransportConnector.java:165)
	*_________________________________Mono.create ⇢ at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator.connectChannel(DefaultPooledConnectionProvider.java:537)
	*_________________________________Mono.create ⇢ at reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:130)
	*_________________________________Mono.create ⇢ at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:211)
	|_                             Mono.retryWhen ⇢ at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:282)
	*______________________________Flux.concatMap ⇢ at reactor.util.retry.RetrySpec.lambda$generateCompanion$6(RetrySpec.java:360)
	|_                           Flux.onErrorStop ⇢ at reactor.util.retry.RetrySpec.lambda$generateCompanion$6(RetrySpec.java:379)
	*________________________Flux.deferContextual ⇢ at reactor.util.retry.RetrySpec.generateCompanion(RetrySpec.java:357)
	*____________________________Mono.flatMapMany ⇢ at reactor.netty.http.client.HttpClientFinalizer.responseConnection(HttpClientFinalizer.java:102)
	*____________________________Mono.flatMapMany ⇢ at org.springframework.cloud.gateway.filter.NettyRoutingFilter.filter(NettyRoutingFilter.java:134)
	*___________________________________Flux.then ⇢ at org.springframework.cloud.gateway.filter.NettyRoutingFilter.filter(NettyRoutingFilter.java:200)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.cloud.gateway.filter.GatewayMetricsFilter.filter(GatewayMetricsFilter.java:76)
	|_                             Mono.doOnError ⇢ at org.springframework.cloud.gateway.filter.GatewayMetricsFilter.filter(GatewayMetricsFilter.java:77)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*___________________________________Mono.then ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:69)
	|_                            Mono.doOnCancel ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:101)
	|_                             Mono.doOnError ⇢ at org.springframework.cloud.gateway.filter.NettyWriteResponseFilter.filter(NettyWriteResponseFilter.java:102)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	|_                             Mono.doFinally ⇢ at org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter.filter(RemoveCachedBodyFilter.java:29)
	*__________________________________Mono.defer ⇢ at org.springframework.cloud.gateway.handler.FilteringWebHandler$DefaultGatewayFilterChain.filter(FilteringWebHandler.java:154)
	*___________________________________Mono.then ⇢ at org.springframework.web.reactive.result.SimpleHandlerAdapter.handle(SimpleHandlerAdapter.java:46)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.reactive.DispatcherHandler.handleResultMono(DispatcherHandler.java:168)
	|_                               Mono.flatMap ⇢ at org.springframework.web.reactive.DispatcherHandler.handleResultMono(DispatcherHandler.java:172)
	*__________________________________Mono.error ⇢ at org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter.handleException(RequestMappingHandlerAdapter.java:340)
	*________________________________Mono.flatMap ⇢ at org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:154)
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                                 checkpoint ⇢ com.project.apigateway.filter.GlobalCorsFilter$$Lambda/0x000001579974eaf0 [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                                 checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:560)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:561)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:562)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$WebFilterObservation$SimpleWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:566)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:351)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:352)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$2(ObservationWebFilterChainDecorator.java:353)
	*________________________Mono.deferContextual ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator.lambda$wrapSecured$1(ObservationWebFilterChainDecorator.java:76)
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*__________________________Mono.switchIfEmpty ⇢ at org.springframework.security.web.server.authorization.AuthorizationWebFilter.filter(AuthorizationWebFilter.java:56)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ AuthorizationWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                         Mono.onErrorResume ⇢ at org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter.filter(ExceptionTranslationWebFilter.java:53)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*___________________________________Mono.then ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)
	*__________________________Mono.switchIfEmpty ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)
	|_                                   Mono.map ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:64)
	|_                               Mono.flatMap ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:65)
	|_                               Mono.flatMap ⇢ at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:66)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ LogoutWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter.filter(ServerRequestCacheWebFilter.java:41)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.context.ReactorContextWebFilter.filter(ReactorContextWebFilter.java:48)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ ReactorContextWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ CorsWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                                 checkpoint ⇢ HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter.filter(ServerHttpSecurity.java:4047)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)
	|_                           Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:367)
	|_                            Mono.doOnCancel ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:368)
	|_                             Mono.doOnError ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:369)
	|_                          Mono.contextWrite ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$AroundWebFilterObservation$SimpleAroundWebFilterObservation.lambda$wrap$6(ObservationWebFilterChainDecorator.java:373)
	*________________________Mono.deferContextual ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.filter(ObservationWebFilterChainDecorator.java:193)
	|_                                 checkpoint ⇢ ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilterChain.filter(ObservationWebFilterChainDecorator.java:152)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filterFirewalledExchange(WebFilterChainProxy.java:78)
	*________________________________Mono.flatMap ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:65)
	|_                         Mono.onErrorResume ⇢ at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:66)
	|_                                 checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                          Mono.contextWrite ⇢ at com.project.apigateway.security.JwtAuthenticationFilter.filter(JwtAuthenticationFilter.java:53)
	|_                                 checkpoint ⇢ com.project.apigateway.security.JwtAuthenticationFilter [DefaultWebFilterChain]
	*__________________________________Mono.defer ⇢ at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:106)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	|_                         Mono.onErrorResume ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:85)
	|_                             Mono.doOnError ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:84)
	*__________________________________Mono.error ⇢ at org.springframework.web.server.handler.ExceptionHandlingWebHandler$CheckpointInsertingHandler.handle(ExceptionHandlingWebHandler.java:106)
	|_                                 checkpoint ⇢ HTTP POST "/sagas/api/v1/withdrawal/start" [ExceptionHandlingWebHandler]
	*__________________________________Mono.error ⇢ at org.springframework.cloud.gateway.filter.headers.observation.ObservationClosingWebExceptionHandler.handle(ObservationClosingWebExceptionHandler.java:53)
Original Stack Trace:
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:1062)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-20 04:30:26 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-20 04:38:56 | TRACE | Weights attr: {}
2025-04-20 04:38:56 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:38:56 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:38:56 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:38:56 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:38:56 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:38:56 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:38:56 | DEBUG | [1a40471a-25] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:38:56 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:38:56 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:38:56 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"4b65ea0a-a670-4393-aae9-e95187a54509", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56032"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:38:56 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4851515a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.95E-5, duration(nanos)=89500.0, startTimeNanos=17205828435000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@b41bbee} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"4b65ea0a-a670-4393-aae9-e95187a54509", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56032"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:38:56 | TRACE | outbound route: 0be9a382, inbound: [1a40471a-25] 
2025-04-20 04:38:57 | DEBUG | Will instrument the response
2025-04-20 04:38:57 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4851515a', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.2819493, duration(nanos)=1.2819493E9, startTimeNanos=17205828435000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@b41bbee}
2025-04-20 04:38:57 | TRACE | NettyWriteResponseFilter start inbound: 0be9a382, outbound: [1a40471a-25] 
2025-04-20 04:38:57 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:38:58 | TRACE | Weights attr: {}
2025-04-20 04:38:58 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:38:58 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:38:58 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:38:58 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:38:58 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:38:58 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:38:58 | DEBUG | [1a40471a-26] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:38:58 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:38:58 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:38:58 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"72b53178-cd24-4890-a2d7-8e5e6cd0c788", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56032"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:38:58 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7010f675', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.064E-4, duration(nanos)=106400.0, startTimeNanos=17207894113500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7391e738} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"72b53178-cd24-4890-a2d7-8e5e6cd0c788", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56032"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:38:58 | TRACE | outbound route: 0be9a382, inbound: [1a40471a-26] 
2025-04-20 04:39:03 | DEBUG | Will instrument the response
2025-04-20 04:39:03 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7010f675', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.4734729, duration(nanos)=5.4734729E9, startTimeNanos=17207894113500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7391e738}
2025-04-20 04:39:03 | TRACE | NettyWriteResponseFilter start inbound: 0be9a382, outbound: [1a40471a-26] 
2025-04-20 04:39:03 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:42:40 | TRACE | Weights attr: {}
2025-04-20 04:42:40 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:42:40 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:42:40 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:42:40 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:42:40 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:42:40 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:42:40 | DEBUG | [ba583e06-27] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:42:40 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:42:40 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:42:40 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"737b26f6-350a-4539-bad4-bcf1d82b9193", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56299"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:42:40 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@65d0b085', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.019E-4, duration(nanos)=101900.0, startTimeNanos=17430735614000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4a702fe2} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"737b26f6-350a-4539-bad4-bcf1d82b9193", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56299"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:42:40 | TRACE | outbound route: 5929a070, inbound: [ba583e06-27] 
2025-04-20 04:42:41 | DEBUG | Will instrument the response
2025-04-20 04:42:41 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@65d0b085', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.7909405, duration(nanos)=7.909405E8, startTimeNanos=17430735614000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4a702fe2}
2025-04-20 04:42:41 | TRACE | NettyWriteResponseFilter start inbound: 5929a070, outbound: [ba583e06-27] 
2025-04-20 04:42:41 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:43:12 | TRACE | Weights attr: {}
2025-04-20 04:43:12 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:43:12 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:43:12 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:43:12 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:43:12 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:43:12 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:43:12 | DEBUG | [ba583e06-28] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:43:12 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:43:12 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:43:12 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"16c53848-9ec8-4707-8983-7d44afee7cda", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56299"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:43:12 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2b0a88b4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.58E-5, duration(nanos)=65800.0, startTimeNanos=17462401443000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@67b31f44} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"16c53848-9ec8-4707-8983-7d44afee7cda", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56299"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:43:12 | TRACE | outbound route: 5929a070, inbound: [ba583e06-28] 
2025-04-20 04:43:12 | DEBUG | Will instrument the response
2025-04-20 04:43:12 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2b0a88b4', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0992938, duration(nanos)=9.92938E7, startTimeNanos=17462401443000}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@67b31f44}
2025-04-20 04:43:12 | TRACE | NettyWriteResponseFilter start inbound: 5929a070, outbound: [ba583e06-28] 
2025-04-20 04:43:12 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:47:19 | TRACE | Weights attr: {}
2025-04-20 04:47:19 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:47:19 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:47:19 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:47:19 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:47:19 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:47:19 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:47:19 | DEBUG | [a9b2da10-29] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:47:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:47:19 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:47:19 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"7e439d7a-6bee-4d42-a9c9-4ac79835fc65", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56330"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:47:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@62dfeb18', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.57E-5, duration(nanos)=75700.0, startTimeNanos=17708975517600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@64c7b266} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"7e439d7a-6bee-4d42-a9c9-4ac79835fc65", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56330"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:47:19 | TRACE | outbound route: d69e9120, inbound: [a9b2da10-29] 
2025-04-20 04:47:19 | DEBUG | Will instrument the response
2025-04-20 04:47:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@62dfeb18', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1669789, duration(nanos)=1.669789E8, startTimeNanos=17708975517600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@64c7b266}
2025-04-20 04:47:19 | TRACE | NettyWriteResponseFilter start inbound: d69e9120, outbound: [a9b2da10-29] 
2025-04-20 04:47:19 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:47:44 | TRACE | Weights attr: {}
2025-04-20 04:47:44 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:47:44 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:47:44 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:47:44 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:47:44 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:47:44 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:47:44 | DEBUG | [a9b2da10-30] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:47:44 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:47:44 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:47:44 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a24fab88-19ae-4c3f-af76-77ebee04cbd5", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56330"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:47:44 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2b969fca', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.76E-5, duration(nanos)=57600.0, startTimeNanos=17733827309600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5cc27793} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a24fab88-19ae-4c3f-af76-77ebee04cbd5", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56330"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:47:44 | TRACE | outbound route: d69e9120, inbound: [a9b2da10-30] 
2025-04-20 04:47:44 | DEBUG | Will instrument the response
2025-04-20 04:47:44 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2b969fca', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1092449, duration(nanos)=1.092449E8, startTimeNanos=17733827309600}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5cc27793}
2025-04-20 04:47:44 | TRACE | NettyWriteResponseFilter start inbound: d69e9120, outbound: [a9b2da10-30] 
2025-04-20 04:47:44 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:55:17 | TRACE | Weights attr: {}
2025-04-20 04:55:17 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:55:17 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:55:17 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:55:17 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:55:17 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:55:17 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:55:17 | DEBUG | [d7a9b2c6-31] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:55:17 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:55:17 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:55:17 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"beb54c61-7465-4b7a-96c9-7894c67818ac", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56390"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:55:17 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@119ab790', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.75E-5, duration(nanos)=87500.0, startTimeNanos=18187070715700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5ade957e} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"beb54c61-7465-4b7a-96c9-7894c67818ac", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56390"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:55:17 | TRACE | outbound route: cf79952c, inbound: [d7a9b2c6-31] 
2025-04-20 04:55:17 | DEBUG | Will instrument the response
2025-04-20 04:55:17 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@119ab790', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1256875, duration(nanos)=1.256875E8, startTimeNanos=18187070715700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5ade957e}
2025-04-20 04:55:17 | TRACE | NettyWriteResponseFilter start inbound: cf79952c, outbound: [d7a9b2c6-31] 
2025-04-20 04:55:17 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:55:42 | TRACE | Weights attr: {}
2025-04-20 04:55:42 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:55:42 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:55:42 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:55:42 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:55:42 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:55:42 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:55:42 | DEBUG | [d7a9b2c6-32] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:55:42 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:55:42 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:55:42 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"1d53fcf3-43f1-4c2f-aca4-c94abd8e2617", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56390"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:55:42 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@74875c1c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.07E-4, duration(nanos)=207000.0, startTimeNanos=18212555533200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@b372510} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"1d53fcf3-43f1-4c2f-aca4-c94abd8e2617", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56390"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:55:42 | TRACE | outbound route: cf79952c, inbound: [d7a9b2c6-32] 
2025-04-20 04:55:42 | DEBUG | Will instrument the response
2025-04-20 04:55:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@74875c1c', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1116989, duration(nanos)=1.116989E8, startTimeNanos=18212555533200}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@b372510}
2025-04-20 04:55:42 | TRACE | NettyWriteResponseFilter start inbound: cf79952c, outbound: [d7a9b2c6-32] 
2025-04-20 04:55:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:58:25 | TRACE | Weights attr: {}
2025-04-20 04:58:25 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:58:25 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:58:25 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:58:25 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:58:25 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:58:25 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:58:25 | DEBUG | [e1982229-33] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:58:25 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:58:25 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:58:25 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ecd9e679-9253-4612-b522-3bb945943e67", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56414"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:58:25 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@28115322', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.359E-4, duration(nanos)=135900.0, startTimeNanos=18375260178700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@719c80c4} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"ecd9e679-9253-4612-b522-3bb945943e67", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56414"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:58:25 | TRACE | outbound route: fcd5b900, inbound: [e1982229-33] 
2025-04-20 04:58:25 | DEBUG | Will instrument the response
2025-04-20 04:58:25 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@28115322', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.143801, duration(nanos)=1.43801E8, startTimeNanos=18375260178700}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@719c80c4}
2025-04-20 04:58:25 | TRACE | NettyWriteResponseFilter start inbound: fcd5b900, outbound: [e1982229-33] 
2025-04-20 04:58:25 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 04:59:48 | TRACE | Weights attr: {}
2025-04-20 04:59:48 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:59:48 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:59:48 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:59:48 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 04:59:48 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 04:59:48 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 04:59:48 | DEBUG | [b69f611b-34] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 04:59:48 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 04:59:48 | TRACE | RouteToRequestUrlFilter start
2025-04-20 04:59:48 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a742c304-7737-4956-9e72-fef293651c50", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56424"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:59:48 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3a8e6aec', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.98E-5, duration(nanos)=89800.0, startTimeNanos=18458716536400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@25f9cab8} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"a742c304-7737-4956-9e72-fef293651c50", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56424"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 04:59:48 | TRACE | outbound route: 89e95bb6, inbound: [b69f611b-34] 
2025-04-20 04:59:49 | DEBUG | Will instrument the response
2025-04-20 04:59:49 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@3a8e6aec', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1063588, duration(nanos)=1.063588E8, startTimeNanos=18458716536400}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@25f9cab8}
2025-04-20 04:59:49 | TRACE | NettyWriteResponseFilter start inbound: 89e95bb6, outbound: [b69f611b-34] 
2025-04-20 04:59:49 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 05:01:56 | TRACE | Weights attr: {}
2025-04-20 05:01:56 | TRACE | Pattern "[/users/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 05:01:56 | TRACE | Pattern "[/accounts/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 05:01:56 | TRACE | Pattern "[/trading/**]" does not match against value "/sagas/api/v1/withdrawal/start"
2025-04-20 05:01:56 | TRACE | Pattern "/sagas/**" matches against value "/sagas/api/v1/withdrawal/start"
2025-04-20 05:01:56 | DEBUG | Route matched: kafka-management-service-route
2025-04-20 05:01:56 | DEBUG | Mapping [Exchange: POST http://localhost:8080/sagas/api/v1/withdrawal/start] to Route{id='kafka-management-service-route', uri=http://localhost:8085, order=0, predicate=Paths: [/sagas/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-20 05:01:56 | DEBUG | [ad6a75e2-35] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@7a13ad55
2025-04-20 05:01:56 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@77ad2767}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@779448b8}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@680937c9}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@608c2042}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@40199d5e}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@e460ca1}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5693d1d2}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@7e84a52b}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@60e5eed0}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@411ae0d7}, order = 2147483647]]
2025-04-20 05:01:56 | TRACE | RouteToRequestUrlFilter start
2025-04-20 05:01:56 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"0e45dbcc-946a-4ac9-a93d-472e20a1107f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56432"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 05:01:56 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@142ece20', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0011896, duration(nanos)=1189600.0, startTimeNanos=18586144128500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3a75dcbe} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDUwNjk0NzcsImV4cCI6MTc0NTE1NTg3N30.zCZ50JKotgMqcDefpBsp0cPhQKE_1HtJubgt8zAg34Q", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"0e45dbcc-946a-4ac9-a93d-472e20a1107f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"225", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56432"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-20 05:01:56 | TRACE | outbound route: 54cc6039, inbound: [ad6a75e2-35] 
2025-04-20 05:01:56 | DEBUG | Will instrument the response
2025-04-20 05:01:56 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='POST', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='kafka-management-service-route', spring.cloud.gateway.route.uri='http://localhost:8085'], highCardinalityKeyValues=[http.uri='http://localhost:8080/sagas/api/v1/withdrawal/start'], map=[class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@142ece20', class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1283493, duration(nanos)=1.283493E8, startTimeNanos=18586144128500}'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3a75dcbe}
2025-04-20 05:01:56 | TRACE | NettyWriteResponseFilter start inbound: 54cc6039, outbound: [ad6a75e2-35] 
2025-04-20 05:01:56 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=POST),tag(httpStatusCode=201),tag(outcome=SUCCESSFUL),tag(routeId=kafka-management-service-route),tag(routeUri=http://localhost:8085),tag(status=CREATED)]
2025-04-20 05:06:43 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-20 05:06:43 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-20 05:06:43 | INFO  | Graceful shutdown complete
2025-04-20 05:06:44 | DEBUG | closeAsync()
2025-04-20 05:06:44 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-20 05:06:45 | DEBUG | closeAsync()
2025-04-20 05:06:45 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] closeAsync()
2025-04-20 05:06:46 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-20 05:06:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelInactive()
2025-04-20 05:06:46 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive()
2025-04-20 05:06:46 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-20 05:06:46 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2] deactivating endpoint handler
2025-04-20 05:06:47 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelInactive() done
2025-04-20 05:06:47 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelInactive() done
2025-04-20 05:06:47 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-20 05:06:47 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-20 05:06:47 | DEBUG | [channel=0x6a1d2ee1, /192.168.102.3:54578 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x1] channelUnregistered()
2025-04-20 05:06:47 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-20 05:06:47 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-20 05:06:47 | DEBUG | [channel=0x98c2ff01, /192.168.102.3:54583 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x2, chid=0x2] channelUnregistered()
2025-04-20 05:06:47 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@25df2014
