2025-04-03 01:05:37 | TRACE | Weights attr: {}
2025-04-03 01:05:38 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:05:38 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:05:38 | DEBUG | Route matched: account-service-route
2025-04-03 01:05:38 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:05:38 | DEBUG | [cdcfbba8-45] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:05:38 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:05:38 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:05:38 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"cb6a0641-63fc-4d96-a1c7-f46dc4dfc53c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55483"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:05:38 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0145926, duration(nanos)=1.45926E7, startTimeNanos=1142649399961900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@10e1e567'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4809adad} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"cb6a0641-63fc-4d96-a1c7-f46dc4dfc53c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55483"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:05:38 | TRACE | outbound route: 3c9638ad, inbound: [cdcfbba8-45] 
2025-04-03 01:12:32 | DEBUG | Will instrument the response
2025-04-03 01:12:32 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=414.2993775, duration(nanos)=4.142993775E11, startTimeNanos=1142649399961900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@10e1e567'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4809adad}
2025-04-03 01:12:32 | TRACE | NettyWriteResponseFilter start inbound: 3c9638ad, outbound: [cdcfbba8-45] 
2025-04-03 01:12:32 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 01:21:43 | TRACE | Weights attr: {}
2025-04-03 01:21:43 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:21:43 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:21:43 | DEBUG | Route matched: account-service-route
2025-04-03 01:21:43 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:21:43 | DEBUG | [6d8c2e35-46] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:21:43 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:21:43 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:21:43 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"19999507-84db-4e1f-81ae-c4f6f966d11f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55715"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:21:43 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.68E-5, duration(nanos)=86800.0, startTimeNanos=1143613889848200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1335d38a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@22e5e40d} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"19999507-84db-4e1f-81ae-c4f6f966d11f", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55715"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:21:43 | TRACE | outbound route: 03d66931, inbound: [6d8c2e35-46] 
2025-04-03 01:24:14 | DEBUG | Will instrument the response
2025-04-03 01:24:14 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=150.9312583, duration(nanos)=1.509312583E11, startTimeNanos=1143613889848200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1335d38a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@22e5e40d}
2025-04-03 01:24:14 | TRACE | NettyWriteResponseFilter start inbound: 03d66931, outbound: [6d8c2e35-46] 
2025-04-03 01:24:14 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 01:25:10 | TRACE | Weights attr: {}
2025-04-03 01:25:10 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:25:10 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:25:10 | DEBUG | Route matched: account-service-route
2025-04-03 01:25:10 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:25:10 | DEBUG | [18a00332-47] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:25:10 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:25:10 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:25:10 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"f030bff6-ac8b-4699-b028-e71612ed296c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55750"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:25:10 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.02E-5, duration(nanos)=80200.0, startTimeNanos=1143820882585200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6113e494'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@147f90a3} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"f030bff6-ac8b-4699-b028-e71612ed296c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55750"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:25:10 | TRACE | outbound route: 8665257e, inbound: [18a00332-47] 
2025-04-03 01:25:10 | DEBUG | Will instrument the response
2025-04-03 01:25:10 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.8021017, duration(nanos)=8.021017E8, startTimeNanos=1143820882585200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6113e494'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@147f90a3}
2025-04-03 01:25:10 | TRACE | NettyWriteResponseFilter start inbound: 8665257e, outbound: [18a00332-47] 
2025-04-03 01:25:10 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-03 01:26:49 | TRACE | Weights attr: {}
2025-04-03 01:26:49 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:26:49 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:26:49 | DEBUG | Route matched: account-service-route
2025-04-03 01:26:49 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:26:49 | DEBUG | [c9ccc69a-48] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:26:49 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:26:49 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:26:49 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"7b37a2b6-917e-404c-8286-155be752ee5b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55768"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:26:49 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.258E-4, duration(nanos)=425800.0, startTimeNanos=1143920036316800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@61ee47a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@212d1517} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"7b37a2b6-917e-404c-8286-155be752ee5b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55768"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:26:49 | TRACE | outbound route: 34d1d220, inbound: [c9ccc69a-48] 
2025-04-03 01:29:06 | DEBUG | Will instrument the response
2025-04-03 01:29:06 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=136.998785, duration(nanos)=1.36998785E11, startTimeNanos=1143920036316800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@61ee47a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@212d1517}
2025-04-03 01:29:06 | TRACE | NettyWriteResponseFilter start inbound: 34d1d220, outbound: [c9ccc69a-48] 
2025-04-03 01:29:06 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 01:42:43 | TRACE | Weights attr: {}
2025-04-03 01:42:43 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:42:43 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:42:43 | DEBUG | Route matched: account-service-route
2025-04-03 01:42:43 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:42:43 | DEBUG | [feb45068-49] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:42:43 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:42:43 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:42:43 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"bd097078-b78d-462c-b1ce-81ba5c1549fd", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55930"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:42:43 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.57E-5, duration(nanos)=65700.0, startTimeNanos=1144874556902200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6cc645db'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6927f92b} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"bd097078-b78d-462c-b1ce-81ba5c1549fd", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55930"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:42:43 | TRACE | outbound route: 7e29ef71, inbound: [feb45068-49] 
2025-04-03 01:44:34 | DEBUG | Will instrument the response
2025-04-03 01:44:34 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=110.9349636, duration(nanos)=1.109349636E11, startTimeNanos=1144874556902200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6cc645db'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6927f92b}
2025-04-03 01:44:34 | TRACE | NettyWriteResponseFilter start inbound: 7e29ef71, outbound: [feb45068-49] 
2025-04-03 01:44:34 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 01:45:21 | TRACE | Weights attr: {}
2025-04-03 01:45:21 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:45:21 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:45:21 | DEBUG | Route matched: account-service-route
2025-04-03 01:45:21 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:45:21 | DEBUG | [2cec9185-50] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:45:21 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:45:21 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:45:21 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"6b7e5afa-3b71-44d7-b26c-e228271d16b3", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55972"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:45:21 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.66E-5, duration(nanos)=66600.0, startTimeNanos=1145032301582400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7960a106'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@74a8f7ab} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"6b7e5afa-3b71-44d7-b26c-e228271d16b3", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:55972"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:45:21 | TRACE | outbound route: d17d6a2c, inbound: [2cec9185-50] 
2025-04-03 01:46:29 | DEBUG | Will instrument the response
2025-04-03 01:46:29 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=68.050036, duration(nanos)=6.8050036E10, startTimeNanos=1145032301582400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7960a106'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@74a8f7ab}
2025-04-03 01:46:29 | TRACE | NettyWriteResponseFilter start inbound: d17d6a2c, outbound: [2cec9185-50] 
2025-04-03 01:46:29 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 01:52:55 | TRACE | Weights attr: {}
2025-04-03 01:52:55 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:52:55 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:52:55 | DEBUG | Route matched: account-service-route
2025-04-03 01:52:55 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:52:55 | DEBUG | [a9f18f8e-51] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:52:55 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:52:55 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:52:55 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"aa30048b-9582-4406-b491-048185e1132c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56039"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:52:55 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.017E-4, duration(nanos)=101700.0, startTimeNanos=1145486416622500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6416d7ec'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@c84a945} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"aa30048b-9582-4406-b491-048185e1132c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56039"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:52:55 | TRACE | outbound route: 09a89ad6, inbound: [a9f18f8e-51] 
2025-04-03 01:54:07 | DEBUG | Will instrument the response
2025-04-03 01:54:07 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=72.1215246, duration(nanos)=7.21215246E10, startTimeNanos=1145486416622500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@6416d7ec'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@c84a945}
2025-04-03 01:54:07 | TRACE | NettyWriteResponseFilter start inbound: 09a89ad6, outbound: [a9f18f8e-51] 
2025-04-03 01:54:07 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 01:54:26 | TRACE | Weights attr: {}
2025-04-03 01:54:26 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:54:26 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:54:26 | DEBUG | Route matched: account-service-route
2025-04-03 01:54:26 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:54:26 | DEBUG | [eec60391-52] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:54:26 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:54:26 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:54:26 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"780f5235-e591-40de-816a-967df5cd9bb3", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56065"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:54:26 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.68E-5, duration(nanos)=66800.0, startTimeNanos=1145577444763600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@26e764ef'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6fab4889} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"780f5235-e591-40de-816a-967df5cd9bb3", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56065"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:54:26 | TRACE | outbound route: 09a89ad6, inbound: [eec60391-52] 
2025-04-03 01:54:43 | DEBUG | Will instrument the response
2025-04-03 01:54:43 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=16.9565486, duration(nanos)=1.69565486E10, startTimeNanos=1145577444763600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@26e764ef'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6fab4889}
2025-04-03 01:54:43 | TRACE | NettyWriteResponseFilter start inbound: 09a89ad6, outbound: [eec60391-52] 
2025-04-03 01:54:43 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 01:54:48 | TRACE | Weights attr: {}
2025-04-03 01:54:48 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:54:48 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:54:48 | DEBUG | Route matched: account-service-route
2025-04-03 01:54:48 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:54:48 | DEBUG | [eec60391-53] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:54:48 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:54:48 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:54:49 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"41f70084-6607-493c-b638-4283479d22d7", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56065"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:54:49 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.03E-5, duration(nanos)=70300.0, startTimeNanos=1145599817449100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@30baacfd'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6602e560} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"41f70084-6607-493c-b638-4283479d22d7", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56065"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:54:49 | TRACE | outbound route: 09a89ad6, inbound: [eec60391-53] 
2025-04-03 01:56:01 | DEBUG | Will instrument the response
2025-04-03 01:56:01 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=72.0201408, duration(nanos)=7.20201408E10, startTimeNanos=1145599817449100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@30baacfd'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6602e560}
2025-04-03 01:56:01 | TRACE | NettyWriteResponseFilter start inbound: 09a89ad6, outbound: [eec60391-53] 
2025-04-03 01:56:01 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 01:56:42 | TRACE | Weights attr: {}
2025-04-03 01:56:42 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:56:42 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:56:42 | DEBUG | Route matched: account-service-route
2025-04-03 01:56:42 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:56:42 | DEBUG | [0dbfbbfe-54] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:56:42 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:56:42 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:56:42 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"008ba05b-8f29-49bd-b58d-df6943aab918", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56102"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:56:42 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.78E-5, duration(nanos)=57800.0, startTimeNanos=1145713446323100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a3a20dc'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@699c819f} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"008ba05b-8f29-49bd-b58d-df6943aab918", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56102"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:56:42 | TRACE | outbound route: e7de57cf, inbound: [0dbfbbfe-54] 
2025-04-03 01:57:48 | TRACE | Weights attr: {}
2025-04-03 01:57:48 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:57:48 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:57:48 | DEBUG | Route matched: account-service-route
2025-04-03 01:57:48 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:57:48 | DEBUG | [a1cd5aa1-55] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:57:48 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:57:48 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:57:48 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"9d65b625-fb34-4035-96d2-6d9b037636c4", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56128"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:57:48 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.82E-5, duration(nanos)=68200.0, startTimeNanos=1145779422167400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@585a61e7'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@71bd3528} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"9d65b625-fb34-4035-96d2-6d9b037636c4", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56128"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:57:48 | TRACE | outbound route: 4889144f, inbound: [a1cd5aa1-55] 
2025-04-03 01:58:08 | DEBUG | Will instrument the response
2025-04-03 01:58:08 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=20.2114172, duration(nanos)=2.02114172E10, startTimeNanos=1145779422167400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@585a61e7'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@71bd3528}
2025-04-03 01:58:08 | TRACE | NettyWriteResponseFilter start inbound: 4889144f, outbound: [a1cd5aa1-55] 
2025-04-03 01:58:08 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 01:58:25 | TRACE | Weights attr: {}
2025-04-03 01:58:25 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:58:25 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 01:58:25 | DEBUG | Route matched: account-service-route
2025-04-03 01:58:25 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 01:58:25 | DEBUG | [a1cd5aa1-56] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 01:58:25 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 01:58:25 | TRACE | RouteToRequestUrlFilter start
2025-04-03 01:58:25 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"5f158a0f-74ae-48e2-ac54-0a97303a3ceb", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56128"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:58:25 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.229E-4, duration(nanos)=122900.0, startTimeNanos=1145816346415600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@8ed228'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1d531eca} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"5f158a0f-74ae-48e2-ac54-0a97303a3ceb", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56128"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 01:58:25 | TRACE | outbound route: ce52f0ef, inbound: [a1cd5aa1-56] 
2025-04-03 01:59:54 | DEBUG | Will instrument the response
2025-04-03 01:59:54 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=88.5605691, duration(nanos)=8.85605691E10, startTimeNanos=1145816346415600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@8ed228'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1d531eca}
2025-04-03 01:59:54 | TRACE | NettyWriteResponseFilter start inbound: ce52f0ef, outbound: [a1cd5aa1-56] 
2025-04-03 01:59:54 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 02:00:18 | TRACE | Weights attr: {}
2025-04-03 02:00:18 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 02:00:18 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/me/get"
2025-04-03 02:00:18 | DEBUG | Route matched: account-service-route
2025-04-03 02:00:18 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/me/get] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:00:18 | DEBUG | [8c24459c-57] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:00:18 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:00:18 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:00:18 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"924ee4e4-02b2-4673-abdb-695591344ebd", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56187"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:00:18 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.744E-4, duration(nanos)=274400.0, startTimeNanos=1145929066965900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a1dcfcd'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3f255d37} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"924ee4e4-02b2-4673-abdb-695591344ebd", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56187"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:00:18 | TRACE | outbound route: b28f29f5, inbound: [8c24459c-57] 
2025-04-03 02:00:32 | DEBUG | Will instrument the response
2025-04-03 02:00:32 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/me/get'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=13.9717291, duration(nanos)=1.39717291E10, startTimeNanos=1145929066965900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5a1dcfcd'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@3f255d37}
2025-04-03 02:00:32 | TRACE | NettyWriteResponseFilter start inbound: b28f29f5, outbound: [8c24459c-57] 
2025-04-03 02:00:32 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 02:02:48 | TRACE | Weights attr: {}
2025-04-03 02:02:48 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319"
2025-04-03 02:02:48 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319"
2025-04-03 02:02:48 | DEBUG | Route matched: account-service-route
2025-04-03 02:02:48 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:02:48 | DEBUG | [a3a51d5e-58] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:02:48 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:02:48 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:02:48 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"2f524e12-86b6-4858-bba7-2190bd6953a0", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56225"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:02:48 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.38E-5, duration(nanos)=53800.0, startTimeNanos=1146078967991400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@415a2367'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4c47c2aa} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"2f524e12-86b6-4858-bba7-2190bd6953a0", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56225"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:02:48 | TRACE | outbound route: 53724cb9, inbound: [a3a51d5e-58] 
2025-04-03 02:02:48 | DEBUG | Will instrument the response
2025-04-03 02:02:48 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1814529, duration(nanos)=1.814529E8, startTimeNanos=1146078967991400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@415a2367'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4c47c2aa}
2025-04-03 02:02:48 | TRACE | NettyWriteResponseFilter start inbound: 53724cb9, outbound: [a3a51d5e-58] 
2025-04-03 02:02:48 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-03 02:05:32 | TRACE | Weights attr: {}
2025-04-03 02:05:32 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319"
2025-04-03 02:05:32 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319"
2025-04-03 02:05:32 | DEBUG | Route matched: account-service-route
2025-04-03 02:05:32 | DEBUG | Mapping [Exchange: GET http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:05:32 | DEBUG | [9c144f3a-59] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:05:32 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:05:32 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:05:32 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"3dcff491-6d8b-4075-a2b8-1500adb9006d", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56262"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:05:32 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.2E-5, duration(nanos)=82000.0, startTimeNanos=1146242874613800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2aa9051'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1aa6e159} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"3dcff491-6d8b-4075-a2b8-1500adb9006d", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56262"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:05:32 | TRACE | outbound route: 66c95354, inbound: [9c144f3a-59] 
2025-04-03 02:05:33 | DEBUG | Will instrument the response
2025-04-03 02:05:33 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.0177617, duration(nanos)=1.0177617E9, startTimeNanos=1146242874613800}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2aa9051'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1aa6e159}
2025-04-03 02:05:33 | TRACE | NettyWriteResponseFilter start inbound: 66c95354, outbound: [9c144f3a-59] 
2025-04-03 02:05:33 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 02:10:16 | TRACE | Weights attr: {}
2025-04-03 02:10:16 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:10:16 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:10:16 | DEBUG | Route matched: account-service-route
2025-04-03 02:10:16 | DEBUG | Mapping [Exchange: PUT http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:10:16 | DEBUG | [cfe98d77-60] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:10:16 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:10:16 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:10:16 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"558da2d1-9dec-4261-8229-7e42ad02b71c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"134", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56311"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:10:16 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.1E-5, duration(nanos)=71000.0, startTimeNanos=1146526852783300}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4e4a8a22'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4bea786f} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"558da2d1-9dec-4261-8229-7e42ad02b71c", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"134", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56311"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:10:16 | TRACE | outbound route: bb1adc9a, inbound: [cfe98d77-60] 
2025-04-03 02:10:16 | DEBUG | Will instrument the response
2025-04-03 02:10:16 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0841451, duration(nanos)=8.41451E7, startTimeNanos=1146526852783300}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4e4a8a22'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@4bea786f}
2025-04-03 02:10:16 | TRACE | NettyWriteResponseFilter start inbound: bb1adc9a, outbound: [cfe98d77-60] 
2025-04-03 02:10:16 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=PUT),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-03 02:10:57 | TRACE | Weights attr: {}
2025-04-03 02:10:57 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:10:57 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:10:57 | DEBUG | Route matched: account-service-route
2025-04-03 02:10:57 | DEBUG | Mapping [Exchange: PUT http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:10:57 | DEBUG | [cfe98d77-61] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:10:57 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:10:57 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:10:57 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"cf29f890-6208-4ca6-a80f-bb30075e2fcd", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"134", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56311"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:10:57 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.64E-5, duration(nanos)=66400.0, startTimeNanos=1146568346304100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7fe645af'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6abf6381} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"cf29f890-6208-4ca6-a80f-bb30075e2fcd", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"134", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56311"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:10:57 | TRACE | outbound route: 43b1c5a7, inbound: [cfe98d77-61] 
2025-04-03 02:10:57 | DEBUG | Will instrument the response
2025-04-03 02:10:57 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.4476813, duration(nanos)=4.476813E8, startTimeNanos=1146568346304100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7fe645af'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6abf6381}
2025-04-03 02:10:57 | TRACE | NettyWriteResponseFilter start inbound: 43b1c5a7, outbound: [cfe98d77-61] 
2025-04-03 02:10:57 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=PUT),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-03 02:11:58 | TRACE | Weights attr: {}
2025-04-03 02:11:58 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:11:58 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:11:58 | DEBUG | Route matched: account-service-route
2025-04-03 02:11:58 | DEBUG | Mapping [Exchange: PUT http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:11:58 | DEBUG | [70b97d12-62] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:11:58 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:11:58 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:11:58 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"16481b9d-080c-4c71-b596-ce8d34ff8043", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"134", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56383"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:11:58 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.58E-5, duration(nanos)=75800.0, startTimeNanos=1146629594336400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1f207cb1'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6d80af6d} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"16481b9d-080c-4c71-b596-ce8d34ff8043", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"134", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56383"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:11:58 | TRACE | outbound route: 05a895a6, inbound: [70b97d12-62] 
2025-04-03 02:12:16 | DEBUG | Will instrument the response
2025-04-03 02:12:16 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=17.9128537, duration(nanos)=1.79128537E10, startTimeNanos=1146629594336400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1f207cb1'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6d80af6d}
2025-04-03 02:12:16 | TRACE | NettyWriteResponseFilter start inbound: 05a895a6, outbound: [70b97d12-62] 
2025-04-03 02:12:16 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=PUT),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-03 02:13:09 | TRACE | Weights attr: {}
2025-04-03 02:13:09 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:13:09 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:13:09 | DEBUG | Route matched: account-service-route
2025-04-03 02:13:09 | DEBUG | Mapping [Exchange: PUT http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:13:09 | DEBUG | [47911414-63] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:13:09 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:13:09 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:13:09 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"0c3e14f4-503b-4549-80da-98415534aba5", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56402"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:13:09 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.52E-5, duration(nanos)=85200.0, startTimeNanos=1146699913457500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@76ffb3d9'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5bfe2876} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"0c3e14f4-503b-4549-80da-98415534aba5", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56402"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:13:09 | TRACE | outbound route: dba40732, inbound: [47911414-63] 
2025-04-03 02:13:09 | DEBUG | Will instrument the response
2025-04-03 02:13:09 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0208706, duration(nanos)=2.08706E7, startTimeNanos=1146699913457500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@76ffb3d9'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5bfe2876}
2025-04-03 02:13:09 | TRACE | NettyWriteResponseFilter start inbound: dba40732, outbound: [47911414-63] 
2025-04-03 02:13:09 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=PUT),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-03 02:13:51 | TRACE | Weights attr: {}
2025-04-03 02:13:51 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:13:51 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:13:51 | DEBUG | Route matched: account-service-route
2025-04-03 02:13:51 | DEBUG | Mapping [Exchange: PUT http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:13:51 | DEBUG | [47911414-64] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:13:51 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:13:51 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:13:51 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"21118ae5-cb0e-4dcb-b7cd-b354d92aa82e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56402"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:13:51 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.353E-4, duration(nanos)=235300.0, startTimeNanos=1146742157972100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@16959715'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@e24bca8} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"21118ae5-cb0e-4dcb-b7cd-b354d92aa82e", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56402"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:13:51 | TRACE | outbound route: 67439a08, inbound: [47911414-64] 
2025-04-03 02:15:10 | DEBUG | Will instrument the response
2025-04-03 02:15:10 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=79.316311, duration(nanos)=7.9316311E10, startTimeNanos=1146742157972100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@16959715'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@e24bca8}
2025-04-03 02:15:10 | TRACE | NettyWriteResponseFilter start inbound: 67439a08, outbound: [47911414-64] 
2025-04-03 02:15:10 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=PUT),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-03 02:15:14 | TRACE | Weights attr: {}
2025-04-03 02:15:14 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:15:14 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:15:14 | DEBUG | Route matched: account-service-route
2025-04-03 02:15:14 | DEBUG | Mapping [Exchange: PUT http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:15:14 | DEBUG | [b408656e-65] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:15:14 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:15:14 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:15:14 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"54d112a8-2ab6-4b56-a00e-b52c82a494bc", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56430"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:15:14 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=7.69E-5, duration(nanos)=76900.0, startTimeNanos=1146825677413200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@42e78df1'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@53555d47} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"54d112a8-2ab6-4b56-a00e-b52c82a494bc", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56430"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:15:14 | TRACE | outbound route: 0ed0a432, inbound: [b408656e-65] 
2025-04-03 02:15:55 | DEBUG | Will instrument the response
2025-04-03 02:15:55 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=40.326727, duration(nanos)=4.0326727E10, startTimeNanos=1146825677413200}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@42e78df1'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@53555d47}
2025-04-03 02:15:55 | TRACE | NettyWriteResponseFilter start inbound: 0ed0a432, outbound: [b408656e-65] 
2025-04-03 02:15:55 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=PUT),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-03 02:16:16 | TRACE | Weights attr: {}
2025-04-03 02:16:16 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:16:16 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:16:16 | DEBUG | Route matched: account-service-route
2025-04-03 02:16:16 | DEBUG | Mapping [Exchange: PUT http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:16:16 | DEBUG | [54cef77a-66] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:16:16 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:16:16 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:16:16 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"10f1e817-5554-44df-b46f-e18678eb9a52", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56452"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:16:16 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.628E-4, duration(nanos)=262800.0, startTimeNanos=1146887330289000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1039b557'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@78aa8bfa} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"10f1e817-5554-44df-b46f-e18678eb9a52", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56452"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:16:16 | TRACE | outbound route: e397f68e, inbound: [54cef77a-66] 
2025-04-03 02:16:42 | DEBUG | Will instrument the response
2025-04-03 02:16:42 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=25.7742656, duration(nanos)=2.57742656E10, startTimeNanos=1146887330289000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@1039b557'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@78aa8bfa}
2025-04-03 02:16:42 | TRACE | NettyWriteResponseFilter start inbound: e397f68e, outbound: [54cef77a-66] 
2025-04-03 02:16:42 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=PUT),tag(httpStatusCode=500),tag(outcome=SERVER_ERROR),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=INTERNAL_SERVER_ERROR)]
2025-04-03 02:17:11 | TRACE | Weights attr: {}
2025-04-03 02:17:11 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:17:11 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:17:11 | DEBUG | Route matched: account-service-route
2025-04-03 02:17:11 | DEBUG | Mapping [Exchange: PUT http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:17:11 | DEBUG | [54cef77a-67] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:17:11 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:17:11 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:17:11 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"bf17e9a7-5ce6-40f4-9fb7-90bc46f06beb", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56452"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:17:11 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.084E-4, duration(nanos)=108400.0, startTimeNanos=1146942144071000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4141f6c5'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6b56cb03} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"bf17e9a7-5ce6-40f4-9fb7-90bc46f06beb", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56452"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:17:11 | TRACE | outbound route: c09bc3e4, inbound: [54cef77a-67] 
2025-04-03 02:17:12 | DEBUG | Will instrument the response
2025-04-03 02:17:12 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.9206659, duration(nanos)=9.206659E8, startTimeNanos=1146942144071000}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4141f6c5'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@6b56cb03}
2025-04-03 02:17:12 | TRACE | NettyWriteResponseFilter start inbound: c09bc3e4, outbound: [54cef77a-67] 
2025-04-03 02:17:12 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=PUT),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 02:17:21 | TRACE | Weights attr: {}
2025-04-03 02:17:21 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:17:21 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:17:21 | DEBUG | Route matched: account-service-route
2025-04-03 02:17:21 | DEBUG | Mapping [Exchange: PUT http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:17:21 | DEBUG | [54cef77a-68] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:17:21 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:17:21 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:17:21 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"686d2dbb-f788-411a-898a-9005bfb1dad2", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"137", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56452"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:17:21 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=6.93E-5, duration(nanos)=69300.0, startTimeNanos=1146952716907400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2ab98c9a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1d3b499} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"686d2dbb-f788-411a-898a-9005bfb1dad2", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"137", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56452"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:17:21 | TRACE | outbound route: c09bc3e4, inbound: [54cef77a-68] 
2025-04-03 02:17:21 | DEBUG | Will instrument the response
2025-04-03 02:17:21 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.0768496, duration(nanos)=7.68496E7, startTimeNanos=1146952716907400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@2ab98c9a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@1d3b499}
2025-04-03 02:17:21 | TRACE | NettyWriteResponseFilter start inbound: c09bc3e4, outbound: [54cef77a-68] 
2025-04-03 02:17:21 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=PUT),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 02:17:26 | TRACE | Weights attr: {}
2025-04-03 02:17:26 | TRACE | Pattern "[/users/**]" does not match against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:17:26 | TRACE | Pattern "/accounts/**" matches against value "/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update"
2025-04-03 02:17:26 | DEBUG | Route matched: account-service-route
2025-04-03 02:17:26 | DEBUG | Mapping [Exchange: PUT http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update] to Route{id='account-service-route', uri=http://localhost:8083, order=0, predicate=Paths: [/accounts/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:17:26 | DEBUG | [54cef77a-69] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:17:26 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:17:26 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:17:26 | DEBUG | Will instrument the HTTP request headers [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"85773512-2bfe-478c-9825-ae847c98e6d3", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56452"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:17:26 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=8.95E-5, duration(nanos)=89500.0, startTimeNanos=1146956918421900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7125a5d3'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@8e361d5} created for the request. New headers are [Content-Type:"application/json", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"85773512-2bfe-478c-9825-ae847c98e6d3", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Content-Length:"136", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56452"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:17:26 | TRACE | outbound route: c09bc3e4, inbound: [54cef77a-69] 
2025-04-03 02:17:26 | DEBUG | Will instrument the response
2025-04-03 02:17:26 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='PUT', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='account-service-route', spring.cloud.gateway.route.uri='http://localhost:8083'], highCardinalityKeyValues=[http.uri='http://localhost:8080/accounts/payment-methods/api/v1/67ed43e47c82b1393121f319/update'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.1123686, duration(nanos)=1.123686E8, startTimeNanos=1146956918421900}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@7125a5d3'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@8e361d5}
2025-04-03 02:17:26 | TRACE | NettyWriteResponseFilter start inbound: c09bc3e4, outbound: [54cef77a-69] 
2025-04-03 02:17:26 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=PUT),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=account-service-route),tag(routeUri=http://localhost:8083),tag(status=OK)]
2025-04-03 02:20:07 | TRACE | Weights attr: {}
2025-04-03 02:20:07 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status"
2025-04-03 02:20:07 | DEBUG | Route matched: user-service-route
2025-04-03 02:20:07 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:20:07 | DEBUG | [659e1124-70] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:20:07 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:20:07 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:20:07 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"9cbe707b-56cb-46f1-b5d9-1e27c4de3540", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56525"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:20:07 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.16E-5, duration(nanos)=91600.0, startTimeNanos=1147117999964400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@50e9cd4a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7c3069f6} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"9cbe707b-56cb-46f1-b5d9-1e27c4de3540", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56525"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:20:07 | TRACE | outbound route: 5509ebaa, inbound: [659e1124-70] 
2025-04-03 02:20:28 | DEBUG | Will instrument the response
2025-04-03 02:20:28 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=21.2769084, duration(nanos)=2.12769084E10, startTimeNanos=1147117999964400}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@50e9cd4a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@7c3069f6}
2025-04-03 02:20:28 | TRACE | NettyWriteResponseFilter start inbound: 5509ebaa, outbound: [659e1124-70] 
2025-04-03 02:20:28 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=400),tag(outcome=CLIENT_ERROR),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=BAD_REQUEST)]
2025-04-03 02:21:10 | TRACE | Weights attr: {}
2025-04-03 02:21:10 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status"
2025-04-03 02:21:10 | DEBUG | Route matched: user-service-route
2025-04-03 02:21:10 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:21:10 | DEBUG | [0de26442-71] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:21:10 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:21:10 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:21:10 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"35dbbeb5-c84d-4602-805e-77f65193a149", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56533"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:21:10 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=9.33E-5, duration(nanos)=93300.0, startTimeNanos=1147181642711600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@e97826'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5d3aa5eb} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"35dbbeb5-c84d-4602-805e-77f65193a149", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56533"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:21:10 | TRACE | outbound route: eae063eb, inbound: [0de26442-71] 
2025-04-03 02:21:12 | DEBUG | Will instrument the response
2025-04-03 02:21:12 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.4348693, duration(nanos)=1.4348693E9, startTimeNanos=1147181642711600}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@e97826'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@5d3aa5eb}
2025-04-03 02:21:12 | TRACE | NettyWriteResponseFilter start inbound: eae063eb, outbound: [0de26442-71] 
2025-04-03 02:21:12 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-03 02:22:19 | TRACE | Weights attr: {}
2025-04-03 02:22:19 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status"
2025-04-03 02:22:19 | DEBUG | Route matched: user-service-route
2025-04-03 02:22:19 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:22:19 | DEBUG | [4753f7a1-72] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:22:19 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:22:19 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:22:19 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"d707d3d5-a155-4df1-acc1-0a145cd55b5b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56568"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:22:19 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=4.91E-5, duration(nanos)=49100.0, startTimeNanos=1147250257877100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@27da6ef5'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@41e1fbc8} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"d707d3d5-a155-4df1-acc1-0a145cd55b5b", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56568"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:22:19 | TRACE | outbound route: 238c6760, inbound: [4753f7a1-72] 
2025-04-03 02:22:19 | DEBUG | Will instrument the response
2025-04-03 02:22:19 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=0.3299672, duration(nanos)=3.299672E8, startTimeNanos=1147250257877100}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@27da6ef5'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@41e1fbc8}
2025-04-03 02:22:19 | TRACE | NettyWriteResponseFilter start inbound: 238c6760, outbound: [4753f7a1-72] 
2025-04-03 02:22:19 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-03 02:22:30 | TRACE | Weights attr: {}
2025-04-03 02:22:30 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status"
2025-04-03 02:22:30 | DEBUG | Route matched: user-service-route
2025-04-03 02:22:30 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:22:30 | DEBUG | [4753f7a1-73] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:22:30 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:22:30 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:22:30 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"8d5cca27-a060-4d82-9873-7077c0b32137", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56568"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:22:30 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=5.52E-5, duration(nanos)=55200.0, startTimeNanos=1147261678289500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5e84a7a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@593f6c29} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"8d5cca27-a060-4d82-9873-7077c0b32137", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56568"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:22:30 | TRACE | outbound route: 238c6760, inbound: [4753f7a1-73] 
2025-04-03 02:23:39 | DEBUG | Will instrument the response
2025-04-03 02:23:39 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=68.4833228, duration(nanos)=6.84833228E10, startTimeNanos=1147261678289500}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@5e84a7a'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@593f6c29}
2025-04-03 02:23:39 | TRACE | NettyWriteResponseFilter start inbound: 238c6760, outbound: [4753f7a1-73] 
2025-04-03 02:23:39 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-03 02:24:38 | TRACE | Weights attr: {}
2025-04-03 02:24:38 | TRACE | Pattern "/users/**" matches against value "/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status"
2025-04-03 02:24:38 | DEBUG | Route matched: user-service-route
2025-04-03 02:24:38 | DEBUG | Mapping [Exchange: GET http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST] to Route{id='user-service-route', uri=http://localhost:8081, order=0, predicate=Paths: [/users/**], match trailing slash: true, gatewayFilters=[], metadata={}}
2025-04-03 02:24:38 | DEBUG | [a442bd41-74] Mapped to org.springframework.cloud.gateway.handler.FilteringWebHandler@638d624a
2025-04-03 02:24:38 | DEBUG | Sorted gatewayFilterFactories: [[GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter@2831c178}, order = -2147483648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@430f0c63}, order = -2147482648], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@346690d6}, order = -1], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardPathFilter@2a191f83}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.GatewayMetricsFilter@3adbd038}, order = 0], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@70e8c019}, order = 10000], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter@5e976553}, order = 10150], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@c8531b9}, order = 2147483646], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.NettyRoutingFilter@5c70c771}, order = 2147483647], [GatewayFilterAdapter{delegate=org.springframework.cloud.gateway.filter.ForwardRoutingFilter@2a79da3a}, order = 2147483647]]
2025-04-03 02:24:38 | TRACE | RouteToRequestUrlFilter start
2025-04-03 02:24:38 | DEBUG | Will instrument the HTTP request headers [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"987e8b9f-7f6f-49e3-8fd0-5ca19d755987", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56619"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:24:38 | DEBUG | Client observation  {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=1.59E-4, duration(nanos)=159000.0, startTimeNanos=1147389614569300}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4f0ef191'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@308e4e5f} created for the request. New headers are [Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2QzZjFhYzNiYzZkNDQ4NjQ5MzE0ZmEiLCJpYXQiOjE3NDM2MDEyNDAsImV4cCI6MTc0MzY4NzY0MH0.DAZzQMwTHTIs377coW1f4l4lDlnl_u2N3K_MHrWoN50", User-Agent:"PostmanRuntime/7.43.3", Accept:"*/*", Postman-Token:"987e8b9f-7f6f-49e3-8fd0-5ca19d755987", Host:"localhost:8080", Accept-Encoding:"gzip, deflate, br", Forwarded:"proto=http;host="localhost:8080";for="[0:0:0:0:0:0:0:1]:56619"", X-Forwarded-For:"0:0:0:0:0:0:0:1", X-Forwarded-Proto:"http", X-Forwarded-Port:"8080", X-Forwarded-Host:"localhost:8080"]
2025-04-03 02:24:38 | TRACE | outbound route: a9876d82, inbound: [a442bd41-74] 
2025-04-03 02:24:41 | DEBUG | Will instrument the response
2025-04-03 02:24:41 | DEBUG | The response was handled for observation {name=http.client.requests(null), error=null, context=name='http.client.requests', contextualName='null', error='null', lowCardinalityKeyValues=[http.method='GET', http.status_code='UNKNOWN', spring.cloud.gateway.route.id='user-service-route', spring.cloud.gateway.route.uri='http://localhost:8081'], highCardinalityKeyValues=[http.uri='http://localhost:8080/users/api/v1/internal/users/67d3f1ac3bc6d448649314fa/verification-status?requestingService=TEST'], map=[class io.micrometer.core.instrument.LongTaskTimer$Sample='SampleImpl{duration(seconds)=2.394293, duration(nanos)=2.394293E9, startTimeNanos=1147389614569300}', class io.micrometer.core.instrument.Timer$Sample='io.micrometer.core.instrument.Timer$Sample@4f0ef191'], parentObservation=org.springframework.security.web.server.ObservationWebFilterChainDecorator$PhasedObservation@308e4e5f}
2025-04-03 02:24:41 | TRACE | NettyWriteResponseFilter start inbound: a9876d82, outbound: [a442bd41-74] 
2025-04-03 02:24:41 | TRACE | spring.cloud.gateway.requests tags: [tag(httpMethod=GET),tag(httpStatusCode=200),tag(outcome=SUCCESSFUL),tag(routeId=user-service-route),tag(routeUri=http://localhost:8081),tag(status=OK)]
2025-04-03 02:25:29 | DEBUG | Stopped RedisMessageListenerContainer
2025-04-03 02:25:30 | INFO  | Commencing graceful shutdown. Waiting for active requests to complete
2025-04-03 02:25:30 | INFO  | Graceful shutdown complete
2025-04-03 02:25:31 | DEBUG | closeAsync()
2025-04-03 02:25:31 | DEBUG | [channel=0xef4ffaaa, /192.168.102.3:54869 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] closeAsync()
2025-04-03 02:25:32 | DEBUG | [channel=0xef4ffaaa, /192.168.102.3:54869 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] channelInactive()
2025-04-03 02:25:32 | DEBUG | Initiate shutdown (0, 100, MILLISECONDS)
2025-04-03 02:25:32 | DEBUG | [channel=0xef4ffaaa, /192.168.102.3:54869 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1] deactivating endpoint handler
2025-04-03 02:25:33 | DEBUG | [channel=0xef4ffaaa, /192.168.102.3:54869 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] channelInactive() done
2025-04-03 02:25:33 | DEBUG | [channel=0xef4ffaaa, /192.168.102.3:54869 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] channelInactive()
2025-04-03 02:25:33 | DEBUG | [channel=0xef4ffaaa, /192.168.102.3:54869 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, last known addr=redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694] Reconnect scheduling disabled
2025-04-03 02:25:33 | DEBUG | [channel=0xef4ffaaa, /192.168.102.3:54869 -> redis-14694.c258.us-east-1-4.ec2.redns.redis-cloud.com/50.17.110.170:14694, epid=0x1, chid=0x3] channelUnregistered()
2025-04-03 02:25:34 | DEBUG | Release executor io.netty.channel.nio.NioEventLoopGroup@5ee581db
2025-04-03 02:25:37 | DEBUG | Initiate shutdown (0, 2, SECONDS)
2025-04-03 02:25:38 | DEBUG | Initiate shutdown (0, 2, SECONDS)
