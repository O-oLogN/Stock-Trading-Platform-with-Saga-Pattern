spring.application.name=kafka-management-service

#kafka config
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=saga-orch
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.stocktrading.kafka.model
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.data.mongodb.uri=mongodb+srv://admin:hw445Rl1pEAXqhti@cluster-1.rylgk.mongodb.net/?retryWrites=true&w=majority&appName=Cluster-1
spring.data.mongodb.database=OrchestratorServiceDB

# Existing deposit saga topics
kafka.topics.account-commands=account.commands.deposit
kafka.topics.payment-commands=payment.commands.deposit
kafka.topics.user-commands.deposit=user.commands.deposit
kafka.topics.account-events=account.events.deposit
kafka.topics.payment-events=payment.events.deposit
kafka.topics.user-events.deposit=user.events.deposit

# New order-buy saga topics
kafka.topics.user-commands.order-buy=user.commands.order-buy
kafka.topics.user-events.order-buy=user.events.order-buy
kafka.topics.account-commands.order-buy=account.commands.order-buy
kafka.topics.account-events.order-buy=account.events.order-buy
kafka.topics.order-commands=order.commands.order-buy
kafka.topics.order-events=order.events.order-buy
kafka.topics.market-commands=market.commands.order-buy
kafka.topics.market-events=market.events.order-buy
kafka.topics.broker-commands=broker.commands.order-buy
kafka.topics.broker-events=broker.events.order-buy

# Dead letter queue
kafka.topics.dlq=saga.dlq

#
#saga.deposit.timeout.verify-identity=5000
#saga.deposit.timeout.validate-payment=5000
#saga.deposit.timeout.create-transaction=10000
#saga.deposit.timeout.process-payment=30000
#saga.deposit.timeout.update-transaction=10000
#saga.deposit.timeout.update-balance=10000
#saga.deposit.retry.max-attempts=3


# Set these to a very large value, e.g., 999999999 milliseconds
saga.deposit.timeout.verify-identity=999999999
saga.deposit.timeout.validate-payment=999999999
saga.deposit.timeout.create-transaction=999999999
saga.deposit.timeout.process-payment=999999999
saga.deposit.timeout.update-transaction=999999999
saga.deposit.timeout.update-balance=999999999
saga.timeout.default=999999999
saga.deposit.retry.max-attempts=0

saga.deposit.retry.backoff-initial-interval=1000
saga.deposit.retry.backoff-multiplier=2.0

server.port=8085

management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.[http.server.requests]=true
management.endpoint.health.show-details=always

logging.level.root=INFO
logging.level.com.stocktrading.kafka=DEBUG
logging.level.org.springframework.kafka=INFO
logging.level.org.apache.kafka=WARN